{
    "__meta": {
        "base": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "endpoints": [
            {
                "deprecated": false,
                "desc": "This API sets the given user's presence state. When setting the status,\nthe activity time is updated to reflect that activity; the client does\nnot need to specify the ``last_active_ago`` field. You cannot set the\npresence state of another user.",
                "example": {
                    "req": "PUT /_matrix/client/%CLIENT_MAJOR_VERSION%/presence/%40alice%3Aexample.com/status HTTP/1.1\nContent-Type: application/json\n\n{\n  \"presence\": \"online\",\n  \"status_msg\": \"I am here.\"\n}"
                },
                "method": "PUT",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/presence/{userId}/status",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "**Required.** The new presence state. One of: [\"online\", \"offline\", \"unavailable\"]",
                            "key": "presence",
                            "required": true,
                            "title": "enum"
                        },
                        {
                            "desc": "The status message to attach to this state.",
                            "key": "status_msg",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "path": [
                        {
                            "desc": "**Required.** The user whose presence state to update.",
                            "key": "userId",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [],
                "responses": [
                    {
                        "code": 200,
                        "description": "The new presence state was set.",
                        "example": "{}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Update this user's presence state."
            },
            {
                "deprecated": false,
                "desc": "Get the given user's presence state.",
                "example": {
                    "req": "GET /_matrix/client/%CLIENT_MAJOR_VERSION%/presence/%40alice%3Aexample.com/status HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/presence/{userId}/status",
                "rate_limited": false,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** The user whose presence state to get.",
                            "key": "userId",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** This user's presence. One of: [\"online\", \"offline\", \"unavailable\"]",
                                "key": "presence",
                                "required": true,
                                "title": "enum"
                            },
                            {
                                "desc": "The length of time in milliseconds since an action was performed\nby this user.",
                                "key": "last_active_ago",
                                "required": false,
                                "title": "integer"
                            },
                            {
                                "desc": "The state message for this user if one was set.",
                                "key": "status_msg",
                                "required": false,
                                "title": "string or null"
                            },
                            {
                                "desc": "Whether the user is currently active",
                                "key": "currently_active",
                                "required": false,
                                "title": "boolean"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The presence state for this user.",
                        "example": "{\n  \"presence\": \"unavailable\",\n  \"last_active_ago\": 420845\n}"
                    },
                    {
                        "code": 403,
                        "description": "You are not allowed to see this user's presence status.",
                        "example": "{\n  \"errcode\": \"M_FORBIDDEN\",\n  \"error\": \"You are not allowed to see their presence\"\n}"
                    },
                    {
                        "code": 404,
                        "description": "There is no presence state for this user. This user may not exist or\nisn't exposing presence information to you.",
                        "example": "{\n  \"errcode\": \"M_UNKNOWN\",\n  \"error\": \"An unknown error occurred\"\n}"
                    }
                ],
                "title": "Get this user's presence state."
            }
        ],
        "group": "presence_cs"
    },
    "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
    "consumes": [
        "application/json"
    ],
    "host": "localhost:8008",
    "info": {
        "title": "Matrix Client-Server Presence API",
        "version": "1.0.0"
    },
    "paths": {
        "/presence/{userId}/status": {
            "get": {
                "description": "Get the given user's presence state.",
                "operationId": "getPresence",
                "parameters": [
                    {
                        "description": "The user whose presence state to get.",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "string",
                        "x-example": "@alice:example.com"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The presence state for this user.",
                        "examples": {
                            "application/json": {
                                "last_active_ago": 420845,
                                "presence": "unavailable"
                            }
                        },
                        "schema": {
                            "properties": {
                                "currently_active": {
                                    "description": "Whether the user is currently active",
                                    "type": "boolean"
                                },
                                "last_active_ago": {
                                    "description": "The length of time in milliseconds since an action was performed\nby this user.",
                                    "type": "integer"
                                },
                                "presence": {
                                    "description": "This user's presence.",
                                    "enum": [
                                        "online",
                                        "offline",
                                        "unavailable"
                                    ],
                                    "type": "string"
                                },
                                "status_msg": {
                                    "description": "The state message for this user if one was set.",
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                }
                            },
                            "required": [
                                "presence"
                            ],
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "You are not allowed to see this user's presence status.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_FORBIDDEN",
                                "error": "You are not allowed to see their presence"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "There is no presence state for this user. This user may not exist or\nisn't exposing presence information to you.",
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Get this user's presence state.",
                "tags": [
                    "Presence"
                ]
            },
            "put": {
                "description": "This API sets the given user's presence state. When setting the status,\nthe activity time is updated to reflect that activity; the client does\nnot need to specify the ``last_active_ago`` field. You cannot set the\npresence state of another user.",
                "operationId": "setPresence",
                "parameters": [
                    {
                        "description": "The user whose presence state to update.",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "string",
                        "x-example": "@alice:example.com"
                    },
                    {
                        "description": "The updated presence state.",
                        "in": "body",
                        "name": "presenceState",
                        "required": true,
                        "schema": {
                            "example": {
                                "presence": "online",
                                "status_msg": "I am here."
                            },
                            "properties": {
                                "presence": {
                                    "description": "The new presence state.",
                                    "enum": [
                                        "online",
                                        "offline",
                                        "unavailable"
                                    ],
                                    "type": "string"
                                },
                                "status_msg": {
                                    "description": "The status message to attach to this state.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "presence"
                            ],
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The new presence state was set.",
                        "examples": {
                            "application/json": {}
                        },
                        "schema": {
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Update this user's presence state.",
                "tags": [
                    "Presence"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https",
        "http"
    ],
    "securityDefinitions": {
        "accessToken": {
            "description": "The access_token returned by a call to ``/login`` or ``/register``",
            "in": "query",
            "name": "access_token",
            "type": "apiKey"
        }
    },
    "swagger": "2.0"
}