{
    "__meta": {
        "base": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "endpoints": [
            {
                "deprecated": false,
                "desc": "Gets information about the owner of a given access token. \n\nNote that, as with the rest of the Client-Server API, \nApplication Services may masquerade as users within their \nnamespace by giving a ``user_id`` query parameter. In this \nsituation, the server should verify that the given ``user_id``\nis registered by the appservice, and return it in the response \nbody.",
                "example": {
                    "req": "GET /_matrix/client/%CLIENT_MAJOR_VERSION%/account/whoami HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/account/whoami",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {},
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The user id that owns the access token.",
                                "key": "user_id",
                                "required": true,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The token belongs to a known user.",
                        "example": "{\n  \"user_id\": \"@joe:example.org\"\n}"
                    },
                    {
                        "code": 401,
                        "description": "The token is not recognised",
                        "example": "{\n  \"errcode\": \"M_UNKNOWN_TOKEN\",\n  \"error\": \"Unrecognised access token.\"\n}"
                    },
                    {
                        "code": 403,
                        "description": "The appservice cannot masquerade as the user or has not registered them.",
                        "example": "{\n  \"errcode\": \"M_FORBIDDEN\",\n  \"error\": \"Application service has not registered this user.\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Gets information about the owner of an access token."
            }
        ],
        "group": "whoami_cs"
    },
    "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
    "host": "localhost:8008",
    "info": {
        "title": "Matrix Client-Server Account Identification API",
        "version": "1.0.0"
    },
    "paths": {
        "/account/whoami": {
            "get": {
                "description": "Gets information about the owner of a given access token. \n\nNote that, as with the rest of the Client-Server API, \nApplication Services may masquerade as users within their \nnamespace by giving a ``user_id`` query parameter. In this \nsituation, the server should verify that the given ``user_id``\nis registered by the appservice, and return it in the response \nbody.",
                "operationId": "getTokenOwner",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The token belongs to a known user.",
                        "examples": {
                            "application/json": {
                                "user_id": "@joe:example.org"
                            }
                        },
                        "schema": {
                            "properties": {
                                "user_id": {
                                    "description": "The user id that owns the access token.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user_id"
                            ],
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "The token is not recognised",
                        "examples": {
                            "application/json": {
                                "errcode": "M_UNKNOWN_TOKEN",
                                "error": "Unrecognised access token."
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "The appservice cannot masquerade as the user or has not registered them.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_FORBIDDEN",
                                "error": "Application service has not registered this user."
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Gets information about the owner of an access token.",
                "tags": [
                    "User data"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https",
        "http"
    ],
    "securityDefinitions": {
        "accessToken": {
            "description": "The access_token returned by a call to ``/login`` or ``/register``",
            "in": "query",
            "name": "access_token",
            "type": "apiKey"
        }
    },
    "swagger": "2.0"
}