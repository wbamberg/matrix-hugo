{
    "__meta": {
        "base": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "endpoints": [
            {
                "deprecated": false,
                "desc": "Create a new room with various configuration options.\n\nThe server MUST apply the normal state resolution rules when creating\nthe new room, including checking power levels for each event. It MUST\napply the events implied by the request in the following order:\n\n1. The ``m.room.create`` event itself. Must be the first event in the\n   room.\n\n2. An ``m.room.member`` event for the creator to join the room. This is\n   needed so the remaining events can be sent.\n\n3. A default ``m.room.power_levels`` event, giving the room creator\n   (and not other members) permission to send state events. Overridden\n   by the ``power_level_content_override`` parameter.\n\n4. Events set by the ``preset``. Currently these are the ``m.room.join_rules``,\n   ``m.room.history_visibility``, and ``m.room.guest_access`` state events.\n\n5. Events listed in ``initial_state``, in the order that they are\n   listed.\n\n6. Events implied by ``name`` and ``topic`` (``m.room.name`` and ``m.room.topic``\n   state events).\n\n7. Invite events implied by ``invite`` and ``invite_3pid`` (``m.room.member`` with\n   ``membership: invite`` and ``m.room.third_party_invite``).\n\nThe available presets do the following with respect to room state:\n\n========================  ==============  ======================  ================  =========\n         Preset           ``join_rules``  ``history_visibility``  ``guest_access``  Other\n========================  ==============  ======================  ================  =========\n``private_chat``          ``invite``      ``shared``              ``can_join``\n``trusted_private_chat``  ``invite``      ``shared``              ``can_join``      All invitees are given the same power level as the room creator.\n``public_chat``           ``public``      ``shared``              ``forbidden``\n========================  ==============  ======================  ================  =========\n\nThe server will create a ``m.room.create`` event in the room with the\nrequesting user as the creator, alongside other keys provided in the\n``creation_content``.",
                "example": {
                    "req": "POST /_matrix/client/%CLIENT_MAJOR_VERSION%/createRoom HTTP/1.1\nContent-Type: application/json\n\n{\n  \"preset\": \"public_chat\",\n  \"room_alias_name\": \"thepub\",\n  \"name\": \"The Grand Duke Pub\",\n  \"topic\": \"All about happy hour\",\n  \"creation_content\": {\n    \"m.federate\": false\n  }\n}"
                },
                "method": "POST",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/createRoom",
                "rate_limited": false,
                "req_body_tables": [
                    [
                        "Invite3pid",
                        null,
                        [
                            {
                                "desc": "**Required.** The hostname+port of the identity server which should be used for third party identifier lookups.",
                                "key": "id_server",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** An access token previously registered with the identity server. Servers\ncan treat this as optional to distinguish between r0.5-compatible clients\nand this specification version.",
                                "key": "id_access_token",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** The kind of address being passed in the address field, for example ``email``.",
                                "key": "medium",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** The invitee's third party identifier.",
                                "key": "address",
                                "required": true,
                                "title": "string"
                            }
                        ]
                    ],
                    [
                        "StateEvent",
                        null,
                        [
                            {
                                "desc": "**Required.** The type of event to send.",
                                "key": "type",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "The state_key of the state event. Defaults to an empty string.",
                                "key": "state_key",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** The content of the event.",
                                "key": "content",
                                "required": true,
                                "title": "object"
                            }
                        ]
                    ]
                ],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "A ``public`` visibility indicates that the room will be shown\nin the published room list. A ``private`` visibility will hide\nthe room from the published room list. Rooms default to\n``private`` visibility if this key is not included. NB: This\nshould not be confused with ``join_rules`` which also uses the\nword ``public``. One of: [\"public\", \"private\"]",
                            "key": "visibility",
                            "required": false,
                            "title": "enum"
                        },
                        {
                            "desc": "The desired room alias **local part**. If this is included, a\nroom alias will be created and mapped to the newly created\nroom. The alias will belong on the *same* homeserver which\ncreated the room. For example, if this was set to \"foo\" and\nsent to the homeserver \"example.com\" the complete room alias\nwould be ``#foo:example.com``.\n\nThe complete room alias will become the canonical alias for\nthe room.",
                            "key": "room_alias_name",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "If this is included, an ``m.room.name`` event will be sent\ninto the room to indicate the name of the room. See Room\nEvents for more information on ``m.room.name``.",
                            "key": "name",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "If this is included, an ``m.room.topic`` event will be sent\ninto the room to indicate the topic for the room. See Room\nEvents for more information on ``m.room.topic``.",
                            "key": "topic",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "A list of user IDs to invite to the room. This will tell the\nserver to invite everyone in the list to the newly created room.",
                            "key": "invite",
                            "required": false,
                            "title": "[string]"
                        },
                        {
                            "desc": "A list of objects representing third party IDs to invite into\nthe room.",
                            "key": "invite_3pid",
                            "required": false,
                            "title": "[Invite3pid]"
                        },
                        {
                            "desc": "The room version to set for the room. If not provided, the homeserver is\nto use its configured default. If provided, the homeserver will return a\n400 error with the errcode ``M_UNSUPPORTED_ROOM_VERSION`` if it does not\nsupport the room version.",
                            "key": "room_version",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "Extra keys, such as ``m.federate``, to be added to the content\nof the `m.room.create`_ event. The server will clobber the following\nkeys: ``creator``, ``room_version``. Future versions of the specification\nmay allow the server to clobber other keys.",
                            "key": "creation_content",
                            "required": false,
                            "title": "CreationContent"
                        },
                        {
                            "desc": "A list of state events to set in the new room. This allows\nthe user to override the default state events set in the new\nroom. The expected format of the state events are an object\nwith type, state_key and content keys set.\n\nTakes precedence over events set by ``preset``, but gets\noverriden by ``name`` and ``topic`` keys.",
                            "key": "initial_state",
                            "required": false,
                            "title": "[StateEvent]"
                        },
                        {
                            "desc": "Convenience parameter for setting various default state events\nbased on a preset.\n\nIf unspecified, the server should use the ``visibility`` to determine\nwhich preset to use. A visbility of ``public`` equates to a preset of\n``public_chat`` and ``private`` visibility equates to a preset of\n``private_chat``. One of: [\"private_chat\", \"public_chat\", \"trusted_private_chat\"]",
                            "key": "preset",
                            "required": false,
                            "title": "enum"
                        },
                        {
                            "desc": "This flag makes the server set the ``is_direct`` flag on the\n``m.room.member`` events sent to the users in ``invite`` and\n``invite_3pid``. See `Direct Messaging`_ for more information.",
                            "key": "is_direct",
                            "required": false,
                            "title": "boolean"
                        },
                        {
                            "desc": "The power level content to override in the default power level\nevent. This object is applied on top of the generated `m.room.power_levels`_\nevent content prior to it being sent to the room. Defaults to\noverriding nothing.",
                            "key": "power_level_content_override",
                            "required": false,
                            "title": "Power Level Event Content"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The created room's ID.",
                                "key": "room_id",
                                "required": true,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "Information about the newly created room.",
                        "example": "{\n  \"room_id\": \"!sefiuhWgwghwWgh:example.com\"\n}"
                    },
                    {
                        "code": 400,
                        "description": "\nThe request is invalid. A meaningful ``errcode`` and description\nerror text will be returned. Example reasons for rejection include:\n\n- The request body is malformed (``errcode`` set to ``M_BAD_JSON``\n  or ``M_NOT_JSON``).\n\n- The room alias specified is already taken (``errcode`` set to\n  ``M_ROOM_IN_USE``).\n\n- The initial state implied by the parameters to the request is\n  invalid: for example, the user's ``power_level`` is set below\n  that necessary to set the room name (``errcode`` set to\n  ``M_INVALID_ROOM_STATE``).\n\n- The homeserver doesn't support the requested room version, or\n  one or more users being invited to the new room are residents\n  of a homeserver which does not support the requested room version.\n  The ``errcode`` will be ``M_UNSUPPORTED_ROOM_VERSION`` in these\n  cases.",
                        "example": "{\n  \"errcode\": \"M_UNKNOWN\",\n  \"error\": \"An unknown error occurred\"\n}"
                    }
                ],
                "title": "Create a new room"
            }
        ],
        "group": "create_room_cs"
    },
    "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
    "consumes": [
        "application/json"
    ],
    "host": "localhost:8008",
    "info": {
        "title": "Matrix Client-Server Room Creation API",
        "version": "1.0.0"
    },
    "paths": {
        "/createRoom": {
            "post": {
                "description": "Create a new room with various configuration options.\n\nThe server MUST apply the normal state resolution rules when creating\nthe new room, including checking power levels for each event. It MUST\napply the events implied by the request in the following order:\n\n1. The ``m.room.create`` event itself. Must be the first event in the\n   room.\n\n2. An ``m.room.member`` event for the creator to join the room. This is\n   needed so the remaining events can be sent.\n\n3. A default ``m.room.power_levels`` event, giving the room creator\n   (and not other members) permission to send state events. Overridden\n   by the ``power_level_content_override`` parameter.\n\n4. Events set by the ``preset``. Currently these are the ``m.room.join_rules``,\n   ``m.room.history_visibility``, and ``m.room.guest_access`` state events.\n\n5. Events listed in ``initial_state``, in the order that they are\n   listed.\n\n6. Events implied by ``name`` and ``topic`` (``m.room.name`` and ``m.room.topic``\n   state events).\n\n7. Invite events implied by ``invite`` and ``invite_3pid`` (``m.room.member`` with\n   ``membership: invite`` and ``m.room.third_party_invite``).\n\nThe available presets do the following with respect to room state:\n\n========================  ==============  ======================  ================  =========\n         Preset           ``join_rules``  ``history_visibility``  ``guest_access``  Other\n========================  ==============  ======================  ================  =========\n``private_chat``          ``invite``      ``shared``              ``can_join``\n``trusted_private_chat``  ``invite``      ``shared``              ``can_join``      All invitees are given the same power level as the room creator.\n``public_chat``           ``public``      ``shared``              ``forbidden``\n========================  ==============  ======================  ================  =========\n\nThe server will create a ``m.room.create`` event in the room with the\nrequesting user as the creator, alongside other keys provided in the\n``creation_content``.",
                "operationId": "createRoom",
                "parameters": [
                    {
                        "description": "The desired room configuration.",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "example": {
                                "creation_content": {
                                    "m.federate": false
                                },
                                "name": "The Grand Duke Pub",
                                "preset": "public_chat",
                                "room_alias_name": "thepub",
                                "topic": "All about happy hour"
                            },
                            "properties": {
                                "creation_content": {
                                    "description": "Extra keys, such as ``m.federate``, to be added to the content\nof the `m.room.create`_ event. The server will clobber the following\nkeys: ``creator``, ``room_version``. Future versions of the specification\nmay allow the server to clobber other keys.",
                                    "title": "CreationContent",
                                    "type": "object"
                                },
                                "initial_state": {
                                    "description": "A list of state events to set in the new room. This allows\nthe user to override the default state events set in the new\nroom. The expected format of the state events are an object\nwith type, state_key and content keys set.\n\nTakes precedence over events set by ``preset``, but gets\noverriden by ``name`` and ``topic`` keys.",
                                    "items": {
                                        "properties": {
                                            "content": {
                                                "description": "The content of the event.",
                                                "type": "object"
                                            },
                                            "state_key": {
                                                "description": "The state_key of the state event. Defaults to an empty string.",
                                                "type": "string"
                                            },
                                            "type": {
                                                "description": "The type of event to send.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "content"
                                        ],
                                        "title": "StateEvent",
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "invite": {
                                    "description": "A list of user IDs to invite to the room. This will tell the\nserver to invite everyone in the list to the newly created room.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "invite_3pid": {
                                    "description": "A list of objects representing third party IDs to invite into\nthe room.",
                                    "items": {
                                        "properties": {
                                            "address": {
                                                "description": "The invitee's third party identifier.",
                                                "type": "string"
                                            },
                                            "id_access_token": {
                                                "description": "An access token previously registered with the identity server. Servers\ncan treat this as optional to distinguish between r0.5-compatible clients\nand this specification version.",
                                                "type": "string"
                                            },
                                            "id_server": {
                                                "description": "The hostname+port of the identity server which should be used for third party identifier lookups.",
                                                "type": "string"
                                            },
                                            "medium": {
                                                "description": "The kind of address being passed in the address field, for example ``email``.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "id_server",
                                            "id_access_token",
                                            "medium",
                                            "address"
                                        ],
                                        "title": "Invite3pid",
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "is_direct": {
                                    "description": "This flag makes the server set the ``is_direct`` flag on the\n``m.room.member`` events sent to the users in ``invite`` and\n``invite_3pid``. See `Direct Messaging`_ for more information.",
                                    "type": "boolean"
                                },
                                "name": {
                                    "description": "If this is included, an ``m.room.name`` event will be sent\ninto the room to indicate the name of the room. See Room\nEvents for more information on ``m.room.name``.",
                                    "type": "string"
                                },
                                "power_level_content_override": {
                                    "description": "The power level content to override in the default power level\nevent. This object is applied on top of the generated `m.room.power_levels`_\nevent content prior to it being sent to the room. Defaults to\noverriding nothing.",
                                    "title": "Power Level Event Content",
                                    "type": "object"
                                },
                                "preset": {
                                    "description": "Convenience parameter for setting various default state events\nbased on a preset.\n\nIf unspecified, the server should use the ``visibility`` to determine\nwhich preset to use. A visbility of ``public`` equates to a preset of\n``public_chat`` and ``private`` visibility equates to a preset of\n``private_chat``.",
                                    "enum": [
                                        "private_chat",
                                        "public_chat",
                                        "trusted_private_chat"
                                    ],
                                    "type": "string"
                                },
                                "room_alias_name": {
                                    "description": "The desired room alias **local part**. If this is included, a\nroom alias will be created and mapped to the newly created\nroom. The alias will belong on the *same* homeserver which\ncreated the room. For example, if this was set to \"foo\" and\nsent to the homeserver \"example.com\" the complete room alias\nwould be ``#foo:example.com``.\n\nThe complete room alias will become the canonical alias for\nthe room.",
                                    "type": "string"
                                },
                                "room_version": {
                                    "description": "The room version to set for the room. If not provided, the homeserver is\nto use its configured default. If provided, the homeserver will return a\n400 error with the errcode ``M_UNSUPPORTED_ROOM_VERSION`` if it does not\nsupport the room version.",
                                    "example": "1",
                                    "type": "string"
                                },
                                "topic": {
                                    "description": "If this is included, an ``m.room.topic`` event will be sent\ninto the room to indicate the topic for the room. See Room\nEvents for more information on ``m.room.topic``.",
                                    "type": "string"
                                },
                                "visibility": {
                                    "description": "A ``public`` visibility indicates that the room will be shown\nin the published room list. A ``private`` visibility will hide\nthe room from the published room list. Rooms default to\n``private`` visibility if this key is not included. NB: This\nshould not be confused with ``join_rules`` which also uses the\nword ``public``.",
                                    "enum": [
                                        "public",
                                        "private"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the newly created room.",
                        "examples": {
                            "application/json": {
                                "room_id": "!sefiuhWgwghwWgh:example.com"
                            }
                        },
                        "schema": {
                            "description": "Information about the newly created room.",
                            "properties": {
                                "room_id": {
                                    "description": "The created room's ID.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "room_id"
                            ],
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "\nThe request is invalid. A meaningful ``errcode`` and description\nerror text will be returned. Example reasons for rejection include:\n\n- The request body is malformed (``errcode`` set to ``M_BAD_JSON``\n  or ``M_NOT_JSON``).\n\n- The room alias specified is already taken (``errcode`` set to\n  ``M_ROOM_IN_USE``).\n\n- The initial state implied by the parameters to the request is\n  invalid: for example, the user's ``power_level`` is set below\n  that necessary to set the room name (``errcode`` set to\n  ``M_INVALID_ROOM_STATE``).\n\n- The homeserver doesn't support the requested room version, or\n  one or more users being invited to the new room are residents\n  of a homeserver which does not support the requested room version.\n  The ``errcode`` will be ``M_UNSUPPORTED_ROOM_VERSION`` in these\n  cases.",
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Create a new room",
                "tags": [
                    "Room creation"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https",
        "http"
    ],
    "securityDefinitions": {
        "accessToken": {
            "description": "The access_token returned by a call to ``/login`` or ``/register``",
            "in": "query",
            "name": "access_token",
            "type": "apiKey"
        }
    },
    "swagger": "2.0"
}