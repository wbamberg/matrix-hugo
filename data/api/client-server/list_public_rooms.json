{
    "__meta": {
        "base": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "endpoints": [
            {
                "deprecated": false,
                "desc": "Gets the visibility of a given room on the server's public room directory.",
                "example": {
                    "req": "GET /_matrix/client/%CLIENT_MAJOR_VERSION%/directory/list/room/%21curbf%3Amatrix.org HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/directory/list/room/{roomId}",
                "rate_limited": false,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** The room ID.",
                            "key": "roomId",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": false,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "The visibility of the room in the directory. One of: [\"private\", \"public\"]",
                                "key": "visibility",
                                "required": false,
                                "title": "enum"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The visibility of the room in the directory",
                        "example": "{\n  \"visibility\": \"public\"\n}"
                    },
                    {
                        "code": 404,
                        "description": "The room is not known to the server",
                        "example": "{\n  \"errcode\": \"M_NOT_FOUND\",\n  \"error\": \"Room not found\"\n}"
                    }
                ],
                "title": "Gets the visibility of a room in the directory"
            },
            {
                "deprecated": false,
                "desc": "Sets the visibility of a given room in the server's public room\ndirectory.\n\nServers may choose to implement additional access control checks\nhere, for instance that room visibility can only be changed by \nthe room creator or a server administrator.",
                "example": {
                    "req": "PUT /_matrix/client/%CLIENT_MAJOR_VERSION%/directory/list/room/%21curbf%3Amatrix.org HTTP/1.1\nContent-Type: application/json\n\n{\n  \"visibility\": \"public\"\n}"
                },
                "method": "PUT",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/directory/list/room/{roomId}",
                "rate_limited": false,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "The new visibility setting for the room. \nDefaults to 'public'. One of: [\"private\", \"public\"]",
                            "key": "visibility",
                            "required": false,
                            "title": "enum"
                        }
                    ],
                    "path": [
                        {
                            "desc": "**Required.** The room ID.",
                            "key": "roomId",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [],
                "responses": [
                    {
                        "code": 200,
                        "description": "The visibility was updated, or no change was needed.",
                        "example": "{}"
                    },
                    {
                        "code": 404,
                        "description": "The room is not known to the server",
                        "example": "{\n  \"errcode\": \"M_NOT_FOUND\",\n  \"error\": \"Room not found\"\n}"
                    }
                ],
                "title": "Sets the visibility of a room in the room directory"
            },
            {
                "deprecated": false,
                "desc": "Lists the public rooms on the server.\n\nThis API returns paginated responses. The rooms are ordered by the number\nof joined members, with the largest rooms first.",
                "example": {
                    "req": "GET /_matrix/client/%CLIENT_MAJOR_VERSION%/publicRooms HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/publicRooms",
                "rate_limited": false,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "query": [
                        {
                            "desc": "Limit the number of results returned.",
                            "key": "limit",
                            "required": false,
                            "title": "integer"
                        },
                        {
                            "desc": "A pagination token from a previous request, allowing clients to\nget the next (or previous) batch of rooms.\nThe direction of pagination is specified solely by which token\nis supplied, rather than via an explicit flag.",
                            "key": "since",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "The server to fetch the public room lists from. Defaults to the\nlocal server.",
                            "key": "server",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": false,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** A paginated chunk of public rooms.",
                                "key": "chunk",
                                "required": true,
                                "title": "[PublicRoomsChunk]"
                            },
                            {
                                "desc": "A pagination token for the response. The absence of this token\nmeans there are no more results to fetch and the client should\nstop paginating.",
                                "key": "next_batch",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "A pagination token that allows fetching previous results. The\nabsence of this token means there are no results before this\nbatch, i.e. this is the first batch.",
                                "key": "prev_batch",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "An estimate on the total number of public rooms, if the\nserver has an estimate.",
                                "key": "total_room_count_estimate",
                                "required": false,
                                "title": "integer"
                            }
                        ]
                    ],
                    [
                        "PublicRoomsChunk",
                        null,
                        [
                            {
                                "desc": "Aliases of the room. May be empty.",
                                "key": "aliases",
                                "required": false,
                                "title": "[string]"
                            },
                            {
                                "desc": "The canonical alias of the room, if any.",
                                "key": "canonical_alias",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "The name of the room, if any.",
                                "key": "name",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** The number of members joined to the room.",
                                "key": "num_joined_members",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** The ID of the room.",
                                "key": "room_id",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "The topic of the room, if any.",
                                "key": "topic",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** Whether the room may be viewed by guest users without joining.",
                                "key": "world_readable",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "**Required.** Whether guest users may join the room and participate in it.\nIf they can, they will be subject to ordinary power level\nrules like any other user.",
                                "key": "guest_can_join",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "The URL for the room's avatar, if one is set.",
                                "key": "avatar_url",
                                "required": false,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "A list of the rooms on the server.",
                        "example": "{\n  \"chunk\": [\n    {\n      \"aliases\": [\n        \"#murrays:cheese.bar\"\n      ],\n      \"avatar_url\": \"mxc://bleeker.street/CHEDDARandBRIE\",\n      \"guest_can_join\": false,\n      \"name\": \"CHEESE\",\n      \"num_joined_members\": 37,\n      \"room_id\": \"!ol19s:bleecker.street\",\n      \"topic\": \"Tasty tasty cheese\",\n      \"world_readable\": true\n    }\n  ],\n  \"next_batch\": \"p190q\",\n  \"prev_batch\": \"p1902\",\n  \"total_room_count_estimate\": 115\n}"
                    }
                ],
                "title": "Lists the public rooms on the server."
            },
            {
                "deprecated": false,
                "desc": "Lists the public rooms on the server, with optional filter.\n\nThis API returns paginated responses. The rooms are ordered by the number\nof joined members, with the largest rooms first.",
                "example": {
                    "req": "POST /_matrix/client/%CLIENT_MAJOR_VERSION%/publicRooms HTTP/1.1\nContent-Type: application/json\n\n{\n  \"limit\": 10,\n  \"filter\": {\n    \"generic_search_term\": \"foo\"\n  },\n  \"include_all_networks\": false,\n  \"third_party_instance_id\": \"irc\"\n}"
                },
                "method": "POST",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/publicRooms",
                "rate_limited": false,
                "req_body_tables": [
                    [
                        "Filter",
                        null,
                        [
                            {
                                "desc": "A string to search for in the room metadata, e.g. name,\ntopic, canonical alias etc. (Optional).",
                                "key": "generic_search_term",
                                "required": false,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "Limit the number of results returned.",
                            "key": "limit",
                            "required": false,
                            "title": "integer"
                        },
                        {
                            "desc": "A pagination token from a previous request, allowing clients\nto get the next (or previous) batch of rooms.  The direction\nof pagination is specified solely by which token is supplied,\nrather than via an explicit flag.",
                            "key": "since",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "Filter to apply to the results.",
                            "key": "filter",
                            "required": false,
                            "title": "Filter"
                        },
                        {
                            "desc": "Whether or not to include all known networks/protocols from\napplication services on the homeserver. Defaults to false.",
                            "key": "include_all_networks",
                            "required": false,
                            "title": "boolean"
                        },
                        {
                            "desc": "The specific third party network/protocol to request from the\nhomeserver. Can only be used if ``include_all_networks`` is false.",
                            "key": "third_party_instance_id",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "query": [
                        {
                            "desc": "The server to fetch the public room lists from. Defaults to the\nlocal server.",
                            "key": "server",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** A paginated chunk of public rooms.",
                                "key": "chunk",
                                "required": true,
                                "title": "[PublicRoomsChunk]"
                            },
                            {
                                "desc": "A pagination token for the response. The absence of this token\nmeans there are no more results to fetch and the client should\nstop paginating.",
                                "key": "next_batch",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "A pagination token that allows fetching previous results. The\nabsence of this token means there are no results before this\nbatch, i.e. this is the first batch.",
                                "key": "prev_batch",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "An estimate on the total number of public rooms, if the\nserver has an estimate.",
                                "key": "total_room_count_estimate",
                                "required": false,
                                "title": "integer"
                            }
                        ]
                    ],
                    [
                        "PublicRoomsChunk",
                        null,
                        [
                            {
                                "desc": "Aliases of the room. May be empty.",
                                "key": "aliases",
                                "required": false,
                                "title": "[string]"
                            },
                            {
                                "desc": "The canonical alias of the room, if any.",
                                "key": "canonical_alias",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "The name of the room, if any.",
                                "key": "name",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** The number of members joined to the room.",
                                "key": "num_joined_members",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** The ID of the room.",
                                "key": "room_id",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "The topic of the room, if any.",
                                "key": "topic",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** Whether the room may be viewed by guest users without joining.",
                                "key": "world_readable",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "**Required.** Whether guest users may join the room and participate in it.\nIf they can, they will be subject to ordinary power level\nrules like any other user.",
                                "key": "guest_can_join",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "The URL for the room's avatar, if one is set.",
                                "key": "avatar_url",
                                "required": false,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "A list of the rooms on the server.",
                        "example": "{\n  \"chunk\": [\n    {\n      \"aliases\": [\n        \"#murrays:cheese.bar\"\n      ],\n      \"avatar_url\": \"mxc://bleeker.street/CHEDDARandBRIE\",\n      \"guest_can_join\": false,\n      \"name\": \"CHEESE\",\n      \"num_joined_members\": 37,\n      \"room_id\": \"!ol19s:bleecker.street\",\n      \"topic\": \"Tasty tasty cheese\",\n      \"world_readable\": true\n    }\n  ],\n  \"next_batch\": \"p190q\",\n  \"prev_batch\": \"p1902\",\n  \"total_room_count_estimate\": 115\n}"
                    }
                ],
                "title": "Lists the public rooms on the server with optional filter."
            }
        ],
        "group": "list_public_rooms_cs"
    },
    "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
    "consumes": [
        "application/json"
    ],
    "host": "localhost:8008",
    "info": {
        "title": "Matrix Client-Server Room Directory API",
        "version": "1.0.0"
    },
    "paths": {
        "/directory/list/room/{roomId}": {
            "get": {
                "description": "Gets the visibility of a given room on the server's public room directory.",
                "operationId": "getRoomVisibilityOnDirectory",
                "parameters": [
                    {
                        "description": "The room ID.",
                        "in": "path",
                        "name": "roomId",
                        "required": true,
                        "type": "string",
                        "x-example": "!curbf:matrix.org"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The visibility of the room in the directory",
                        "examples": {
                            "application/json": {
                                "visibility": "public"
                            }
                        },
                        "schema": {
                            "properties": {
                                "visibility": {
                                    "description": "The visibility of the room in the directory.",
                                    "enum": [
                                        "private",
                                        "public"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The room is not known to the server",
                        "examples": {
                            "application/json": {
                                "errcode": "M_NOT_FOUND",
                                "error": "Room not found"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Gets the visibility of a room in the directory"
            },
            "put": {
                "description": "Sets the visibility of a given room in the server's public room\ndirectory.\n\nServers may choose to implement additional access control checks\nhere, for instance that room visibility can only be changed by \nthe room creator or a server administrator.",
                "operationId": "setRoomVisibilityOnDirectory",
                "parameters": [
                    {
                        "description": "The room ID.",
                        "in": "path",
                        "name": "roomId",
                        "required": true,
                        "type": "string",
                        "x-example": "!curbf:matrix.org"
                    },
                    {
                        "description": "The new visibility for the room on the room directory.",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "example": {
                                "visibility": "public"
                            },
                            "properties": {
                                "visibility": {
                                    "description": "The new visibility setting for the room. \nDefaults to 'public'.",
                                    "enum": [
                                        "private",
                                        "public"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The visibility was updated, or no change was needed.",
                        "examples": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "The room is not known to the server",
                        "examples": {
                            "application/json": {
                                "errcode": "M_NOT_FOUND",
                                "error": "Room not found"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Sets the visibility of a room in the room directory"
            }
        },
        "/publicRooms": {
            "get": {
                "description": "Lists the public rooms on the server.\n\nThis API returns paginated responses. The rooms are ordered by the number\nof joined members, with the largest rooms first.",
                "operationId": "getPublicRooms",
                "parameters": [
                    {
                        "description": "Limit the number of results returned.",
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "A pagination token from a previous request, allowing clients to\nget the next (or previous) batch of rooms.\nThe direction of pagination is specified solely by which token\nis supplied, rather than via an explicit flag.",
                        "in": "query",
                        "name": "since",
                        "type": "string"
                    },
                    {
                        "description": "The server to fetch the public room lists from. Defaults to the\nlocal server.",
                        "in": "query",
                        "name": "server",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of the rooms on the server.",
                        "schema": {
                            "description": "A list of the rooms on the server.",
                            "example": {
                                "chunk": [
                                    {
                                        "aliases": [
                                            "#murrays:cheese.bar"
                                        ],
                                        "avatar_url": "mxc://bleeker.street/CHEDDARandBRIE",
                                        "guest_can_join": false,
                                        "name": "CHEESE",
                                        "num_joined_members": 37,
                                        "room_id": "!ol19s:bleecker.street",
                                        "topic": "Tasty tasty cheese",
                                        "world_readable": true
                                    }
                                ],
                                "next_batch": "p190q",
                                "prev_batch": "p1902",
                                "total_room_count_estimate": 115
                            },
                            "properties": {
                                "chunk": {
                                    "description": "A paginated chunk of public rooms.",
                                    "items": {
                                        "properties": {
                                            "aliases": {
                                                "description": "Aliases of the room. May be empty.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "avatar_url": {
                                                "description": "The URL for the room's avatar, if one is set.",
                                                "type": "string"
                                            },
                                            "canonical_alias": {
                                                "description": "The canonical alias of the room, if any.",
                                                "type": "string"
                                            },
                                            "guest_can_join": {
                                                "description": "Whether guest users may join the room and participate in it.\nIf they can, they will be subject to ordinary power level\nrules like any other user.",
                                                "type": "boolean"
                                            },
                                            "name": {
                                                "description": "The name of the room, if any.",
                                                "type": "string"
                                            },
                                            "num_joined_members": {
                                                "description": "The number of members joined to the room.",
                                                "type": "integer"
                                            },
                                            "room_id": {
                                                "description": "The ID of the room.",
                                                "type": "string"
                                            },
                                            "topic": {
                                                "description": "The topic of the room, if any.",
                                                "type": "string"
                                            },
                                            "world_readable": {
                                                "description": "Whether the room may be viewed by guest users without joining.",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "room_id",
                                            "num_joined_members",
                                            "world_readable",
                                            "guest_can_join"
                                        ],
                                        "title": "PublicRoomsChunk",
                                        "type": "object"
                                    },
                                    "title": "PublicRoomsChunks",
                                    "type": "array"
                                },
                                "next_batch": {
                                    "description": "A pagination token for the response. The absence of this token\nmeans there are no more results to fetch and the client should\nstop paginating.",
                                    "type": "string"
                                },
                                "prev_batch": {
                                    "description": "A pagination token that allows fetching previous results. The\nabsence of this token means there are no results before this\nbatch, i.e. this is the first batch.",
                                    "type": "string"
                                },
                                "total_room_count_estimate": {
                                    "description": "An estimate on the total number of public rooms, if the\nserver has an estimate.",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "chunk"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Lists the public rooms on the server.",
                "tags": [
                    "Room discovery"
                ]
            },
            "post": {
                "description": "Lists the public rooms on the server, with optional filter.\n\nThis API returns paginated responses. The rooms are ordered by the number\nof joined members, with the largest rooms first.",
                "operationId": "queryPublicRooms",
                "parameters": [
                    {
                        "description": "The server to fetch the public room lists from. Defaults to the\nlocal server.",
                        "in": "query",
                        "name": "server",
                        "type": "string"
                    },
                    {
                        "description": "Options for which rooms to return.",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "example": {
                                "filter": {
                                    "generic_search_term": "foo"
                                },
                                "include_all_networks": false,
                                "limit": 10,
                                "third_party_instance_id": "irc"
                            },
                            "properties": {
                                "filter": {
                                    "description": "Filter to apply to the results.",
                                    "properties": {
                                        "generic_search_term": {
                                            "description": "A string to search for in the room metadata, e.g. name,\ntopic, canonical alias etc. (Optional).",
                                            "type": "string"
                                        }
                                    },
                                    "title": "Filter",
                                    "type": "object"
                                },
                                "include_all_networks": {
                                    "description": "Whether or not to include all known networks/protocols from\napplication services on the homeserver. Defaults to false.",
                                    "example": false,
                                    "type": "boolean"
                                },
                                "limit": {
                                    "description": "Limit the number of results returned.",
                                    "type": "integer"
                                },
                                "since": {
                                    "description": "A pagination token from a previous request, allowing clients\nto get the next (or previous) batch of rooms.  The direction\nof pagination is specified solely by which token is supplied,\nrather than via an explicit flag.",
                                    "type": "string"
                                },
                                "third_party_instance_id": {
                                    "description": "The specific third party network/protocol to request from the\nhomeserver. Can only be used if ``include_all_networks`` is false.",
                                    "example": "irc",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of the rooms on the server.",
                        "schema": {
                            "description": "A list of the rooms on the server.",
                            "example": {
                                "chunk": [
                                    {
                                        "aliases": [
                                            "#murrays:cheese.bar"
                                        ],
                                        "avatar_url": "mxc://bleeker.street/CHEDDARandBRIE",
                                        "guest_can_join": false,
                                        "name": "CHEESE",
                                        "num_joined_members": 37,
                                        "room_id": "!ol19s:bleecker.street",
                                        "topic": "Tasty tasty cheese",
                                        "world_readable": true
                                    }
                                ],
                                "next_batch": "p190q",
                                "prev_batch": "p1902",
                                "total_room_count_estimate": 115
                            },
                            "properties": {
                                "chunk": {
                                    "description": "A paginated chunk of public rooms.",
                                    "items": {
                                        "properties": {
                                            "aliases": {
                                                "description": "Aliases of the room. May be empty.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "avatar_url": {
                                                "description": "The URL for the room's avatar, if one is set.",
                                                "type": "string"
                                            },
                                            "canonical_alias": {
                                                "description": "The canonical alias of the room, if any.",
                                                "type": "string"
                                            },
                                            "guest_can_join": {
                                                "description": "Whether guest users may join the room and participate in it.\nIf they can, they will be subject to ordinary power level\nrules like any other user.",
                                                "type": "boolean"
                                            },
                                            "name": {
                                                "description": "The name of the room, if any.",
                                                "type": "string"
                                            },
                                            "num_joined_members": {
                                                "description": "The number of members joined to the room.",
                                                "type": "integer"
                                            },
                                            "room_id": {
                                                "description": "The ID of the room.",
                                                "type": "string"
                                            },
                                            "topic": {
                                                "description": "The topic of the room, if any.",
                                                "type": "string"
                                            },
                                            "world_readable": {
                                                "description": "Whether the room may be viewed by guest users without joining.",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "room_id",
                                            "num_joined_members",
                                            "world_readable",
                                            "guest_can_join"
                                        ],
                                        "title": "PublicRoomsChunk",
                                        "type": "object"
                                    },
                                    "title": "PublicRoomsChunks",
                                    "type": "array"
                                },
                                "next_batch": {
                                    "description": "A pagination token for the response. The absence of this token\nmeans there are no more results to fetch and the client should\nstop paginating.",
                                    "type": "string"
                                },
                                "prev_batch": {
                                    "description": "A pagination token that allows fetching previous results. The\nabsence of this token means there are no results before this\nbatch, i.e. this is the first batch.",
                                    "type": "string"
                                },
                                "total_room_count_estimate": {
                                    "description": "An estimate on the total number of public rooms, if the\nserver has an estimate.",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "chunk"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Lists the public rooms on the server with optional filter.",
                "tags": [
                    "Room discovery"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https",
        "http"
    ],
    "swagger": "2.0"
}