{
    "__meta": {
        "base": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "endpoints": [
            {
                "deprecated": false,
                "desc": "Gets the homeserver's supported login types to authenticate users. Clients\nshould pick one of these and supply it as the ``type`` when logging in.",
                "example": {
                    "req": "GET /_matrix/client/%CLIENT_MAJOR_VERSION%/login HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/login",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {},
                "requires_auth": false,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "The homeserver's supported login types",
                                "key": "flows",
                                "required": false,
                                "title": "[LoginFlow]"
                            }
                        ]
                    ],
                    [
                        "LoginFlow",
                        null,
                        [
                            {
                                "desc": "The login type. This is supplied as the ``type`` when\nlogging in.",
                                "key": "type",
                                "required": false,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The login types the homeserver supports",
                        "example": "{\n  \"flows\": [\n    {\n      \"type\": \"m.login.password\"\n    }\n  ]\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Get the supported login types to authenticate users"
            },
            {
                "deprecated": false,
                "desc": "Authenticates the user, and issues an access token they can\nuse to authorize themself in subsequent requests.\n\nIf the client does not supply a ``device_id``, the server must\nauto-generate one.\n\nThe returned access token must be associated with the ``device_id``\nsupplied by the client or generated by the server. The server may\ninvalidate any access token previously associated with that device. See\n`Relationship between access tokens and devices`_.",
                "example": {
                    "req": "POST /_matrix/client/%CLIENT_MAJOR_VERSION%/login HTTP/1.1\nContent-Type: application/json\n\n{\n  \"type\": \"m.login.password\",\n  \"identifier\": {\n    \"type\": \"m.id.user\",\n    \"user\": \"cheeky_monkey\"\n  },\n  \"password\": \"ilovebananas\",\n  \"initial_device_display_name\": \"Jungle Phone\"\n}"
                },
                "method": "POST",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/login",
                "rate_limited": true,
                "req_body_tables": [
                    [
                        "User identifier",
                        null,
                        [
                            {
                                "desc": "**Required.** The type of identification.  See `Identifier types`_ for supported values and additional property descriptions.",
                                "key": "type",
                                "required": true,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "**Required.** The login type being used. One of: [\"m.login.password\", \"m.login.token\"]",
                            "key": "type",
                            "required": true,
                            "title": "enum"
                        },
                        {
                            "desc": "Identification information for a user",
                            "key": "identifier",
                            "required": false,
                            "title": "User identifier"
                        },
                        {
                            "desc": "The fully qualified user ID or just local part of the user ID, to log in.  Deprecated in favour of ``identifier``.",
                            "key": "user",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "When logging in using a third party identifier, the medium of the identifier. Must be 'email'.  Deprecated in favour of ``identifier``.",
                            "key": "medium",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "Third party identifier for the user.  Deprecated in favour of ``identifier``.",
                            "key": "address",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "Required when ``type`` is ``m.login.password``. The user's\npassword.",
                            "key": "password",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "Required when ``type`` is ``m.login.token``. Part of `Token-based`_ login.",
                            "key": "token",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "ID of the client device. If this does not correspond to a\nknown client device, a new device will be created. The server\nwill auto-generate a device_id if this is not specified.",
                            "key": "device_id",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "A display name to assign to the newly-created device. Ignored\nif ``device_id`` corresponds to a known device.",
                            "key": "initial_device_display_name",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": false,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "The fully-qualified Matrix ID for the account.",
                                "key": "user_id",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "An access token for the account.\nThis access token can then be used to authorize other requests.",
                                "key": "access_token",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "The server_name of the homeserver on which the account has\nbeen registered.\n\n**Deprecated**. Clients should extract the server_name from\n``user_id`` (by splitting at the first colon) if they require\nit. Note also that ``homeserver`` is not spelt this way.",
                                "key": "home_server",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "ID of the logged-in device. Will be the same as the\ncorresponding parameter in the request, if one was specified.",
                                "key": "device_id",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "Optional client configuration provided by the server. If present,\nclients SHOULD use the provided object to reconfigure themselves,\noptionally validating the URLs within. This object takes the same\nform as the one returned from .well-known autodiscovery.",
                                "key": "well_known",
                                "required": false,
                                "title": "Discovery Information"
                            }
                        ]
                    ],
                    [
                        "Discovery Information",
                        null,
                        [
                            {
                                "desc": "**Required.** Used by clients to discover homeserver information.",
                                "key": "m.homeserver",
                                "required": true,
                                "title": "Homeserver Information"
                            },
                            {
                                "desc": "Used by clients to discover identity server information.",
                                "key": "m.identity_server",
                                "required": false,
                                "title": "Identity Server Information"
                            }
                        ]
                    ],
                    [
                        "Homeserver Information",
                        null,
                        [
                            {
                                "desc": "**Required.** The base URL for the homeserver for client-server connections.",
                                "key": "base_url",
                                "required": true,
                                "title": "string"
                            }
                        ]
                    ],
                    [
                        "Identity Server Information",
                        null,
                        [
                            {
                                "desc": "**Required.** The base URL for the identity server for client-server connections.",
                                "key": "base_url",
                                "required": true,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The user has been authenticated.",
                        "example": "{\n  \"user_id\": \"@cheeky_monkey:matrix.org\",\n  \"access_token\": \"abc123\",\n  \"device_id\": \"GHTYAJCE\",\n  \"well_known\": {\n    \"m.homeserver\": {\n      \"base_url\": \"https://example.org\"\n    },\n    \"m.identity_server\": {\n      \"base_url\": \"https://id.example.org\"\n    }\n  }\n}"
                    },
                    {
                        "code": 400,
                        "description": "Part of the request was invalid. For example, the login type may not be recognised.",
                        "example": "{\n  \"errcode\": \"M_UNKNOWN\",\n  \"error\": \"Bad login type.\"\n}"
                    },
                    {
                        "code": 403,
                        "description": "The login attempt failed. This can include one of the following error codes:\n  * ``M_FORBIDDEN``: The provided authentication data was incorrect.\n  * ``M_USER_DEACTIVATED``: The user has been deactivated.",
                        "example": "{\n  \"errcode\": \"M_FORBIDDEN\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Authenticates the user."
            }
        ],
        "group": "login_cs"
    },
    "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
    "consumes": [
        "application/json"
    ],
    "host": "localhost:8008",
    "info": {
        "title": "Matrix Client-Server Registration and Login API",
        "version": "1.0.0"
    },
    "paths": {
        "/login": {
            "get": {
                "description": "Gets the homeserver's supported login types to authenticate users. Clients\nshould pick one of these and supply it as the ``type`` when logging in.",
                "operationId": "getLoginFlows",
                "responses": {
                    "200": {
                        "description": "The login types the homeserver supports",
                        "examples": {
                            "application/json": {
                                "flows": [
                                    {
                                        "type": "m.login.password"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "properties": {
                                "flows": {
                                    "description": "The homeserver's supported login types",
                                    "items": {
                                        "properties": {
                                            "type": {
                                                "description": "The login type. This is supplied as the ``type`` when\nlogging in.",
                                                "type": "string"
                                            }
                                        },
                                        "title": "LoginFlow",
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Get the supported login types to authenticate users",
                "tags": [
                    "Session management"
                ]
            },
            "post": {
                "description": "Authenticates the user, and issues an access token they can\nuse to authorize themself in subsequent requests.\n\nIf the client does not supply a ``device_id``, the server must\nauto-generate one.\n\nThe returned access token must be associated with the ``device_id``\nsupplied by the client or generated by the server. The server may\ninvalidate any access token previously associated with that device. See\n`Relationship between access tokens and devices`_.",
                "operationId": "login",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "example": {
                                "identifier": {
                                    "type": "m.id.user",
                                    "user": "cheeky_monkey"
                                },
                                "initial_device_display_name": "Jungle Phone",
                                "password": "ilovebananas",
                                "type": "m.login.password"
                            },
                            "properties": {
                                "address": {
                                    "description": "Third party identifier for the user.  Deprecated in favour of ``identifier``.",
                                    "type": "string"
                                },
                                "device_id": {
                                    "description": "ID of the client device. If this does not correspond to a\nknown client device, a new device will be created. The server\nwill auto-generate a device_id if this is not specified.",
                                    "type": "string"
                                },
                                "identifier": {
                                    "additionalProperties": true,
                                    "description": "Identification information for a user",
                                    "properties": {
                                        "type": {
                                            "description": "The type of identification.  See `Identifier types`_ for supported values and additional property descriptions.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ],
                                    "title": "User identifier",
                                    "type": "object"
                                },
                                "initial_device_display_name": {
                                    "description": "A display name to assign to the newly-created device. Ignored\nif ``device_id`` corresponds to a known device.",
                                    "type": "string"
                                },
                                "medium": {
                                    "description": "When logging in using a third party identifier, the medium of the identifier. Must be 'email'.  Deprecated in favour of ``identifier``.",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "Required when ``type`` is ``m.login.password``. The user's\npassword.",
                                    "type": "string"
                                },
                                "token": {
                                    "description": "Required when ``type`` is ``m.login.token``. Part of `Token-based`_ login.",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "The login type being used.",
                                    "enum": [
                                        "m.login.password",
                                        "m.login.token"
                                    ],
                                    "type": "string"
                                },
                                "user": {
                                    "description": "The fully qualified user ID or just local part of the user ID, to log in.  Deprecated in favour of ``identifier``.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "type"
                            ],
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user has been authenticated.",
                        "examples": {
                            "application/json": {
                                "access_token": "abc123",
                                "device_id": "GHTYAJCE",
                                "user_id": "@cheeky_monkey:matrix.org",
                                "well_known": {
                                    "m.homeserver": {
                                        "base_url": "https://example.org"
                                    },
                                    "m.identity_server": {
                                        "base_url": "https://id.example.org"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "properties": {
                                "access_token": {
                                    "description": "An access token for the account.\nThis access token can then be used to authorize other requests.",
                                    "type": "string"
                                },
                                "device_id": {
                                    "description": "ID of the logged-in device. Will be the same as the\ncorresponding parameter in the request, if one was specified.",
                                    "type": "string"
                                },
                                "home_server": {
                                    "description": "The server_name of the homeserver on which the account has\nbeen registered.\n\n**Deprecated**. Clients should extract the server_name from\n``user_id`` (by splitting at the first colon) if they require\nit. Note also that ``homeserver`` is not spelt this way.",
                                    "type": "string"
                                },
                                "user_id": {
                                    "description": "The fully-qualified Matrix ID for the account.",
                                    "type": "string"
                                },
                                "well_known": {
                                    "allOf": [
                                        {
                                            "additionalProperties": {
                                                "description": "Application-dependent keys using Java package naming convention.",
                                                "type": "object"
                                            },
                                            "description": "Used by clients to determine the homeserver, identity server, and other\noptional components they should be interacting with.",
                                            "example": {
                                                "m.homeserver": {
                                                    "base_url": "https://matrix.example.com"
                                                },
                                                "m.identity_server": {
                                                    "base_url": "https://identity.example.com"
                                                },
                                                "org.example.custom.property": {
                                                    "app_url": "https://custom.app.example.org"
                                                }
                                            },
                                            "properties": {
                                                "m.homeserver": {
                                                    "description": "Used by clients to discover homeserver information.",
                                                    "properties": {
                                                        "base_url": {
                                                            "description": "The base URL for the homeserver for client-server connections.",
                                                            "example": "https://matrix.example.com",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "base_url"
                                                    ],
                                                    "title": "Homeserver Information",
                                                    "type": "object"
                                                },
                                                "m.identity_server": {
                                                    "description": "Used by clients to discover identity server information.",
                                                    "properties": {
                                                        "base_url": {
                                                            "description": "The base URL for the identity server for client-server connections.",
                                                            "example": "https://identity.example.com",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "base_url"
                                                    ],
                                                    "title": "Identity Server Information",
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "m.homeserver"
                                            ],
                                            "title": "Discovery Information",
                                            "type": "object"
                                        }
                                    ],
                                    "description": "Optional client configuration provided by the server. If present,\nclients SHOULD use the provided object to reconfigure themselves,\noptionally validating the URLs within. This object takes the same\nform as the one returned from .well-known autodiscovery."
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Part of the request was invalid. For example, the login type may not be recognised.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_UNKNOWN",
                                "error": "Bad login type."
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "The login attempt failed. This can include one of the following error codes:\n  * ``M_FORBIDDEN``: The provided authentication data was incorrect.\n  * ``M_USER_DEACTIVATED``: The user has been deactivated.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_FORBIDDEN"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Authenticates the user.",
                "tags": [
                    "Session management"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https",
        "http"
    ],
    "securityDefinitions": {
        "accessToken": {
            "description": "The access_token returned by a call to ``/login`` or ``/register``",
            "in": "query",
            "name": "access_token",
            "type": "apiKey"
        }
    },
    "swagger": "2.0"
}