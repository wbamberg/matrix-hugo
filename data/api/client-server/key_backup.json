{
    "__meta": {
        "base": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "endpoints": [
            {
                "deprecated": false,
                "desc": "Creates a new backup.",
                "example": {
                    "req": "POST /_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/version HTTP/1.1\nContent-Type: application/json\n\n{\n  \"algorithm\": \"m.megolm_backup.v1.curve25519-aes-sha2\",\n  \"auth_data\": {\n    \"public_key\": \"abcdefg\",\n    \"signatures\": {\n      \"@alice:example.org\": {\n        \"ed25519:deviceid\": \"signature\"\n      }\n    }\n  }\n}"
                },
                "method": "POST",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/version",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "**Required.** The algorithm used for storing backups. Must be 'm.megolm_backup.v1.curve25519-aes-sha2'.",
                            "key": "algorithm",
                            "required": true,
                            "title": "enum"
                        },
                        {
                            "desc": "**Required.** Algorithm-dependent data. See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                            "key": "auth_data",
                            "required": true,
                            "title": "object"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The backup version. This is an opaque string.",
                                "key": "version",
                                "required": true,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The version id of the new backup.",
                        "example": "{\n  \"version\": \"1\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Create a new backup."
            },
            {
                "deprecated": false,
                "desc": "Get information about the latest backup version.",
                "example": {
                    "req": "GET /_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/version HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/version",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {},
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The algorithm used for storing backups. Must be 'm.megolm_backup.v1.curve25519-aes-sha2'.",
                                "key": "algorithm",
                                "required": true,
                                "title": "enum"
                            },
                            {
                                "desc": "**Required.** Algorithm-dependent data. See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                "key": "auth_data",
                                "required": true,
                                "title": "object"
                            },
                            {
                                "desc": "**Required.** The number of keys stored in the backup.",
                                "key": "count",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** An opaque string representing stored keys in the backup.\nClients can compare it with the ``etag`` value they received\nin the request of their last key storage request.  If not\nequal, another client has modified the backup.",
                                "key": "etag",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** The backup version.",
                                "key": "version",
                                "required": true,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The information about the backup.",
                        "example": "{\n  \"algorithm\": \"m.megolm_backup.v1.curve25519-aes-sha2\",\n  \"auth_data\": {\n    \"public_key\": \"abcdefg\",\n    \"signatures\": {\n      \"@alice:example.org\": {\n        \"ed25519:deviceid\": \"signature\"\n      }\n    }\n  },\n  \"count\": 42,\n  \"etag\": \"anopaquestring\",\n  \"version\": \"1\"\n}"
                    },
                    {
                        "code": 404,
                        "description": "No backup exists.",
                        "example": "{\n  \"errcode\": \"M_NOT_FOUND\",\n  \"error\": \"No current backup version\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Get information about the latest backup version."
            },
            {
                "deprecated": false,
                "desc": "Get information about an existing backup.",
                "example": {
                    "req": "GET /_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/version/1 HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/version/{version}",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** The backup version to get, as returned in the ``version`` parameter\nof the response in `POST /_matrix/client/r0/room_keys/version`_ or\nthis endpoint.",
                            "key": "version",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The algorithm used for storing backups. Must be 'm.megolm_backup.v1.curve25519-aes-sha2'.",
                                "key": "algorithm",
                                "required": true,
                                "title": "enum"
                            },
                            {
                                "desc": "**Required.** Algorithm-dependent data. See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                "key": "auth_data",
                                "required": true,
                                "title": "object"
                            },
                            {
                                "desc": "**Required.** The number of keys stored in the backup.",
                                "key": "count",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** An opaque string representing stored keys in the backup.\nClients can compare it with the ``etag`` value they received\nin the request of their last key storage request.  If not\nequal, another client has modified the backup.",
                                "key": "etag",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** The backup version.",
                                "key": "version",
                                "required": true,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The information about the requested backup.",
                        "example": "{\n  \"algorithm\": \"m.megolm_backup.v1.curve25519-aes-sha2\",\n  \"auth_data\": {\n    \"public_key\": \"abcdefg\",\n    \"signatures\": {\n      \"@alice:example.org\": {\n        \"ed25519:deviceid\": \"signature\"\n      }\n    }\n  },\n  \"count\": 42,\n  \"etag\": \"anopaquestring\",\n  \"version\": \"1\"\n}"
                    },
                    {
                        "code": 404,
                        "description": "The backup specified does not exist.",
                        "example": "{\n  \"errcode\": \"M_NOT_FOUND\",\n  \"error\": \"Unknown backup version\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Get information about an existing backup."
            },
            {
                "deprecated": false,
                "desc": "Update information about an existing backup.  Only ``auth_data`` can be modified.",
                "example": {
                    "req": "PUT /_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/version/1 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"algorithm\": \"m.megolm_backup.v1.curve25519-aes-sha2\",\n  \"auth_data\": {\n    \"public_key\": \"abcdefg\",\n    \"signatures\": {\n      \"@alice:example.org\": {\n        \"ed25519:deviceid\": \"signature\"\n      }\n    }\n  },\n  \"version\": \"1\"\n}"
                },
                "method": "PUT",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/version/{version}",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "**Required.** The algorithm used for storing backups.  Must be the same as\nthe algorithm currently used by the backup. Must be 'm.megolm_backup.v1.curve25519-aes-sha2'.",
                            "key": "algorithm",
                            "required": true,
                            "title": "enum"
                        },
                        {
                            "desc": "**Required.** Algorithm-dependent data. See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                            "key": "auth_data",
                            "required": true,
                            "title": "object"
                        },
                        {
                            "desc": "The backup version.  If present, must be the same as the\nversion in the path parameter.",
                            "key": "version",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "path": [
                        {
                            "desc": "**Required.** The backup version to update, as returned in the ``version``\nparameter in the response of `POST\n/_matrix/client/r0/room_keys/version`_ or `GET\n/_matrix/client/r0/room_keys/version/{version}`_.",
                            "key": "version",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [],
                "responses": [
                    {
                        "code": 200,
                        "description": "The update succeeded.",
                        "example": "{}"
                    },
                    {
                        "code": 400,
                        "description": "A parameter was incorrect.  For example, the ``algorithm`` does not\nmatch the current backup algorithm, or the ``version`` in the body\ndoes not match the ``version`` in the path.",
                        "example": "{\n  \"errcode\": \"M_INVALID_PARAM\",\n  \"error\": \"Algorithm does not match\"\n}"
                    },
                    {
                        "code": 404,
                        "description": "The backup specified does not exist.",
                        "example": "{\n  \"errcode\": \"M_NOT_FOUND\",\n  \"error\": \"Unknown backup version\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Update information about an existing backup."
            },
            {
                "deprecated": false,
                "desc": "Delete an existing key backup. Both the information about the backup,\nas well as all key data related to the backup will be deleted.",
                "example": {
                    "req": "DELETE /_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/version/1 HTTP/1.1\n\n"
                },
                "method": "DELETE",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/version/{version}",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** The backup version to delete, as returned in the ``version``\nparameter in the response of `POST\n/_matrix/client/r0/room_keys/version`_ or `GET\n/_matrix/client/r0/room_keys/version/{version}`_.",
                            "key": "version",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [],
                "responses": [
                    {
                        "code": 200,
                        "description": "The delete succeeded, or the specified backup was previously\ndeleted.",
                        "example": "{}"
                    },
                    {
                        "code": 404,
                        "description": "The backup specified does not exist. If the backup was previously\ndeleted, the call should succeed rather than returning an error.",
                        "example": "{\n  \"errcode\": \"M_NOT_FOUND\",\n  \"error\": \"Unknown backup version\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Delete an existing key backup."
            },
            {
                "deprecated": false,
                "desc": "Store a key in the backup.",
                "example": {
                    "req": "PUT /_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys/%21roomid%3Aexample.org/sessionid?version=1 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"first_message_index\": 1,\n  \"forwarded_count\": 0,\n  \"is_verified\": false,\n  \"session_data\": {\n    \"ephemeral\": \"base64+ephemeral+key\",\n    \"ciphertext\": \"base64+ciphertext+of+JSON+data\",\n    \"mac\": \"base64+mac+of+ciphertext\"\n  }\n}"
                },
                "method": "PUT",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys/{roomId}/{sessionId}",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "**Required.** The index of the first message in the session that the key can decrypt.",
                            "key": "first_message_index",
                            "required": true,
                            "title": "integer"
                        },
                        {
                            "desc": "**Required.** The number of times this key has been forwarded via key-sharing between devices.",
                            "key": "forwarded_count",
                            "required": true,
                            "title": "integer"
                        },
                        {
                            "desc": "**Required.** Whether the device backing up the key verified the device that the key\nis from.",
                            "key": "is_verified",
                            "required": true,
                            "title": "boolean"
                        },
                        {
                            "desc": "**Required.** Algorithm-dependent data.  See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                            "key": "session_data",
                            "required": true,
                            "title": "object"
                        }
                    ],
                    "path": [
                        {
                            "desc": "**Required.** The ID of the room that the key is for.",
                            "key": "roomId",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "**Required.** The ID of the megolm session that the key is for.",
                            "key": "sessionId",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "query": [
                        {
                            "desc": "**Required.** The backup in which to store the key. Must be the current backup.",
                            "key": "version",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The new etag value representing stored keys in the backup.\nSee ``GET /room_keys/version/{version}`` for more details.",
                                "key": "etag",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** The number of keys stored in the backup",
                                "key": "count",
                                "required": true,
                                "title": "integer"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The update succeeded.",
                        "example": "{\n  \"etag\": \"abcdefg\",\n  \"count\": 10\n}"
                    },
                    {
                        "code": 403,
                        "description": "The version specified does not match the current backup version.\nThe current version will be included in the ``current_version``\nfield.",
                        "example": "{\n  \"errcode\": \"M_WRONG_ROOM_KEYS_VERSION\",\n  \"error\": \"Wrong backup version.\",\n  \"current_version\": \"42\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Store a key in the backup."
            },
            {
                "deprecated": false,
                "desc": "Retrieve a key from the backup.",
                "example": {
                    "req": "GET /_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys/%21roomid%3Aexample.org/sessionid?version=1 HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys/{roomId}/{sessionId}",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** The ID of the room that the requested key is for.",
                            "key": "roomId",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "**Required.** The ID of the megolm session whose key is requested.",
                            "key": "sessionId",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "query": [
                        {
                            "desc": "**Required.** The backup from which to retrieve the key.",
                            "key": "version",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        "KeyBackupData",
                        null,
                        [
                            {
                                "desc": "**Required.** The index of the first message in the session that the key can decrypt.",
                                "key": "first_message_index",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** The number of times this key has been forwarded via key-sharing between devices.",
                                "key": "forwarded_count",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** Whether the device backing up the key verified the device that the key\nis from.",
                                "key": "is_verified",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "**Required.** Algorithm-dependent data.  See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                "key": "session_data",
                                "required": true,
                                "title": "object"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The key data",
                        "example": "{\n  \"first_message_index\": 1,\n  \"forwarded_count\": 0,\n  \"is_verified\": false,\n  \"session_data\": {\n    \"ephemeral\": \"base64+ephemeral+key\",\n    \"ciphertext\": \"base64+ciphertext+of+JSON+data\",\n    \"mac\": \"base64+mac+of+ciphertext\"\n  }\n}"
                    },
                    {
                        "code": 404,
                        "description": "The key or backup was not found.",
                        "example": "{\n  \"errcode\": \"M_NOT_FOUND\",\n  \"error\": \"Key not found.\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Retrieve a key from the backup"
            },
            {
                "deprecated": false,
                "desc": "Delete a key from the backup.",
                "example": {
                    "req": "DELETE /_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys/%21roomid%3Aexample.org/sessionid?version=1 HTTP/1.1\n\n"
                },
                "method": "DELETE",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys/{roomId}/{sessionId}",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** The ID of the room that the specified key is for.",
                            "key": "roomId",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "**Required.** The ID of the megolm session whose key is to be deleted.",
                            "key": "sessionId",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "query": [
                        {
                            "desc": "**Required.** The backup from which to delete the key",
                            "key": "version",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The new etag value representing stored keys in the backup.\nSee ``GET /room_keys/version/{version}`` for more details.",
                                "key": "etag",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** The number of keys stored in the backup",
                                "key": "count",
                                "required": true,
                                "title": "integer"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The update succeeded",
                        "example": "{\n  \"etag\": \"abcdefg\",\n  \"count\": 10\n}"
                    },
                    {
                        "code": 404,
                        "description": "The backup was not found.",
                        "example": "{\n  \"errcode\": \"M_NOT_FOUND\",\n  \"error\": \"Unknown backup version\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Delete a key from the backup"
            },
            {
                "deprecated": false,
                "desc": "Store a key in the backup.",
                "example": {
                    "req": "PUT /_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys/%21roomid%3Aexample.org?version=1 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"sessions\": {\n    \"sessionid1\": {\n      \"first_message_index\": 1,\n      \"forwarded_count\": 0,\n      \"is_verified\": true,\n      \"session_data\": {\n        \"ephemeral\": \"base64+ephemeral+key\",\n        \"ciphertext\": \"base64+ciphertext+of+JSON+data\",\n        \"mac\": \"base64+mac+of+ciphertext\"\n      }\n    }\n  }\n}"
                },
                "method": "PUT",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys/{roomId}",
                "rate_limited": true,
                "req_body_tables": [
                    [
                        "KeyBackupData",
                        null,
                        [
                            {
                                "desc": "**Required.** The index of the first message in the session that the key can decrypt.",
                                "key": "first_message_index",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** The number of times this key has been forwarded via key-sharing between devices.",
                                "key": "forwarded_count",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** Whether the device backing up the key verified the device that the key\nis from.",
                                "key": "is_verified",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "**Required.** Algorithm-dependent data.  See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                "key": "session_data",
                                "required": true,
                                "title": "object"
                            }
                        ]
                    ]
                ],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "**Required.** A map of session IDs to key data.",
                            "key": "sessions",
                            "required": true,
                            "title": "{string: KeyBackupData}"
                        }
                    ],
                    "path": [
                        {
                            "desc": "**Required.** The ID of the room that the keys are for.",
                            "key": "roomId",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "query": [
                        {
                            "desc": "**Required.** The backup in which to store the keys. Must be the current backup.",
                            "key": "version",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The new etag value representing stored keys in the backup.\nSee ``GET /room_keys/version/{version}`` for more details.",
                                "key": "etag",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** The number of keys stored in the backup",
                                "key": "count",
                                "required": true,
                                "title": "integer"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The update succeeded",
                        "example": "{\n  \"etag\": \"abcdefg\",\n  \"count\": 10\n}"
                    },
                    {
                        "code": 403,
                        "description": "The version specified does not match the current backup version.\nThe current version will be included in the ``current_version``\nfield.",
                        "example": "{\n  \"errcode\": \"M_WRONG_ROOM_KEYS_VERSION\",\n  \"error\": \"Wrong backup version.\",\n  \"current_version\": \"42\"\n}"
                    },
                    {
                        "code": 404,
                        "description": "The backup was not found.",
                        "example": "{\n  \"errcode\": \"M_NOT_FOUND\",\n  \"error\": \"Unknown backup version\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Store several keys in the backup for a given room."
            },
            {
                "deprecated": false,
                "desc": "Retrieve the keys from the backup for a given room",
                "example": {
                    "req": "GET /_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys/%21roomid%3Aexample.org?version=1 HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys/{roomId}",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** The ID of the room that the requested key is for.",
                            "key": "roomId",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "query": [
                        {
                            "desc": "**Required.** The backup from which to retrieve the key.",
                            "key": "version",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        "RoomKeyBackup",
                        null,
                        [
                            {
                                "desc": "**Required.** A map of session IDs to key data.",
                                "key": "sessions",
                                "required": true,
                                "title": "{string: KeyBackupData}"
                            }
                        ]
                    ],
                    [
                        "KeyBackupData",
                        null,
                        [
                            {
                                "desc": "**Required.** The index of the first message in the session that the key can decrypt.",
                                "key": "first_message_index",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** The number of times this key has been forwarded via key-sharing between devices.",
                                "key": "forwarded_count",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** Whether the device backing up the key verified the device that the key\nis from.",
                                "key": "is_verified",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "**Required.** Algorithm-dependent data.  See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                "key": "session_data",
                                "required": true,
                                "title": "object"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The key data.  If no keys are found, then an object with an empty\n``sessions`` property will be returned (``{\"sessions\": {}}``).",
                        "example": "{\n  \"sessions\": {\n    \"sessionid1\": {\n      \"first_message_index\": 1,\n      \"forwarded_count\": 0,\n      \"is_verified\": true,\n      \"session_data\": {\n        \"ephemeral\": \"base64+ephemeral+key\",\n        \"ciphertext\": \"base64+ciphertext+of+JSON+data\",\n        \"mac\": \"base64+mac+of+ciphertext\"\n      }\n    }\n  }\n}"
                    },
                    {
                        "code": 404,
                        "description": "The backup was not found.",
                        "example": "{\n  \"errcode\": \"M_NOT_FOUND\",\n  \"error\": \"Unknown backup version\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Retrieve the keys from the backup for a given room"
            },
            {
                "deprecated": false,
                "desc": "Delete a key from the backup.",
                "example": {
                    "req": "DELETE /_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys/%21roomid%3Aexample.org?version=1 HTTP/1.1\n\n"
                },
                "method": "DELETE",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys/{roomId}",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** The ID of the room that the specified key is for.",
                            "key": "roomId",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "query": [
                        {
                            "desc": "**Required.** The backup from which to delete the key.",
                            "key": "version",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The new etag value representing stored keys in the backup.\nSee ``GET /room_keys/version/{version}`` for more details.",
                                "key": "etag",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** The number of keys stored in the backup",
                                "key": "count",
                                "required": true,
                                "title": "integer"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The update succeeded",
                        "example": "{\n  \"etag\": \"abcdefg\",\n  \"count\": 10\n}"
                    },
                    {
                        "code": 404,
                        "description": "The backup was not found.",
                        "example": "{\n  \"errcode\": \"M_NOT_FOUND\",\n  \"error\": \"Unknown backup version\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Delete a key from the backup"
            },
            {
                "deprecated": false,
                "desc": "Store several keys in the backup.",
                "example": {
                    "req": "PUT /_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys?version=1 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"rooms\": {\n    \"!room:example.org\": {\n      \"sessions\": {\n        \"sessionid1\": {\n          \"first_message_index\": 1,\n          \"forwarded_count\": 0,\n          \"is_verified\": true,\n          \"session_data\": {\n            \"ephemeral\": \"base64+ephemeral+key\",\n            \"ciphertext\": \"base64+ciphertext+of+JSON+data\",\n            \"mac\": \"base64+mac+of+ciphertext\"\n          }\n        }\n      }\n    }\n  }\n}"
                },
                "method": "PUT",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys",
                "rate_limited": true,
                "req_body_tables": [
                    [
                        "RoomKeyBackup",
                        null,
                        [
                            {
                                "desc": "**Required.** A map of session IDs to key data.",
                                "key": "sessions",
                                "required": true,
                                "title": "{string: KeyBackupData}"
                            }
                        ]
                    ],
                    [
                        "KeyBackupData",
                        null,
                        [
                            {
                                "desc": "**Required.** The index of the first message in the session that the key can decrypt.",
                                "key": "first_message_index",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** The number of times this key has been forwarded via key-sharing between devices.",
                                "key": "forwarded_count",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** Whether the device backing up the key verified the device that the key\nis from.",
                                "key": "is_verified",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "**Required.** Algorithm-dependent data.  See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                "key": "session_data",
                                "required": true,
                                "title": "object"
                            }
                        ]
                    ]
                ],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "**Required.** A map of room IDs to room key backup data.",
                            "key": "rooms",
                            "required": true,
                            "title": "{string: RoomKeyBackup}"
                        }
                    ],
                    "query": [
                        {
                            "desc": "**Required.** The backup in which to store the keys. Must be the current backup.",
                            "key": "version",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The new etag value representing stored keys in the backup.\nSee ``GET /room_keys/version/{version}`` for more details.",
                                "key": "etag",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** The number of keys stored in the backup",
                                "key": "count",
                                "required": true,
                                "title": "integer"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The update succeeded",
                        "example": "{\n  \"etag\": \"abcdefg\",\n  \"count\": 10\n}"
                    },
                    {
                        "code": 403,
                        "description": "The version specified does not match the current backup version.\nThe current version will be included in the ``current_version``\nfield.",
                        "example": "{\n  \"errcode\": \"M_WRONG_ROOM_KEYS_VERSION\",\n  \"error\": \"Wrong backup version.\",\n  \"current_version\": \"42\"\n}"
                    },
                    {
                        "code": 404,
                        "description": "The backup was not found.",
                        "example": "{\n  \"errcode\": \"M_NOT_FOUND\",\n  \"error\": \"Unknown backup version\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Store several keys in the backup."
            },
            {
                "deprecated": false,
                "desc": "Retrieve the keys from the backup for a given room",
                "example": {
                    "req": "GET /_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys?version=1 HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "query": [
                        {
                            "desc": "**Required.** The backup from which to retrieve the keys.",
                            "key": "version",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "A map of room IDs to room key backup data.",
                                "key": "rooms",
                                "required": false,
                                "title": "{string: RoomKeyBackup}"
                            }
                        ]
                    ],
                    [
                        "RoomKeyBackup",
                        null,
                        [
                            {
                                "desc": "**Required.** A map of session IDs to key data.",
                                "key": "sessions",
                                "required": true,
                                "title": "{string: KeyBackupData}"
                            }
                        ]
                    ],
                    [
                        "KeyBackupData",
                        null,
                        [
                            {
                                "desc": "**Required.** The index of the first message in the session that the key can decrypt.",
                                "key": "first_message_index",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** The number of times this key has been forwarded via key-sharing between devices.",
                                "key": "forwarded_count",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** Whether the device backing up the key verified the device that the key\nis from.",
                                "key": "is_verified",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "**Required.** Algorithm-dependent data.  See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                "key": "session_data",
                                "required": true,
                                "title": "object"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The key data.  If no keys are found, then an object with an empty\n``rooms`` property will be returned (``{\"rooms\": {}}``).",
                        "example": "{\n  \"rooms\": {\n    \"!room:example.org\": {\n      \"sessions\": {\n        \"sessionid1\": {\n          \"first_message_index\": 1,\n          \"forwarded_count\": 0,\n          \"is_verified\": true,\n          \"session_data\": {\n            \"ephemeral\": \"base64+ephemeral+key\",\n            \"ciphertext\": \"base64+ciphertext+of+JSON+data\",\n            \"mac\": \"base64+mac+of+ciphertext\"\n          }\n        }\n      }\n    }\n  }\n}"
                    },
                    {
                        "code": 404,
                        "description": "The backup was not found.",
                        "example": "{\n  \"errcode\": \"M_NOT_FOUND\",\n  \"error\": \"Unknown backup version.\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Retrieve the keys from the backup for a given room"
            },
            {
                "deprecated": false,
                "desc": "Delete a key from the backup.",
                "example": {
                    "req": "DELETE /_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys?version=1 HTTP/1.1\n\n"
                },
                "method": "DELETE",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/room_keys/keys",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "query": [
                        {
                            "desc": "**Required.** The backup from which to delete the key",
                            "key": "version",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The new etag value representing stored keys in the backup.\nSee ``GET /room_keys/version/{version}`` for more details.",
                                "key": "etag",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** The number of keys stored in the backup",
                                "key": "count",
                                "required": true,
                                "title": "integer"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The update succeeded",
                        "example": "{\n  \"etag\": \"abcdefg\",\n  \"count\": 10\n}"
                    },
                    {
                        "code": 404,
                        "description": "The backup was not found.",
                        "example": "{\n  \"errcode\": \"M_NOT_FOUND\",\n  \"error\": \"Unknown backup version\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Delete a key from the backup"
            }
        ],
        "group": "key_backup_cs"
    },
    "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
    "consumes": [
        "application/json"
    ],
    "host": "localhost:8008",
    "info": {
        "title": "Matrix Client-Server Key Backup API",
        "version": "1.0.0"
    },
    "paths": {
        "/room_keys/keys": {
            "delete": {
                "description": "Delete a key from the backup.",
                "operationId": "deleteRoomKeysKeyRoomId",
                "parameters": [
                    {
                        "description": "The backup from which to delete the key",
                        "in": "query",
                        "name": "version",
                        "required": true,
                        "type": "string",
                        "x-example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The update succeeded",
                        "schema": {
                            "properties": {
                                "count": {
                                    "description": "The number of keys stored in the backup",
                                    "example": 10,
                                    "type": "integer"
                                },
                                "etag": {
                                    "description": "The new etag value representing stored keys in the backup.\nSee ``GET /room_keys/version/{version}`` for more details.",
                                    "example": "abcdefg",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "etag",
                                "count"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The backup was not found.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_NOT_FOUND",
                                "error": "Unknown backup version"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Delete a key from the backup"
            },
            "get": {
                "description": "Retrieve the keys from the backup for a given room",
                "operationId": "getRoomKeysKeyRoomId",
                "parameters": [
                    {
                        "description": "The backup from which to retrieve the keys.",
                        "in": "query",
                        "name": "version",
                        "required": true,
                        "type": "string",
                        "x-example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The key data.  If no keys are found, then an object with an empty\n``rooms`` property will be returned (``{\"rooms\": {}}``).",
                        "schema": {
                            "properties": {
                                "rooms": {
                                    "additionalProperties": {
                                        "allOf": [
                                            {
                                                "description": "The backed up keys for a room.",
                                                "properties": {
                                                    "sessions": {
                                                        "additionalProperties": {
                                                            "allOf": [
                                                                {
                                                                    "description": "The key data",
                                                                    "properties": {
                                                                        "first_message_index": {
                                                                            "description": "The index of the first message in the session that the key can decrypt.",
                                                                            "example": 1,
                                                                            "type": "integer"
                                                                        },
                                                                        "forwarded_count": {
                                                                            "description": "The number of times this key has been forwarded via key-sharing between devices.",
                                                                            "example": 0,
                                                                            "type": "integer"
                                                                        },
                                                                        "is_verified": {
                                                                            "description": "Whether the device backing up the key verified the device that the key\nis from.",
                                                                            "example": false,
                                                                            "type": "boolean"
                                                                        },
                                                                        "session_data": {
                                                                            "description": "Algorithm-dependent data.  See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                                                            "example": {
                                                                                "ciphertext": "base64+ciphertext+of+JSON+data",
                                                                                "ephemeral": "base64+ephemeral+key",
                                                                                "mac": "base64+mac+of+ciphertext"
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "first_message_index",
                                                                        "forwarded_count",
                                                                        "is_verified",
                                                                        "session_data"
                                                                    ],
                                                                    "title": "KeyBackupData",
                                                                    "type": "object"
                                                                }
                                                            ]
                                                        },
                                                        "description": "A map of session IDs to key data.",
                                                        "example": {
                                                            "sessionid1": {
                                                                "first_message_index": 1,
                                                                "forwarded_count": 0,
                                                                "is_verified": true,
                                                                "session_data": {
                                                                    "ciphertext": "base64+ciphertext+of+JSON+data",
                                                                    "ephemeral": "base64+ephemeral+key",
                                                                    "mac": "base64+mac+of+ciphertext"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "sessions"
                                                ],
                                                "title": "RoomKeyBackup",
                                                "type": "object"
                                            }
                                        ]
                                    },
                                    "description": "A map of room IDs to room key backup data.",
                                    "example": {
                                        "!room:example.org": {
                                            "sessions": {
                                                "sessionid1": {
                                                    "first_message_index": 1,
                                                    "forwarded_count": 0,
                                                    "is_verified": true,
                                                    "session_data": {
                                                        "ciphertext": "base64+ciphertext+of+JSON+data",
                                                        "ephemeral": "base64+ephemeral+key",
                                                        "mac": "base64+mac+of+ciphertext"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The backup was not found.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_NOT_FOUND",
                                "error": "Unknown backup version."
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Retrieve the keys from the backup for a given room"
            },
            "put": {
                "description": "Store several keys in the backup.",
                "operationId": "postRoomKeysKey",
                "parameters": [
                    {
                        "description": "The backup in which to store the keys. Must be the current backup.",
                        "in": "query",
                        "name": "version",
                        "required": true,
                        "type": "string",
                        "x-example": "1"
                    },
                    {
                        "description": "The backup data.",
                        "in": "body",
                        "name": "backupData",
                        "required": true,
                        "schema": {
                            "properties": {
                                "rooms": {
                                    "additionalProperties": {
                                        "allOf": [
                                            {
                                                "description": "The backed up keys for a room.",
                                                "properties": {
                                                    "sessions": {
                                                        "additionalProperties": {
                                                            "allOf": [
                                                                {
                                                                    "description": "The key data",
                                                                    "properties": {
                                                                        "first_message_index": {
                                                                            "description": "The index of the first message in the session that the key can decrypt.",
                                                                            "example": 1,
                                                                            "type": "integer"
                                                                        },
                                                                        "forwarded_count": {
                                                                            "description": "The number of times this key has been forwarded via key-sharing between devices.",
                                                                            "example": 0,
                                                                            "type": "integer"
                                                                        },
                                                                        "is_verified": {
                                                                            "description": "Whether the device backing up the key verified the device that the key\nis from.",
                                                                            "example": false,
                                                                            "type": "boolean"
                                                                        },
                                                                        "session_data": {
                                                                            "description": "Algorithm-dependent data.  See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                                                            "example": {
                                                                                "ciphertext": "base64+ciphertext+of+JSON+data",
                                                                                "ephemeral": "base64+ephemeral+key",
                                                                                "mac": "base64+mac+of+ciphertext"
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "first_message_index",
                                                                        "forwarded_count",
                                                                        "is_verified",
                                                                        "session_data"
                                                                    ],
                                                                    "title": "KeyBackupData",
                                                                    "type": "object"
                                                                }
                                                            ]
                                                        },
                                                        "description": "A map of session IDs to key data.",
                                                        "example": {
                                                            "sessionid1": {
                                                                "first_message_index": 1,
                                                                "forwarded_count": 0,
                                                                "is_verified": true,
                                                                "session_data": {
                                                                    "ciphertext": "base64+ciphertext+of+JSON+data",
                                                                    "ephemeral": "base64+ephemeral+key",
                                                                    "mac": "base64+mac+of+ciphertext"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "sessions"
                                                ],
                                                "title": "RoomKeyBackup",
                                                "type": "object"
                                            }
                                        ]
                                    },
                                    "description": "A map of room IDs to room key backup data.",
                                    "example": {
                                        "!room:example.org": {
                                            "sessions": {
                                                "sessionid1": {
                                                    "first_message_index": 1,
                                                    "forwarded_count": 0,
                                                    "is_verified": true,
                                                    "session_data": {
                                                        "ciphertext": "base64+ciphertext+of+JSON+data",
                                                        "ephemeral": "base64+ephemeral+key",
                                                        "mac": "base64+mac+of+ciphertext"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "required": [
                                "rooms"
                            ],
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The update succeeded",
                        "schema": {
                            "properties": {
                                "count": {
                                    "description": "The number of keys stored in the backup",
                                    "example": 10,
                                    "type": "integer"
                                },
                                "etag": {
                                    "description": "The new etag value representing stored keys in the backup.\nSee ``GET /room_keys/version/{version}`` for more details.",
                                    "example": "abcdefg",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "etag",
                                "count"
                            ],
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "The version specified does not match the current backup version.\nThe current version will be included in the ``current_version``\nfield.",
                        "examples": {
                            "application/json": {
                                "current_version": "42",
                                "errcode": "M_WRONG_ROOM_KEYS_VERSION",
                                "error": "Wrong backup version."
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The backup was not found.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_NOT_FOUND",
                                "error": "Unknown backup version"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Store several keys in the backup.",
                "tags": [
                    "End-to-end encryption"
                ]
            }
        },
        "/room_keys/keys/{roomId}": {
            "delete": {
                "description": "Delete a key from the backup.",
                "operationId": "deleteRoomKeysKeyRoomId",
                "parameters": [
                    {
                        "description": "The backup from which to delete the key.",
                        "in": "query",
                        "name": "version",
                        "required": true,
                        "type": "string",
                        "x-example": "1"
                    },
                    {
                        "description": "The ID of the room that the specified key is for.",
                        "in": "path",
                        "name": "roomId",
                        "required": true,
                        "type": "string",
                        "x-example": "!roomid:example.org"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The update succeeded",
                        "schema": {
                            "properties": {
                                "count": {
                                    "description": "The number of keys stored in the backup",
                                    "example": 10,
                                    "type": "integer"
                                },
                                "etag": {
                                    "description": "The new etag value representing stored keys in the backup.\nSee ``GET /room_keys/version/{version}`` for more details.",
                                    "example": "abcdefg",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "etag",
                                "count"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The backup was not found.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_NOT_FOUND",
                                "error": "Unknown backup version"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Delete a key from the backup"
            },
            "get": {
                "description": "Retrieve the keys from the backup for a given room",
                "operationId": "getRoomKeysKeyRoomId",
                "parameters": [
                    {
                        "description": "The backup from which to retrieve the key.",
                        "in": "query",
                        "name": "version",
                        "required": true,
                        "type": "string",
                        "x-example": "1"
                    },
                    {
                        "description": "The ID of the room that the requested key is for.",
                        "in": "path",
                        "name": "roomId",
                        "required": true,
                        "type": "string",
                        "x-example": "!roomid:example.org"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The key data.  If no keys are found, then an object with an empty\n``sessions`` property will be returned (``{\"sessions\": {}}``).",
                        "schema": {
                            "description": "The backed up keys for a room.",
                            "properties": {
                                "sessions": {
                                    "additionalProperties": {
                                        "allOf": [
                                            {
                                                "description": "The key data",
                                                "properties": {
                                                    "first_message_index": {
                                                        "description": "The index of the first message in the session that the key can decrypt.",
                                                        "example": 1,
                                                        "type": "integer"
                                                    },
                                                    "forwarded_count": {
                                                        "description": "The number of times this key has been forwarded via key-sharing between devices.",
                                                        "example": 0,
                                                        "type": "integer"
                                                    },
                                                    "is_verified": {
                                                        "description": "Whether the device backing up the key verified the device that the key\nis from.",
                                                        "example": false,
                                                        "type": "boolean"
                                                    },
                                                    "session_data": {
                                                        "description": "Algorithm-dependent data.  See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                                        "example": {
                                                            "ciphertext": "base64+ciphertext+of+JSON+data",
                                                            "ephemeral": "base64+ephemeral+key",
                                                            "mac": "base64+mac+of+ciphertext"
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "first_message_index",
                                                    "forwarded_count",
                                                    "is_verified",
                                                    "session_data"
                                                ],
                                                "title": "KeyBackupData",
                                                "type": "object"
                                            }
                                        ]
                                    },
                                    "description": "A map of session IDs to key data.",
                                    "example": {
                                        "sessionid1": {
                                            "first_message_index": 1,
                                            "forwarded_count": 0,
                                            "is_verified": true,
                                            "session_data": {
                                                "ciphertext": "base64+ciphertext+of+JSON+data",
                                                "ephemeral": "base64+ephemeral+key",
                                                "mac": "base64+mac+of+ciphertext"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "required": [
                                "sessions"
                            ],
                            "title": "RoomKeyBackup",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The backup was not found.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_NOT_FOUND",
                                "error": "Unknown backup version"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Retrieve the keys from the backup for a given room"
            },
            "put": {
                "description": "Store a key in the backup.",
                "operationId": "postRoomKeysKeyRoomId",
                "parameters": [
                    {
                        "description": "The backup in which to store the keys. Must be the current backup.",
                        "in": "query",
                        "name": "version",
                        "required": true,
                        "type": "string",
                        "x-example": "1"
                    },
                    {
                        "description": "The ID of the room that the keys are for.",
                        "in": "path",
                        "name": "roomId",
                        "required": true,
                        "type": "string",
                        "x-example": "!roomid:example.org"
                    },
                    {
                        "description": "The backup data",
                        "in": "body",
                        "name": "backupData",
                        "required": true,
                        "schema": {
                            "description": "The backed up keys for a room.",
                            "properties": {
                                "sessions": {
                                    "additionalProperties": {
                                        "allOf": [
                                            {
                                                "description": "The key data",
                                                "properties": {
                                                    "first_message_index": {
                                                        "description": "The index of the first message in the session that the key can decrypt.",
                                                        "example": 1,
                                                        "type": "integer"
                                                    },
                                                    "forwarded_count": {
                                                        "description": "The number of times this key has been forwarded via key-sharing between devices.",
                                                        "example": 0,
                                                        "type": "integer"
                                                    },
                                                    "is_verified": {
                                                        "description": "Whether the device backing up the key verified the device that the key\nis from.",
                                                        "example": false,
                                                        "type": "boolean"
                                                    },
                                                    "session_data": {
                                                        "description": "Algorithm-dependent data.  See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                                        "example": {
                                                            "ciphertext": "base64+ciphertext+of+JSON+data",
                                                            "ephemeral": "base64+ephemeral+key",
                                                            "mac": "base64+mac+of+ciphertext"
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "first_message_index",
                                                    "forwarded_count",
                                                    "is_verified",
                                                    "session_data"
                                                ],
                                                "title": "KeyBackupData",
                                                "type": "object"
                                            }
                                        ]
                                    },
                                    "description": "A map of session IDs to key data.",
                                    "example": {
                                        "sessionid1": {
                                            "first_message_index": 1,
                                            "forwarded_count": 0,
                                            "is_verified": true,
                                            "session_data": {
                                                "ciphertext": "base64+ciphertext+of+JSON+data",
                                                "ephemeral": "base64+ephemeral+key",
                                                "mac": "base64+mac+of+ciphertext"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "required": [
                                "sessions"
                            ],
                            "title": "RoomKeyBackup",
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The update succeeded",
                        "schema": {
                            "properties": {
                                "count": {
                                    "description": "The number of keys stored in the backup",
                                    "example": 10,
                                    "type": "integer"
                                },
                                "etag": {
                                    "description": "The new etag value representing stored keys in the backup.\nSee ``GET /room_keys/version/{version}`` for more details.",
                                    "example": "abcdefg",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "etag",
                                "count"
                            ],
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "The version specified does not match the current backup version.\nThe current version will be included in the ``current_version``\nfield.",
                        "examples": {
                            "application/json": {
                                "current_version": "42",
                                "errcode": "M_WRONG_ROOM_KEYS_VERSION",
                                "error": "Wrong backup version."
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The backup was not found.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_NOT_FOUND",
                                "error": "Unknown backup version"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Store several keys in the backup for a given room.",
                "tags": [
                    "End-to-end encryption"
                ]
            }
        },
        "/room_keys/keys/{roomId}/{sessionId}": {
            "delete": {
                "description": "Delete a key from the backup.",
                "operationId": "deleteRoomKeysKeyRoomIdSessionId",
                "parameters": [
                    {
                        "description": "The backup from which to delete the key",
                        "in": "query",
                        "name": "version",
                        "required": true,
                        "type": "string",
                        "x-example": "1"
                    },
                    {
                        "description": "The ID of the room that the specified key is for.",
                        "in": "path",
                        "name": "roomId",
                        "required": true,
                        "type": "string",
                        "x-example": "!roomid:example.org"
                    },
                    {
                        "description": "The ID of the megolm session whose key is to be deleted.",
                        "in": "path",
                        "name": "sessionId",
                        "required": true,
                        "type": "string",
                        "x-example": "sessionid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The update succeeded",
                        "schema": {
                            "properties": {
                                "count": {
                                    "description": "The number of keys stored in the backup",
                                    "example": 10,
                                    "type": "integer"
                                },
                                "etag": {
                                    "description": "The new etag value representing stored keys in the backup.\nSee ``GET /room_keys/version/{version}`` for more details.",
                                    "example": "abcdefg",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "etag",
                                "count"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The backup was not found.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_NOT_FOUND",
                                "error": "Unknown backup version"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Delete a key from the backup"
            },
            "get": {
                "description": "Retrieve a key from the backup.",
                "operationId": "getRoomKeysKeyRoomIdSessionId",
                "parameters": [
                    {
                        "description": "The backup from which to retrieve the key.",
                        "in": "query",
                        "name": "version",
                        "required": true,
                        "type": "string",
                        "x-example": "1"
                    },
                    {
                        "description": "The ID of the room that the requested key is for.",
                        "in": "path",
                        "name": "roomId",
                        "required": true,
                        "type": "string",
                        "x-example": "!roomid:example.org"
                    },
                    {
                        "description": "The ID of the megolm session whose key is requested.",
                        "in": "path",
                        "name": "sessionId",
                        "required": true,
                        "type": "string",
                        "x-example": "sessionid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The key data",
                        "schema": {
                            "description": "The key data",
                            "properties": {
                                "first_message_index": {
                                    "description": "The index of the first message in the session that the key can decrypt.",
                                    "example": 1,
                                    "type": "integer"
                                },
                                "forwarded_count": {
                                    "description": "The number of times this key has been forwarded via key-sharing between devices.",
                                    "example": 0,
                                    "type": "integer"
                                },
                                "is_verified": {
                                    "description": "Whether the device backing up the key verified the device that the key\nis from.",
                                    "example": false,
                                    "type": "boolean"
                                },
                                "session_data": {
                                    "description": "Algorithm-dependent data.  See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                    "example": {
                                        "ciphertext": "base64+ciphertext+of+JSON+data",
                                        "ephemeral": "base64+ephemeral+key",
                                        "mac": "base64+mac+of+ciphertext"
                                    },
                                    "type": "object"
                                }
                            },
                            "required": [
                                "first_message_index",
                                "forwarded_count",
                                "is_verified",
                                "session_data"
                            ],
                            "title": "KeyBackupData",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The key or backup was not found.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_NOT_FOUND",
                                "error": "Key not found."
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Retrieve a key from the backup"
            },
            "put": {
                "description": "Store a key in the backup.",
                "operationId": "postRoomKeysKeyRoomIdSessionId",
                "parameters": [
                    {
                        "description": "The backup in which to store the key. Must be the current backup.",
                        "in": "query",
                        "name": "version",
                        "required": true,
                        "type": "string",
                        "x-example": "1"
                    },
                    {
                        "description": "The ID of the room that the key is for.",
                        "in": "path",
                        "name": "roomId",
                        "required": true,
                        "type": "string",
                        "x-example": "!roomid:example.org"
                    },
                    {
                        "description": "The ID of the megolm session that the key is for.",
                        "in": "path",
                        "name": "sessionId",
                        "required": true,
                        "type": "string",
                        "x-example": "sessionid"
                    },
                    {
                        "description": "The key data.",
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "description": "The key data",
                            "properties": {
                                "first_message_index": {
                                    "description": "The index of the first message in the session that the key can decrypt.",
                                    "example": 1,
                                    "type": "integer"
                                },
                                "forwarded_count": {
                                    "description": "The number of times this key has been forwarded via key-sharing between devices.",
                                    "example": 0,
                                    "type": "integer"
                                },
                                "is_verified": {
                                    "description": "Whether the device backing up the key verified the device that the key\nis from.",
                                    "example": false,
                                    "type": "boolean"
                                },
                                "session_data": {
                                    "description": "Algorithm-dependent data.  See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                    "example": {
                                        "ciphertext": "base64+ciphertext+of+JSON+data",
                                        "ephemeral": "base64+ephemeral+key",
                                        "mac": "base64+mac+of+ciphertext"
                                    },
                                    "type": "object"
                                }
                            },
                            "required": [
                                "first_message_index",
                                "forwarded_count",
                                "is_verified",
                                "session_data"
                            ],
                            "title": "KeyBackupData",
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The update succeeded.",
                        "schema": {
                            "properties": {
                                "count": {
                                    "description": "The number of keys stored in the backup",
                                    "example": 10,
                                    "type": "integer"
                                },
                                "etag": {
                                    "description": "The new etag value representing stored keys in the backup.\nSee ``GET /room_keys/version/{version}`` for more details.",
                                    "example": "abcdefg",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "etag",
                                "count"
                            ],
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "The version specified does not match the current backup version.\nThe current version will be included in the ``current_version``\nfield.",
                        "examples": {
                            "application/json": {
                                "current_version": "42",
                                "errcode": "M_WRONG_ROOM_KEYS_VERSION",
                                "error": "Wrong backup version."
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Store a key in the backup.",
                "tags": [
                    "End-to-end encryption"
                ]
            }
        },
        "/room_keys/version": {
            "get": {
                "description": "Get information about the latest backup version.",
                "operationId": "getRoomKeysVersionCurrent",
                "responses": {
                    "200": {
                        "description": "The information about the backup.",
                        "schema": {
                            "properties": {
                                "algorithm": {
                                    "description": "The algorithm used for storing backups.",
                                    "enum": [
                                        "m.megolm_backup.v1.curve25519-aes-sha2"
                                    ],
                                    "example": "m.megolm_backup.v1.curve25519-aes-sha2",
                                    "type": "string"
                                },
                                "auth_data": {
                                    "description": "Algorithm-dependent data. See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                    "example": {
                                        "public_key": "abcdefg",
                                        "signatures": {
                                            "@alice:example.org": {
                                                "ed25519:deviceid": "signature"
                                            }
                                        }
                                    },
                                    "type": "object"
                                },
                                "count": {
                                    "description": "The number of keys stored in the backup.",
                                    "example": 42,
                                    "type": "integer"
                                },
                                "etag": {
                                    "description": "An opaque string representing stored keys in the backup.\nClients can compare it with the ``etag`` value they received\nin the request of their last key storage request.  If not\nequal, another client has modified the backup.",
                                    "example": "anopaquestring",
                                    "type": "string"
                                },
                                "version": {
                                    "description": "The backup version.",
                                    "example": "1",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "algorithm",
                                "auth_data",
                                "count",
                                "etag",
                                "version"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "No backup exists.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_NOT_FOUND",
                                "error": "No current backup version"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Get information about the latest backup version.",
                "tags": [
                    "End-to-end encryption"
                ]
            },
            "post": {
                "description": "Creates a new backup.",
                "operationId": "postRoomKeysVersion",
                "parameters": [
                    {
                        "description": "The backup configuration.",
                        "in": "body",
                        "name": "version",
                        "required": true,
                        "schema": {
                            "properties": {
                                "algorithm": {
                                    "description": "The algorithm used for storing backups.",
                                    "enum": [
                                        "m.megolm_backup.v1.curve25519-aes-sha2"
                                    ],
                                    "example": "m.megolm_backup.v1.curve25519-aes-sha2",
                                    "type": "string"
                                },
                                "auth_data": {
                                    "description": "Algorithm-dependent data. See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                    "example": {
                                        "public_key": "abcdefg",
                                        "signatures": {
                                            "@alice:example.org": {
                                                "ed25519:deviceid": "signature"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "required": [
                                "algorithm",
                                "auth_data"
                            ],
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The version id of the new backup.",
                        "schema": {
                            "properties": {
                                "version": {
                                    "description": "The backup version. This is an opaque string.",
                                    "example": "1",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "version"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Create a new backup.",
                "tags": [
                    "End-to-end encryption"
                ]
            }
        },
        "/room_keys/version/{version}": {
            "delete": {
                "description": "Delete an existing key backup. Both the information about the backup,\nas well as all key data related to the backup will be deleted.",
                "operationId": "deleteRoomKeysVersion",
                "parameters": [
                    {
                        "description": "The backup version to delete, as returned in the ``version``\nparameter in the response of `POST\n/_matrix/client/r0/room_keys/version`_ or `GET\n/_matrix/client/r0/room_keys/version/{version}`_.",
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string",
                        "x-example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The delete succeeded, or the specified backup was previously\ndeleted.",
                        "schema": {
                            "properties": {},
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The backup specified does not exist. If the backup was previously\ndeleted, the call should succeed rather than returning an error.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_NOT_FOUND",
                                "error": "Unknown backup version"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Delete an existing key backup.",
                "tags": [
                    "End-to-end encryption"
                ]
            },
            "get": {
                "description": "Get information about an existing backup.",
                "operationId": "getRoomKeysVersion",
                "parameters": [
                    {
                        "description": "The backup version to get, as returned in the ``version`` parameter\nof the response in `POST /_matrix/client/r0/room_keys/version`_ or\nthis endpoint.",
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string",
                        "x-example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The information about the requested backup.",
                        "schema": {
                            "properties": {
                                "algorithm": {
                                    "description": "The algorithm used for storing backups.",
                                    "enum": [
                                        "m.megolm_backup.v1.curve25519-aes-sha2"
                                    ],
                                    "example": "m.megolm_backup.v1.curve25519-aes-sha2",
                                    "type": "string"
                                },
                                "auth_data": {
                                    "description": "Algorithm-dependent data. See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                    "example": {
                                        "public_key": "abcdefg",
                                        "signatures": {
                                            "@alice:example.org": {
                                                "ed25519:deviceid": "signature"
                                            }
                                        }
                                    },
                                    "type": "object"
                                },
                                "count": {
                                    "description": "The number of keys stored in the backup.",
                                    "example": 42,
                                    "type": "integer"
                                },
                                "etag": {
                                    "description": "An opaque string representing stored keys in the backup.\nClients can compare it with the ``etag`` value they received\nin the request of their last key storage request.  If not\nequal, another client has modified the backup.",
                                    "example": "anopaquestring",
                                    "type": "string"
                                },
                                "version": {
                                    "description": "The backup version.",
                                    "example": "1",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "algorithm",
                                "auth_data",
                                "count",
                                "etag",
                                "version"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The backup specified does not exist.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_NOT_FOUND",
                                "error": "Unknown backup version"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Get information about an existing backup.",
                "tags": [
                    "End-to-end encryption"
                ]
            },
            "put": {
                "description": "Update information about an existing backup.  Only ``auth_data`` can be modified.",
                "operationId": "putRoomKeysVersion",
                "parameters": [
                    {
                        "description": "The backup version to update, as returned in the ``version``\nparameter in the response of `POST\n/_matrix/client/r0/room_keys/version`_ or `GET\n/_matrix/client/r0/room_keys/version/{version}`_.",
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string",
                        "x-example": "1"
                    },
                    {
                        "description": "The backup configuration",
                        "in": "body",
                        "name": "version",
                        "required": true,
                        "schema": {
                            "properties": {
                                "algorithm": {
                                    "description": "The algorithm used for storing backups.  Must be the same as\nthe algorithm currently used by the backup.",
                                    "enum": [
                                        "m.megolm_backup.v1.curve25519-aes-sha2"
                                    ],
                                    "example": "m.megolm_backup.v1.curve25519-aes-sha2",
                                    "type": "string"
                                },
                                "auth_data": {
                                    "description": "Algorithm-dependent data. See the documentation for the backup\nalgorithms in `Server-side key backups`_ for more information on the\nexpected format of the data.",
                                    "example": {
                                        "public_key": "abcdefg",
                                        "signatures": {
                                            "@alice:example.org": {
                                                "ed25519:deviceid": "signature"
                                            }
                                        }
                                    },
                                    "type": "object"
                                },
                                "version": {
                                    "description": "The backup version.  If present, must be the same as the\nversion in the path parameter.",
                                    "example": "1",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "algorithm",
                                "auth_data"
                            ],
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The update succeeded.",
                        "schema": {
                            "properties": {},
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "A parameter was incorrect.  For example, the ``algorithm`` does not\nmatch the current backup algorithm, or the ``version`` in the body\ndoes not match the ``version`` in the path.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_INVALID_PARAM",
                                "error": "Algorithm does not match"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "The backup specified does not exist.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_NOT_FOUND",
                                "error": "Unknown backup version"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Update information about an existing backup.",
                "tags": [
                    "End-to-end encryption"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https",
        "http"
    ],
    "securityDefinitions": {
        "accessToken": {
            "description": "The access_token returned by a call to ``/login`` or ``/register``",
            "in": "query",
            "name": "access_token",
            "type": "apiKey"
        }
    },
    "swagger": "2.0"
}