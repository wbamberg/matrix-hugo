{
    "__meta": {
        "base": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "endpoints": [
            {
                "deprecated": false,
                "desc": "This tells the server that the user is typing for the next N\nmilliseconds where N is the value specified in the ``timeout`` key.\nAlternatively, if ``typing`` is ``false``, it tells the server that the\nuser has stopped typing.",
                "example": {
                    "req": "PUT /_matrix/client/%CLIENT_MAJOR_VERSION%/rooms/%21wefh3sfukhs%3Aexample.com/typing/%40alice%3Aexample.com HTTP/1.1\nContent-Type: application/json\n\n{\n  \"typing\": true,\n  \"timeout\": 30000\n}"
                },
                "method": "PUT",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/rooms/{roomId}/typing/{userId}",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "**Required.** Whether the user is typing or not. If ``false``, the ``timeout``\nkey can be omitted.",
                            "key": "typing",
                            "required": true,
                            "title": "boolean"
                        },
                        {
                            "desc": "The length of time in milliseconds to mark this user as typing.",
                            "key": "timeout",
                            "required": false,
                            "title": "integer"
                        }
                    ],
                    "path": [
                        {
                            "desc": "**Required.** The user who has started to type.",
                            "key": "userId",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "**Required.** The room in which the user is typing.",
                            "key": "roomId",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [],
                "responses": [
                    {
                        "code": 200,
                        "description": "The new typing state was set.",
                        "example": "{}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Informs the server that the user has started or stopped typing."
            }
        ],
        "group": "typing_cs"
    },
    "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
    "consumes": [
        "application/json"
    ],
    "host": "localhost:8008",
    "info": {
        "title": "Matrix Client-Server Typing API",
        "version": "1.0.0"
    },
    "paths": {
        "/rooms/{roomId}/typing/{userId}": {
            "put": {
                "description": "This tells the server that the user is typing for the next N\nmilliseconds where N is the value specified in the ``timeout`` key.\nAlternatively, if ``typing`` is ``false``, it tells the server that the\nuser has stopped typing.",
                "operationId": "setTyping",
                "parameters": [
                    {
                        "description": "The user who has started to type.",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "string",
                        "x-example": "@alice:example.com"
                    },
                    {
                        "description": "The room in which the user is typing.",
                        "in": "path",
                        "name": "roomId",
                        "required": true,
                        "type": "string",
                        "x-example": "!wefh3sfukhs:example.com"
                    },
                    {
                        "description": "The current typing state.",
                        "in": "body",
                        "name": "typingState",
                        "required": true,
                        "schema": {
                            "example": {
                                "timeout": 30000,
                                "typing": true
                            },
                            "properties": {
                                "timeout": {
                                    "description": "The length of time in milliseconds to mark this user as typing.",
                                    "type": "integer"
                                },
                                "typing": {
                                    "description": "Whether the user is typing or not. If ``false``, the ``timeout``\nkey can be omitted.",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "typing"
                            ],
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The new typing state was set.",
                        "examples": {
                            "application/json": {}
                        },
                        "schema": {
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Informs the server that the user has started or stopped typing.",
                "tags": [
                    "Room participation"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https",
        "http"
    ],
    "securityDefinitions": {
        "accessToken": {
            "description": "The access_token returned by a call to ``/login`` or ``/register``",
            "in": "query",
            "name": "access_token",
            "type": "apiKey"
        }
    },
    "swagger": "2.0"
}