{
    "__meta": {
        "base": "/_matrix/media/%CLIENT_MAJOR_VERSION%",
        "endpoints": [
            {
                "deprecated": false,
                "desc": "Upload some content to the content repository.",
                "example": {
                    "req": "POST /_matrix/media/%CLIENT_MAJOR_VERSION%/upload?filename=War+and+Peace.pdf HTTP/1.1\nContent-Type: Content-Type: application/pdf\n\n<bytes>"
                },
                "method": "POST",
                "path": "/_matrix/media/%CLIENT_MAJOR_VERSION%/upload",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "header": [
                        {
                            "desc": "The content type of the file being uploaded",
                            "key": "Content-Type",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "query": [
                        {
                            "desc": "The name of the file being uploaded",
                            "key": "filename",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The `MXC URI`_ to the uploaded content.",
                                "key": "content_uri",
                                "required": true,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The `MXC URI`_ for the uploaded content.",
                        "example": "{\n  \"content_uri\": \"mxc://example.com/AQwafuaFswefuhsfAFAgsw\"\n}"
                    },
                    {
                        "code": 403,
                        "description": "The user does not have permission to upload the content. Some reasons for this error include:\n\n- The server does not permit the file type.\n- The user has reached a quota for uploaded content.",
                        "example": "{\n  \"errcode\": \"M_FORBIDDEN\",\n  \"error\": \"Cannot upload this content\"\n}"
                    },
                    {
                        "code": 413,
                        "description": "The uploaded content is too large for the server.",
                        "example": "{\n  \"errcode\": \"M_TOO_LARGE\",\n  \"error\": \"Cannot upload files larger than 100mb\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Upload some content to the content repository."
            },
            {
                "deprecated": false,
                "desc": "Download content from the content repository.",
                "example": {
                    "req": "GET /_matrix/media/%CLIENT_MAJOR_VERSION%/download/matrix.org/ascERGshawAWawugaAcauga?allow_remote=False HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/media/%CLIENT_MAJOR_VERSION%/download/{serverName}/{mediaId}",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** The server name from the ``mxc://`` URI (the authoritory component)\n",
                            "key": "serverName",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "**Required.** The media ID from the ``mxc://`` URI (the path component)\n",
                            "key": "mediaId",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "query": [
                        {
                            "desc": "Indicates to the server that it should not attempt to fetch the media if it is deemed\nremote. This is to prevent routing loops where the server contacts itself. Defaults to\ntrue if not provided.\n",
                            "key": "allow_remote",
                            "required": false,
                            "title": "boolean"
                        }
                    ]
                },
                "requires_auth": false,
                "res_headers": [
                    null,
                    null,
                    [
                        {
                            "desc": "The content type of the file that was previously uploaded.",
                            "key": "Content-Type",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "The name of the file that was previously uploaded, if set.",
                            "key": "Content-Disposition",
                            "required": false,
                            "title": "string"
                        }
                    ]
                ],
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The bytes for the uploaded file.",
                                "key": "<body>",
                                "required": false,
                                "title": "file"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The content that was previously uploaded.",
                        "example": null
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    },
                    {
                        "code": 502,
                        "description": "The content is too large for the server to serve.",
                        "example": "{\n  \"errcode\": \"M_TOO_LARGE\",\n  \"error\": \"Content is too large to serve\"\n}"
                    }
                ],
                "title": "Download content from the content repository."
            },
            {
                "deprecated": false,
                "desc": "This will download content from the content repository (same as\nthe previous endpoint) but replace the target file name with the one\nprovided by the caller.",
                "example": {
                    "req": "GET /_matrix/media/%CLIENT_MAJOR_VERSION%/download/matrix.org/ascERGshawAWawugaAcauga/filename.jpg?allow_remote=False HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/media/%CLIENT_MAJOR_VERSION%/download/{serverName}/{mediaId}/{fileName}",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** The server name from the ``mxc://`` URI (the authoritory component)\n",
                            "key": "serverName",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "**Required.** The media ID from the ``mxc://`` URI (the path component)\n",
                            "key": "mediaId",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "**Required.** A filename to give in the ``Content-Disposition`` header.",
                            "key": "fileName",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "query": [
                        {
                            "desc": "Indicates to the server that it should not attempt to fetch the media if it is deemed\nremote. This is to prevent routing loops where the server contacts itself. Defaults to\ntrue if not provided.\n",
                            "key": "allow_remote",
                            "required": false,
                            "title": "boolean"
                        }
                    ]
                },
                "requires_auth": false,
                "res_headers": [
                    null,
                    null,
                    [
                        {
                            "desc": "The content type of the file that was previously uploaded.",
                            "key": "Content-Type",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "The ``fileName`` requested or the name of the file that was previously\nuploaded, if set.",
                            "key": "Content-Disposition",
                            "required": false,
                            "title": "string"
                        }
                    ]
                ],
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The bytes for the uploaded file.",
                                "key": "<body>",
                                "required": false,
                                "title": "file"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The content that was previously uploaded.",
                        "example": null
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    },
                    {
                        "code": 502,
                        "description": "The content is too large for the server to serve.",
                        "example": "{\n  \"errcode\": \"M_TOO_LARGE\",\n  \"error\": \"Content is too large to serve\"\n}"
                    }
                ],
                "title": "Download content from the content repository overriding the file name"
            },
            {
                "deprecated": false,
                "desc": "Download a thumbnail of content from the content repository.\nSee the `thumbnailing <#thumbnails>`_ section for more information.",
                "example": {
                    "req": "GET /_matrix/media/%CLIENT_MAJOR_VERSION%/thumbnail/example.org/ascERGshawAWawugaAcauga?width=64&height=64&method=scale&allow_remote=False HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/media/%CLIENT_MAJOR_VERSION%/thumbnail/{serverName}/{mediaId}",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** The server name from the ``mxc://`` URI (the authoritory component)\n",
                            "key": "serverName",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "**Required.** The media ID from the ``mxc://`` URI (the path component)\n",
                            "key": "mediaId",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "query": [
                        {
                            "desc": "**Required.** The *desired* width of the thumbnail. The actual thumbnail may be\nlarger than the size specified.",
                            "key": "width",
                            "required": false,
                            "title": "integer"
                        },
                        {
                            "desc": "**Required.** The *desired* height of the thumbnail. The actual thumbnail may be\nlarger than the size specified.",
                            "key": "height",
                            "required": false,
                            "title": "integer"
                        },
                        {
                            "desc": "The desired resizing method. See the `thumbnailing <#thumbnails>`_\nsection for more information. One of: [\"crop\", \"scale\"]",
                            "key": "method",
                            "required": false,
                            "title": "enum"
                        },
                        {
                            "desc": "Indicates to the server that it should not attempt to fetch\nthe media if it is deemed remote. This is to prevent routing loops\nwhere the server contacts itself. Defaults to true if not provided.",
                            "key": "allow_remote",
                            "required": false,
                            "title": "boolean"
                        }
                    ]
                },
                "requires_auth": false,
                "res_headers": [
                    null,
                    null,
                    [
                        {
                            "desc": "The content type of the thumbnail.",
                            "key": "Content-Type",
                            "required": false,
                            "title": "string"
                        }
                    ]
                ],
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The bytes for the thumbnail.",
                                "key": "<body>",
                                "required": false,
                                "title": "file"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "A thumbnail of the requested content.",
                        "example": null
                    },
                    {
                        "code": 400,
                        "description": "The request does not make sense to the server, or the server cannot thumbnail\nthe content. For example, the client requested non-integer dimensions or asked\nfor negatively-sized images.",
                        "example": "{\n  \"errcode\": \"M_UNKNOWN\",\n  \"error\": \"Cannot generate thumbnails for the requested content\"\n}"
                    },
                    {
                        "code": 413,
                        "description": "The local content is too large for the server to thumbnail.",
                        "example": "{\n  \"errcode\": \"M_TOO_LARGE\",\n  \"error\": \"Content is too large to thumbnail\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    },
                    {
                        "code": 502,
                        "description": "The remote content is too large for the server to thumbnail.",
                        "example": "{\n  \"errcode\": \"M_TOO_LARGE\",\n  \"error\": \"Content is too large to thumbnail\"\n}"
                    }
                ],
                "title": "Download a thumbnail of content from the content repository"
            },
            {
                "deprecated": false,
                "desc": "Get information about a URL for the client. Typically this is called when a\nclient sees a URL in a message and wants to render a preview for the user.\n\n.. Note::\n  Clients should consider avoiding this endpoint for URLs posted in encrypted\n  rooms. Encrypted rooms often contain more sensitive information the users\n  do not want to share with the homeserver, and this can mean that the URLs\n  being shared should also not be shared with the homeserver.",
                "example": {
                    "req": "GET /_matrix/media/%CLIENT_MAJOR_VERSION%/preview_url?url=https%3A%2F%2Fmatrix.org&ts=1510610716656 HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/media/%CLIENT_MAJOR_VERSION%/preview_url",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "query": [
                        {
                            "desc": "**Required.** The URL to get a preview of.",
                            "key": "url",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "The preferred point in time to return a preview for. The server may\nreturn a newer version if it does not have the requested version\navailable.",
                            "key": "ts",
                            "required": false,
                            "title": "integer"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "The byte-size of the image. Omitted if there is no image attached.",
                                "key": "matrix:image:size",
                                "required": false,
                                "title": "integer"
                            },
                            {
                                "desc": "An `MXC URI`_ to the image. Omitted if there is no image.",
                                "key": "og:image",
                                "required": false,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The OpenGraph data for the URL, which may be empty. Some values are\nreplaced with matrix equivalents if they are provided in the response.\nThe differences from the OpenGraph protocol are described here.",
                        "example": "{\n  \"og:title\": \"Matrix Blog Post\",\n  \"og:description\": \"This is a really cool blog post from matrix.org\",\n  \"og:image\": \"mxc://example.com/ascERGshawAWawugaAcauga\",\n  \"og:image:type\": \"image/png\",\n  \"og:image:height\": 48,\n  \"og:image:width\": 48,\n  \"matrix:image:size\": 102400\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Get information about a URL for a client"
            },
            {
                "deprecated": false,
                "desc": "This endpoint allows clients to retrieve the configuration of the content\nrepository, such as upload limitations.\nClients SHOULD use this as a guide when using content repository endpoints.\nAll values are intentionally left optional. Clients SHOULD follow\nthe advice given in the field description when the field is not available.\n\n**NOTE:** Both clients and server administrators should be aware that proxies\nbetween the client and the server may affect the apparent behaviour of content\nrepository APIs, for example, proxies may enforce a lower upload size limit\nthan is advertised by the server on this endpoint.",
                "example": {
                    "req": "GET /_matrix/media/%CLIENT_MAJOR_VERSION%/config HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/media/%CLIENT_MAJOR_VERSION%/config",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {},
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "The maximum size an upload can be in bytes.\nClients SHOULD use this as a guide when uploading content.\nIf not listed or null, the size limit should be treated as unknown.",
                                "key": "m.upload.size",
                                "required": false,
                                "title": "integer"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The public content repository configuration for the matrix server.",
                        "example": "{\n  \"m.upload.size\": 50000000\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_UNKNOWN\",\n  \"error\": \"An unknown error occurred\"\n}"
                    }
                ],
                "title": "Get the configuration for the content repository."
            }
        ],
        "group": "content_repo_cs"
    },
    "basePath": "/_matrix/media/%CLIENT_MAJOR_VERSION%",
    "consumes": [
        "application/json",
        "*/*"
    ],
    "host": "localhost:8008",
    "info": {
        "title": "Matrix Client-Server Content Repository API",
        "version": "1.0.0"
    },
    "paths": {
        "/config": {
            "get": {
                "description": "This endpoint allows clients to retrieve the configuration of the content\nrepository, such as upload limitations.\nClients SHOULD use this as a guide when using content repository endpoints.\nAll values are intentionally left optional. Clients SHOULD follow\nthe advice given in the field description when the field is not available.\n\n**NOTE:** Both clients and server administrators should be aware that proxies\nbetween the client and the server may affect the apparent behaviour of content\nrepository APIs, for example, proxies may enforce a lower upload size limit\nthan is advertised by the server on this endpoint.",
                "operationId": "getConfig",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The public content repository configuration for the matrix server.",
                        "examples": {
                            "application/json": {
                                "m.upload.size": 50000000
                            }
                        },
                        "schema": {
                            "properties": {
                                "m.upload.size": {
                                    "description": "The maximum size an upload can be in bytes.\nClients SHOULD use this as a guide when uploading content.\nIf not listed or null, the size limit should be treated as unknown.",
                                    "format": "int64",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Get the configuration for the content repository.",
                "tags": [
                    "Media"
                ]
            }
        },
        "/download/{serverName}/{mediaId}": {
            "get": {
                "operationId": "getContent",
                "parameters": [
                    {
                        "description": "The server name from the ``mxc://`` URI (the authoritory component)\n",
                        "in": "path",
                        "name": "serverName",
                        "required": true,
                        "type": "string",
                        "x-example": "matrix.org"
                    },
                    {
                        "description": "The media ID from the ``mxc://`` URI (the path component)\n",
                        "in": "path",
                        "name": "mediaId",
                        "required": true,
                        "type": "string",
                        "x-example": "ascERGshawAWawugaAcauga"
                    },
                    {
                        "default": true,
                        "description": "Indicates to the server that it should not attempt to fetch the media if it is deemed\nremote. This is to prevent routing loops where the server contacts itself. Defaults to\ntrue if not provided.\n",
                        "in": "query",
                        "name": "allow_remote",
                        "required": false,
                        "type": "boolean",
                        "x-example": false
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "The content that was previously uploaded.",
                        "headers": {
                            "Content-Disposition": {
                                "description": "The name of the file that was previously uploaded, if set.",
                                "type": "string"
                            },
                            "Content-Type": {
                                "description": "The content type of the file that was previously uploaded.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "**Required.** The bytes for the uploaded file.",
                            "type": "file"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "502": {
                        "description": "The content is too large for the server to serve.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_TOO_LARGE",
                                "error": "Content is too large to serve"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Download content from the content repository.",
                "tags": [
                    "Media"
                ]
            }
        },
        "/download/{serverName}/{mediaId}/{fileName}": {
            "get": {
                "description": "This will download content from the content repository (same as\nthe previous endpoint) but replace the target file name with the one\nprovided by the caller.",
                "operationId": "getContentOverrideName",
                "parameters": [
                    {
                        "description": "The server name from the ``mxc://`` URI (the authoritory component)\n",
                        "in": "path",
                        "name": "serverName",
                        "required": true,
                        "type": "string",
                        "x-example": "matrix.org"
                    },
                    {
                        "description": "The media ID from the ``mxc://`` URI (the path component)\n",
                        "in": "path",
                        "name": "mediaId",
                        "required": true,
                        "type": "string",
                        "x-example": "ascERGshawAWawugaAcauga"
                    },
                    {
                        "description": "A filename to give in the ``Content-Disposition`` header.",
                        "in": "path",
                        "name": "fileName",
                        "required": true,
                        "type": "string",
                        "x-example": "filename.jpg"
                    },
                    {
                        "default": true,
                        "description": "Indicates to the server that it should not attempt to fetch the media if it is deemed\nremote. This is to prevent routing loops where the server contacts itself. Defaults to\ntrue if not provided.\n",
                        "in": "query",
                        "name": "allow_remote",
                        "required": false,
                        "type": "boolean",
                        "x-example": false
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "The content that was previously uploaded.",
                        "headers": {
                            "Content-Disposition": {
                                "description": "The ``fileName`` requested or the name of the file that was previously\nuploaded, if set.",
                                "type": "string"
                            },
                            "Content-Type": {
                                "description": "The content type of the file that was previously uploaded.",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "**Required.** The bytes for the uploaded file.",
                            "type": "file"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "502": {
                        "description": "The content is too large for the server to serve.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_TOO_LARGE",
                                "error": "Content is too large to serve"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Download content from the content repository overriding the file name",
                "tags": [
                    "Media"
                ]
            }
        },
        "/preview_url": {
            "get": {
                "description": "Get information about a URL for the client. Typically this is called when a\nclient sees a URL in a message and wants to render a preview for the user.\n\n.. Note::\n  Clients should consider avoiding this endpoint for URLs posted in encrypted\n  rooms. Encrypted rooms often contain more sensitive information the users\n  do not want to share with the homeserver, and this can mean that the URLs\n  being shared should also not be shared with the homeserver.",
                "operationId": "getUrlPreview",
                "parameters": [
                    {
                        "description": "The URL to get a preview of.",
                        "in": "query",
                        "name": "url",
                        "required": true,
                        "type": "string",
                        "x-example": "https://matrix.org"
                    },
                    {
                        "description": "The preferred point in time to return a preview for. The server may\nreturn a newer version if it does not have the requested version\navailable.",
                        "format": "int64",
                        "in": "query",
                        "name": "ts",
                        "type": "integer",
                        "x-example": 1510610716656
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The OpenGraph data for the URL, which may be empty. Some values are\nreplaced with matrix equivalents if they are provided in the response.\nThe differences from the OpenGraph protocol are described here.",
                        "examples": {
                            "application/json": {
                                "matrix:image:size": 102400,
                                "og:description": "This is a really cool blog post from matrix.org",
                                "og:image": "mxc://example.com/ascERGshawAWawugaAcauga",
                                "og:image:height": 48,
                                "og:image:type": "image/png",
                                "og:image:width": 48,
                                "og:title": "Matrix Blog Post"
                            }
                        },
                        "schema": {
                            "properties": {
                                "matrix:image:size": {
                                    "description": "The byte-size of the image. Omitted if there is no image attached.",
                                    "format": "int64",
                                    "type": "integer"
                                },
                                "og:image": {
                                    "description": "An `MXC URI`_ to the image. Omitted if there is no image.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Get information about a URL for a client",
                "tags": [
                    "Media"
                ]
            }
        },
        "/thumbnail/{serverName}/{mediaId}": {
            "get": {
                "description": "Download a thumbnail of content from the content repository.\nSee the `thumbnailing <#thumbnails>`_ section for more information.",
                "operationId": "getContentThumbnail",
                "parameters": [
                    {
                        "description": "The server name from the ``mxc://`` URI (the authoritory component)\n",
                        "in": "path",
                        "name": "serverName",
                        "required": true,
                        "type": "string",
                        "x-example": "example.org"
                    },
                    {
                        "description": "The media ID from the ``mxc://`` URI (the path component)\n",
                        "in": "path",
                        "name": "mediaId",
                        "required": true,
                        "type": "string",
                        "x-example": "ascERGshawAWawugaAcauga"
                    },
                    {
                        "description": "The *desired* width of the thumbnail. The actual thumbnail may be\nlarger than the size specified.",
                        "in": "query",
                        "name": "width",
                        "required": true,
                        "type": "integer",
                        "x-example": 64
                    },
                    {
                        "description": "The *desired* height of the thumbnail. The actual thumbnail may be\nlarger than the size specified.",
                        "in": "query",
                        "name": "height",
                        "required": true,
                        "type": "integer",
                        "x-example": 64
                    },
                    {
                        "description": "The desired resizing method. See the `thumbnailing <#thumbnails>`_\nsection for more information.",
                        "enum": [
                            "crop",
                            "scale"
                        ],
                        "in": "query",
                        "name": "method",
                        "type": "string",
                        "x-example": "scale"
                    },
                    {
                        "default": true,
                        "description": "Indicates to the server that it should not attempt to fetch\nthe media if it is deemed remote. This is to prevent routing loops\nwhere the server contacts itself. Defaults to true if not provided.",
                        "in": "query",
                        "name": "allow_remote",
                        "required": false,
                        "type": "boolean",
                        "x-example": false
                    }
                ],
                "produces": [
                    "image/jpeg",
                    "image/png"
                ],
                "responses": {
                    "200": {
                        "description": "A thumbnail of the requested content.",
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the thumbnail.",
                                "enum": [
                                    "image/jpeg",
                                    "image/png"
                                ],
                                "type": "string"
                            }
                        },
                        "schema": {
                            "description": "**Required.** The bytes for the thumbnail.",
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "The request does not make sense to the server, or the server cannot thumbnail\nthe content. For example, the client requested non-integer dimensions or asked\nfor negatively-sized images.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_UNKNOWN",
                                "error": "Cannot generate thumbnails for the requested content"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "413": {
                        "description": "The local content is too large for the server to thumbnail.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_TOO_LARGE",
                                "error": "Content is too large to thumbnail"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "502": {
                        "description": "The remote content is too large for the server to thumbnail.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_TOO_LARGE",
                                "error": "Content is too large to thumbnail"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "summary": "Download a thumbnail of content from the content repository",
                "tags": [
                    "Media"
                ]
            }
        },
        "/upload": {
            "post": {
                "operationId": "uploadContent",
                "parameters": [
                    {
                        "description": "The content type of the file being uploaded",
                        "in": "header",
                        "name": "Content-Type",
                        "type": "string",
                        "x-example": "Content-Type: application/pdf"
                    },
                    {
                        "description": "The name of the file being uploaded",
                        "in": "query",
                        "name": "filename",
                        "type": "string",
                        "x-example": "War and Peace.pdf"
                    },
                    {
                        "description": "The content to be uploaded.",
                        "in": "body",
                        "name": "<content>",
                        "required": true,
                        "schema": {
                            "example": "<bytes>",
                            "format": "byte",
                            "type": "string"
                        },
                        "x-example": "<bytes>"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The `MXC URI`_ for the uploaded content.",
                        "examples": {
                            "application/json": {
                                "content_uri": "mxc://example.com/AQwafuaFswefuhsfAFAgsw"
                            }
                        },
                        "schema": {
                            "properties": {
                                "content_uri": {
                                    "description": "The `MXC URI`_ to the uploaded content.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "content_uri"
                            ],
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "The user does not have permission to upload the content. Some reasons for this error include:\n\n- The server does not permit the file type.\n- The user has reached a quota for uploaded content.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_FORBIDDEN",
                                "error": "Cannot upload this content"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "413": {
                        "description": "The uploaded content is too large for the server.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_TOO_LARGE",
                                "error": "Cannot upload files larger than 100mb"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Upload some content to the content repository.",
                "tags": [
                    "Media"
                ]
            }
        }
    },
    "produces": [
        "application/json",
        "*/*"
    ],
    "schemes": [
        "https",
        "http"
    ],
    "securityDefinitions": {
        "accessToken": {
            "description": "The access_token returned by a call to ``/login`` or ``/register``",
            "in": "query",
            "name": "access_token",
            "type": "apiKey"
        }
    },
    "swagger": "2.0"
}