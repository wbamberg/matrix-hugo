{
    "__meta": {
        "base": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "endpoints": [
            {
                "deprecated": false,
                "desc": "Retrieve all push rulesets for this user. Clients can \"drill-down\" on\nthe rulesets by suffixing a ``scope`` to this path e.g.\n``/pushrules/global/``. This will return a subset of this data under the\nspecified key e.g. the ``global`` key.",
                "example": {
                    "req": "GET /_matrix/client/%CLIENT_MAJOR_VERSION%/pushrules/ HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/pushrules/",
                "rate_limited": false,
                "req_body_tables": [],
                "req_param_by_loc": {},
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The global ruleset.",
                                "key": "global",
                                "required": true,
                                "title": "Ruleset"
                            }
                        ]
                    ],
                    [
                        "Ruleset",
                        null,
                        [
                            {
                                "desc": "",
                                "key": "content",
                                "required": false,
                                "title": "[PushRule]"
                            },
                            {
                                "desc": "",
                                "key": "override",
                                "required": false,
                                "title": "[PushRule]"
                            },
                            {
                                "desc": "",
                                "key": "room",
                                "required": false,
                                "title": "[PushRule]"
                            },
                            {
                                "desc": "",
                                "key": "sender",
                                "required": false,
                                "title": "[PushRule]"
                            },
                            {
                                "desc": "",
                                "key": "underride",
                                "required": false,
                                "title": "[PushRule]"
                            }
                        ]
                    ],
                    [
                        "PushRule",
                        null,
                        [
                            {
                                "desc": "**Required.** The actions to perform when this rule is matched.",
                                "key": "actions",
                                "required": true,
                                "title": "[object or string]"
                            },
                            {
                                "desc": "**Required.** Whether this is a default rule, or has been set explicitly.",
                                "key": "default",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "**Required.** Whether the push rule is enabled or not.",
                                "key": "enabled",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "**Required.** The ID of this rule.",
                                "key": "rule_id",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "The conditions that must hold true for an event in order for a rule to be\napplied to an event. A rule with no conditions always matches. Only\napplicable to ``underride`` and ``override`` rules.",
                                "key": "conditions",
                                "required": false,
                                "title": "[PushCondition]"
                            },
                            {
                                "desc": "The glob-style pattern to match against.  Only applicable to ``content``\nrules.",
                                "key": "pattern",
                                "required": false,
                                "title": "string"
                            }
                        ]
                    ],
                    [
                        "PushCondition",
                        null,
                        [
                            {
                                "desc": "**Required.** The kind of condition to apply. See `conditions <#conditions>`_ for\nmore information on the allowed kinds and how they work.",
                                "key": "kind",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "Required for ``event_match`` conditions. The dot-separated field of the\nevent to match.\n\nRequired for ``sender_notification_permission`` conditions. The field in\nthe power level event the user needs a minimum power level for. Fields\nmust be specified under the ``notifications`` property in the power level\nevent's ``content``.",
                                "key": "key",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "Required for ``event_match`` conditions. The glob-style pattern to\nmatch against. Patterns with no special glob characters should be\ntreated as having asterisks prepended and appended when testing the\ncondition.",
                                "key": "pattern",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "Required for ``room_member_count`` conditions. A decimal integer\noptionally prefixed by one of, ==, <, >, >= or <=. A prefix of < matches\nrooms where the member count is strictly less than the given number and\nso forth. If no prefix is present, this parameter defaults to ==.",
                                "key": "is",
                                "required": false,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "All the push rulesets for this user.",
                        "example": "{\n  \"global\": {\n    \"content\": [\n      {\n        \"actions\": [\n          \"notify\",\n          {\n            \"set_tweak\": \"sound\",\n            \"value\": \"default\"\n          },\n          {\n            \"set_tweak\": \"highlight\"\n          }\n        ],\n        \"default\": true,\n        \"enabled\": true,\n        \"pattern\": \"alice\",\n        \"rule_id\": \".m.rule.contains_user_name\"\n      }\n    ],\n    \"override\": [\n      {\n        \"actions\": [\n          \"dont_notify\"\n        ],\n        \"conditions\": [],\n        \"default\": true,\n        \"enabled\": false,\n        \"rule_id\": \".m.rule.master\"\n      },\n      {\n        \"actions\": [\n          \"dont_notify\"\n        ],\n        \"conditions\": [\n          {\n            \"key\": \"content.msgtype\",\n            \"kind\": \"event_match\",\n            \"pattern\": \"m.notice\"\n          }\n        ],\n        \"default\": true,\n        \"enabled\": true,\n        \"rule_id\": \".m.rule.suppress_notices\"\n      }\n    ],\n    \"room\": [],\n    \"sender\": [],\n    \"underride\": [\n      {\n        \"actions\": [\n          \"notify\",\n          {\n            \"set_tweak\": \"sound\",\n            \"value\": \"ring\"\n          },\n          {\n            \"set_tweak\": \"highlight\",\n            \"value\": false\n          }\n        ],\n        \"conditions\": [\n          {\n            \"key\": \"type\",\n            \"kind\": \"event_match\",\n            \"pattern\": \"m.call.invite\"\n          }\n        ],\n        \"default\": true,\n        \"enabled\": true,\n        \"rule_id\": \".m.rule.call\"\n      },\n      {\n        \"actions\": [\n          \"notify\",\n          {\n            \"set_tweak\": \"sound\",\n            \"value\": \"default\"\n          },\n          {\n            \"set_tweak\": \"highlight\"\n          }\n        ],\n        \"conditions\": [\n          {\n            \"kind\": \"contains_display_name\"\n          }\n        ],\n        \"default\": true,\n        \"enabled\": true,\n        \"rule_id\": \".m.rule.contains_display_name\"\n      },\n      {\n        \"actions\": [\n          \"notify\",\n          {\n            \"set_tweak\": \"sound\",\n            \"value\": \"default\"\n          },\n          {\n            \"set_tweak\": \"highlight\",\n            \"value\": false\n          }\n        ],\n        \"conditions\": [\n          {\n            \"kind\": \"room_member_count\",\n            \"is\": \"2\"\n          },\n          {\n            \"kind\": \"event_match\",\n            \"key\": \"type\",\n            \"pattern\": \"m.room.message\"\n          }\n        ],\n        \"default\": true,\n        \"enabled\": true,\n        \"rule_id\": \".m.rule.room_one_to_one\"\n      },\n      {\n        \"actions\": [\n          \"notify\",\n          {\n            \"set_tweak\": \"sound\",\n            \"value\": \"default\"\n          },\n          {\n            \"set_tweak\": \"highlight\",\n            \"value\": false\n          }\n        ],\n        \"conditions\": [\n          {\n            \"key\": \"type\",\n            \"kind\": \"event_match\",\n            \"pattern\": \"m.room.member\"\n          },\n          {\n            \"key\": \"content.membership\",\n            \"kind\": \"event_match\",\n            \"pattern\": \"invite\"\n          },\n          {\n            \"key\": \"state_key\",\n            \"kind\": \"event_match\",\n            \"pattern\": \"@alice:example.com\"\n          }\n        ],\n        \"default\": true,\n        \"enabled\": true,\n        \"rule_id\": \".m.rule.invite_for_me\"\n      },\n      {\n        \"actions\": [\n          \"notify\",\n          {\n            \"set_tweak\": \"highlight\",\n            \"value\": false\n          }\n        ],\n        \"conditions\": [\n          {\n            \"key\": \"type\",\n            \"kind\": \"event_match\",\n            \"pattern\": \"m.room.member\"\n          }\n        ],\n        \"default\": true,\n        \"enabled\": true,\n        \"rule_id\": \".m.rule.member_event\"\n      },\n      {\n        \"actions\": [\n          \"notify\",\n          {\n            \"set_tweak\": \"highlight\",\n            \"value\": false\n          }\n        ],\n        \"conditions\": [\n          {\n            \"key\": \"type\",\n            \"kind\": \"event_match\",\n            \"pattern\": \"m.room.message\"\n          }\n        ],\n        \"default\": true,\n        \"enabled\": true,\n        \"rule_id\": \".m.rule.message\"\n      }\n    ]\n  }\n}"
                    }
                ],
                "title": "Retrieve all push rulesets."
            },
            {
                "deprecated": false,
                "desc": "Retrieve a single specified push rule.",
                "example": {
                    "req": "GET /_matrix/client/%CLIENT_MAJOR_VERSION%/pushrules/global/content/nocake HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/pushrules/{scope}/{kind}/{ruleId}",
                "rate_limited": false,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** ``global`` to specify global rules.",
                            "key": "scope",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "**Required.** The kind of rule\n One of: [\"override\", \"underride\", \"sender\", \"room\", \"content\"]",
                            "key": "kind",
                            "required": false,
                            "title": "enum"
                        },
                        {
                            "desc": "**Required.** The identifier for the rule.\n",
                            "key": "ruleId",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        "PushRule",
                        null,
                        [
                            {
                                "desc": "**Required.** The actions to perform when this rule is matched.",
                                "key": "actions",
                                "required": true,
                                "title": "[object or string]"
                            },
                            {
                                "desc": "**Required.** Whether this is a default rule, or has been set explicitly.",
                                "key": "default",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "**Required.** Whether the push rule is enabled or not.",
                                "key": "enabled",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "**Required.** The ID of this rule.",
                                "key": "rule_id",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "The conditions that must hold true for an event in order for a rule to be\napplied to an event. A rule with no conditions always matches. Only\napplicable to ``underride`` and ``override`` rules.",
                                "key": "conditions",
                                "required": false,
                                "title": "[PushCondition]"
                            },
                            {
                                "desc": "The glob-style pattern to match against.  Only applicable to ``content``\nrules.",
                                "key": "pattern",
                                "required": false,
                                "title": "string"
                            }
                        ]
                    ],
                    [
                        "PushCondition",
                        null,
                        [
                            {
                                "desc": "**Required.** The kind of condition to apply. See `conditions <#conditions>`_ for\nmore information on the allowed kinds and how they work.",
                                "key": "kind",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "Required for ``event_match`` conditions. The dot-separated field of the\nevent to match.\n\nRequired for ``sender_notification_permission`` conditions. The field in\nthe power level event the user needs a minimum power level for. Fields\nmust be specified under the ``notifications`` property in the power level\nevent's ``content``.",
                                "key": "key",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "Required for ``event_match`` conditions. The glob-style pattern to\nmatch against. Patterns with no special glob characters should be\ntreated as having asterisks prepended and appended when testing the\ncondition.",
                                "key": "pattern",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "Required for ``room_member_count`` conditions. A decimal integer\noptionally prefixed by one of, ==, <, >, >= or <=. A prefix of < matches\nrooms where the member count is strictly less than the given number and\nso forth. If no prefix is present, this parameter defaults to ==.",
                                "key": "is",
                                "required": false,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The specific push rule. This will also include keys specific to the\nrule itself such as the rule's ``actions`` and ``conditions`` if set.",
                        "example": "{\n  \"actions\": [\n    \"dont_notify\"\n  ],\n  \"pattern\": \"cake*lie\",\n  \"rule_id\": \"nocake\",\n  \"enabled\": true,\n  \"default\": false\n}"
                    }
                ],
                "title": "Retrieve a push rule."
            },
            {
                "deprecated": false,
                "desc": "This endpoint removes the push rule defined in the path.",
                "example": {
                    "req": "DELETE /_matrix/client/%CLIENT_MAJOR_VERSION%/pushrules/global/content/nocake HTTP/1.1\n\n"
                },
                "method": "DELETE",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/pushrules/{scope}/{kind}/{ruleId}",
                "rate_limited": false,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** ``global`` to specify global rules.",
                            "key": "scope",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "**Required.** The kind of rule\n One of: [\"override\", \"underride\", \"sender\", \"room\", \"content\"]",
                            "key": "kind",
                            "required": false,
                            "title": "enum"
                        },
                        {
                            "desc": "**Required.** The identifier for the rule.\n",
                            "key": "ruleId",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [],
                "responses": [
                    {
                        "code": 200,
                        "description": "The push rule was deleted.",
                        "example": "{}"
                    }
                ],
                "title": "Delete a push rule."
            },
            {
                "deprecated": false,
                "desc": "This endpoint allows the creation, modification and deletion of pushers\nfor this user ID. The behaviour of this endpoint varies depending on the\nvalues in the JSON body.\n\nWhen creating push rules, they MUST be enabled by default.",
                "example": {
                    "req": "PUT /_matrix/client/%CLIENT_MAJOR_VERSION%/pushrules/global/content/nocake?before=someRuleId&after=anotherRuleId HTTP/1.1\nContent-Type: application/json\n\n{\n  \"pattern\": \"cake*lie\",\n  \"actions\": [\n    \"notify\"\n  ]\n}"
                },
                "method": "PUT",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/pushrules/{scope}/{kind}/{ruleId}",
                "rate_limited": true,
                "req_body_tables": [
                    [
                        "PushCondition",
                        null,
                        [
                            {
                                "desc": "**Required.** The kind of condition to apply. See `conditions <#conditions>`_ for\nmore information on the allowed kinds and how they work.",
                                "key": "kind",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "Required for ``event_match`` conditions. The dot-separated field of the\nevent to match.\n\nRequired for ``sender_notification_permission`` conditions. The field in\nthe power level event the user needs a minimum power level for. Fields\nmust be specified under the ``notifications`` property in the power level\nevent's ``content``.",
                                "key": "key",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "Required for ``event_match`` conditions. The glob-style pattern to\nmatch against. Patterns with no special glob characters should be\ntreated as having asterisks prepended and appended when testing the\ncondition.",
                                "key": "pattern",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "Required for ``room_member_count`` conditions. A decimal integer\noptionally prefixed by one of, ==, <, >, >= or <=. A prefix of < matches\nrooms where the member count is strictly less than the given number and\nso forth. If no prefix is present, this parameter defaults to ==.",
                                "key": "is",
                                "required": false,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "**Required.** The action(s) to perform when the conditions for this rule are met.",
                            "key": "actions",
                            "required": true,
                            "title": "[string or object]"
                        },
                        {
                            "desc": "The conditions that must hold true for an event in order for a\nrule to be applied to an event. A rule with no conditions\nalways matches. Only applicable to ``underride`` and ``override`` rules.",
                            "key": "conditions",
                            "required": false,
                            "title": "[PushCondition]"
                        },
                        {
                            "desc": "Only applicable to ``content`` rules. The glob-style pattern to match against.",
                            "key": "pattern",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "path": [
                        {
                            "desc": "**Required.** ``global`` to specify global rules.",
                            "key": "scope",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "**Required.** The kind of rule\n One of: [\"override\", \"underride\", \"sender\", \"room\", \"content\"]",
                            "key": "kind",
                            "required": false,
                            "title": "enum"
                        },
                        {
                            "desc": "**Required.** The identifier for the rule.\n",
                            "key": "ruleId",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "query": [
                        {
                            "desc": "Use 'before' with a ``rule_id`` as its value to make the new rule the\nnext-most important rule with respect to the given user defined rule.\nIt is not possible to add a rule relative to a predefined server rule.",
                            "key": "before",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "This makes the new rule the next-less important rule relative to the\ngiven user defined rule. It is not possible to add a rule relative\nto a predefined server rule.",
                            "key": "after",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [],
                "responses": [
                    {
                        "code": 200,
                        "description": "The push rule was created/updated.",
                        "example": "{}"
                    },
                    {
                        "code": 400,
                        "description": "There was a problem configuring this push rule.",
                        "example": "{\n  \"error\": \"before/after rule not found: someRuleId\",\n  \"errcode\": \"M_UNKNOWN\"\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Add or change a push rule."
            },
            {
                "deprecated": false,
                "desc": "This endpoint gets whether the specified push rule is enabled.",
                "example": {
                    "req": "GET /_matrix/client/%CLIENT_MAJOR_VERSION%/pushrules/global/cake/nocake/enabled HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/pushrules/{scope}/{kind}/{ruleId}/enabled",
                "rate_limited": false,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** Either ``global`` or ``device/<profile_tag>`` to specify global\nrules or device rules for the given ``profile_tag``.",
                            "key": "scope",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "**Required.** The kind of rule\n One of: [\"override\", \"underride\", \"sender\", \"room\", \"content\"]",
                            "key": "kind",
                            "required": false,
                            "title": "enum"
                        },
                        {
                            "desc": "**Required.** The identifier for the rule.\n",
                            "key": "ruleId",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** Whether the push rule is enabled or not.",
                                "key": "enabled",
                                "required": true,
                                "title": "boolean"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "Whether the push rule is enabled.",
                        "example": "{\n  \"enabled\": true\n}"
                    }
                ],
                "title": "Get whether a push rule is enabled"
            },
            {
                "deprecated": false,
                "desc": "This endpoint allows clients to enable or disable the specified push rule.",
                "example": {
                    "req": "PUT /_matrix/client/%CLIENT_MAJOR_VERSION%/pushrules/global/content/nocake/enabled HTTP/1.1\nContent-Type: application/json\n\n{\n  \"enabled\": true\n}"
                },
                "method": "PUT",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/pushrules/{scope}/{kind}/{ruleId}/enabled",
                "rate_limited": false,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "**Required.** Whether the push rule is enabled or not.",
                            "key": "enabled",
                            "required": true,
                            "title": "boolean"
                        }
                    ],
                    "path": [
                        {
                            "desc": "**Required.** ``global`` to specify global rules.",
                            "key": "scope",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "**Required.** The kind of rule\n One of: [\"override\", \"underride\", \"sender\", \"room\", \"content\"]",
                            "key": "kind",
                            "required": false,
                            "title": "enum"
                        },
                        {
                            "desc": "**Required.** The identifier for the rule.\n",
                            "key": "ruleId",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [],
                "responses": [
                    {
                        "code": 200,
                        "description": "The push rule was enabled or disabled.",
                        "example": "{}"
                    }
                ],
                "title": "Enable or disable a push rule."
            },
            {
                "deprecated": false,
                "desc": "This endpoint get the actions for the specified push rule.",
                "example": {
                    "req": "GET /_matrix/client/%CLIENT_MAJOR_VERSION%/pushrules/global/content/nocake/actions HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/pushrules/{scope}/{kind}/{ruleId}/actions",
                "rate_limited": false,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** Either ``global`` or ``device/<profile_tag>`` to specify global\nrules or device rules for the given ``profile_tag``.",
                            "key": "scope",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "**Required.** The kind of rule\n One of: [\"override\", \"underride\", \"sender\", \"room\", \"content\"]",
                            "key": "kind",
                            "required": false,
                            "title": "enum"
                        },
                        {
                            "desc": "**Required.** The identifier for the rule.\n",
                            "key": "ruleId",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The action(s) to perform for this rule.",
                                "key": "actions",
                                "required": true,
                                "title": "[string or object]"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The actions for this push rule.",
                        "example": "{\n  \"actions\": [\n    \"notify\",\n    {\n      \"set_tweak\": \"sound\",\n      \"value\": \"bing\"\n    }\n  ]\n}"
                    }
                ],
                "title": "The actions for a push rule"
            },
            {
                "deprecated": false,
                "desc": "This endpoint allows clients to change the actions of a push rule.\nThis can be used to change the actions of builtin rules.",
                "example": {
                    "req": "PUT /_matrix/client/%CLIENT_MAJOR_VERSION%/pushrules/global/room/%23spam%3Aexample.com/actions HTTP/1.1\nContent-Type: application/json\n\n{\n  \"actions\": [\n    \"notify\",\n    {\n      \"set_tweak\": \"highlight\"\n    }\n  ]\n}"
                },
                "method": "PUT",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/pushrules/{scope}/{kind}/{ruleId}/actions",
                "rate_limited": false,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "**Required.** The action(s) to perform for this rule.",
                            "key": "actions",
                            "required": true,
                            "title": "[string or object]"
                        }
                    ],
                    "path": [
                        {
                            "desc": "**Required.** ``global`` to specify global rules.",
                            "key": "scope",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "**Required.** The kind of rule\n One of: [\"override\", \"underride\", \"sender\", \"room\", \"content\"]",
                            "key": "kind",
                            "required": false,
                            "title": "enum"
                        },
                        {
                            "desc": "**Required.** The identifier for the rule.\n",
                            "key": "ruleId",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [],
                "responses": [
                    {
                        "code": 200,
                        "description": "The actions for the push rule were set.",
                        "example": "{}"
                    }
                ],
                "title": "Set the actions for a push rule."
            }
        ],
        "group": "pushrules_cs"
    },
    "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
    "consumes": [
        "application/json"
    ],
    "host": "localhost:8008",
    "info": {
        "title": "Matrix Client-Server Push Rules API",
        "version": "1.0.0"
    },
    "paths": {
        "/pushrules/": {
            "get": {
                "description": "Retrieve all push rulesets for this user. Clients can \"drill-down\" on\nthe rulesets by suffixing a ``scope`` to this path e.g.\n``/pushrules/global/``. This will return a subset of this data under the\nspecified key e.g. the ``global`` key.",
                "operationId": "getPushRules",
                "responses": {
                    "200": {
                        "description": "All the push rulesets for this user.",
                        "examples": {
                            "application/json": {
                                "global": {
                                    "content": [
                                        {
                                            "actions": [
                                                "notify",
                                                {
                                                    "set_tweak": "sound",
                                                    "value": "default"
                                                },
                                                {
                                                    "set_tweak": "highlight"
                                                }
                                            ],
                                            "default": true,
                                            "enabled": true,
                                            "pattern": "alice",
                                            "rule_id": ".m.rule.contains_user_name"
                                        }
                                    ],
                                    "override": [
                                        {
                                            "actions": [
                                                "dont_notify"
                                            ],
                                            "conditions": [],
                                            "default": true,
                                            "enabled": false,
                                            "rule_id": ".m.rule.master"
                                        },
                                        {
                                            "actions": [
                                                "dont_notify"
                                            ],
                                            "conditions": [
                                                {
                                                    "key": "content.msgtype",
                                                    "kind": "event_match",
                                                    "pattern": "m.notice"
                                                }
                                            ],
                                            "default": true,
                                            "enabled": true,
                                            "rule_id": ".m.rule.suppress_notices"
                                        }
                                    ],
                                    "room": [],
                                    "sender": [],
                                    "underride": [
                                        {
                                            "actions": [
                                                "notify",
                                                {
                                                    "set_tweak": "sound",
                                                    "value": "ring"
                                                },
                                                {
                                                    "set_tweak": "highlight",
                                                    "value": false
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "key": "type",
                                                    "kind": "event_match",
                                                    "pattern": "m.call.invite"
                                                }
                                            ],
                                            "default": true,
                                            "enabled": true,
                                            "rule_id": ".m.rule.call"
                                        },
                                        {
                                            "actions": [
                                                "notify",
                                                {
                                                    "set_tweak": "sound",
                                                    "value": "default"
                                                },
                                                {
                                                    "set_tweak": "highlight"
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "kind": "contains_display_name"
                                                }
                                            ],
                                            "default": true,
                                            "enabled": true,
                                            "rule_id": ".m.rule.contains_display_name"
                                        },
                                        {
                                            "actions": [
                                                "notify",
                                                {
                                                    "set_tweak": "sound",
                                                    "value": "default"
                                                },
                                                {
                                                    "set_tweak": "highlight",
                                                    "value": false
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "is": "2",
                                                    "kind": "room_member_count"
                                                },
                                                {
                                                    "key": "type",
                                                    "kind": "event_match",
                                                    "pattern": "m.room.message"
                                                }
                                            ],
                                            "default": true,
                                            "enabled": true,
                                            "rule_id": ".m.rule.room_one_to_one"
                                        },
                                        {
                                            "actions": [
                                                "notify",
                                                {
                                                    "set_tweak": "sound",
                                                    "value": "default"
                                                },
                                                {
                                                    "set_tweak": "highlight",
                                                    "value": false
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "key": "type",
                                                    "kind": "event_match",
                                                    "pattern": "m.room.member"
                                                },
                                                {
                                                    "key": "content.membership",
                                                    "kind": "event_match",
                                                    "pattern": "invite"
                                                },
                                                {
                                                    "key": "state_key",
                                                    "kind": "event_match",
                                                    "pattern": "@alice:example.com"
                                                }
                                            ],
                                            "default": true,
                                            "enabled": true,
                                            "rule_id": ".m.rule.invite_for_me"
                                        },
                                        {
                                            "actions": [
                                                "notify",
                                                {
                                                    "set_tweak": "highlight",
                                                    "value": false
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "key": "type",
                                                    "kind": "event_match",
                                                    "pattern": "m.room.member"
                                                }
                                            ],
                                            "default": true,
                                            "enabled": true,
                                            "rule_id": ".m.rule.member_event"
                                        },
                                        {
                                            "actions": [
                                                "notify",
                                                {
                                                    "set_tweak": "highlight",
                                                    "value": false
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "key": "type",
                                                    "kind": "event_match",
                                                    "pattern": "m.room.message"
                                                }
                                            ],
                                            "default": true,
                                            "enabled": true,
                                            "rule_id": ".m.rule.message"
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "properties": {
                                "global": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "content": {
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "properties": {
                                                                    "actions": {
                                                                        "description": "The actions to perform when this rule is matched.",
                                                                        "items": {
                                                                            "type": [
                                                                                "object",
                                                                                "string"
                                                                            ]
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "conditions": {
                                                                        "description": "The conditions that must hold true for an event in order for a rule to be\napplied to an event. A rule with no conditions always matches. Only\napplicable to ``underride`` and ``override`` rules.",
                                                                        "items": {
                                                                            "allOf": [
                                                                                {
                                                                                    "properties": {
                                                                                        "is": {
                                                                                            "description": "Required for ``room_member_count`` conditions. A decimal integer\noptionally prefixed by one of, ==, <, >, >= or <=. A prefix of < matches\nrooms where the member count is strictly less than the given number and\nso forth. If no prefix is present, this parameter defaults to ==.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "Required for ``event_match`` conditions. The dot-separated field of the\nevent to match.\n\nRequired for ``sender_notification_permission`` conditions. The field in\nthe power level event the user needs a minimum power level for. Fields\nmust be specified under the ``notifications`` property in the power level\nevent's ``content``.",
                                                                                            "type": "string",
                                                                                            "x-example": "content.body"
                                                                                        },
                                                                                        "kind": {
                                                                                            "description": "The kind of condition to apply. See `conditions <#conditions>`_ for\nmore information on the allowed kinds and how they work.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "pattern": {
                                                                                            "description": "Required for ``event_match`` conditions. The glob-style pattern to\nmatch against. Patterns with no special glob characters should be\ntreated as having asterisks prepended and appended when testing the\ncondition.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "kind"
                                                                                    ],
                                                                                    "title": "PushCondition",
                                                                                    "type": "object"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "default": {
                                                                        "description": "Whether this is a default rule, or has been set explicitly.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "enabled": {
                                                                        "description": "Whether the push rule is enabled or not.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "pattern": {
                                                                        "description": "The glob-style pattern to match against.  Only applicable to ``content``\nrules.",
                                                                        "type": "string"
                                                                    },
                                                                    "rule_id": {
                                                                        "description": "The ID of this rule.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "actions",
                                                                    "default",
                                                                    "enabled",
                                                                    "rule_id"
                                                                ],
                                                                "title": "PushRule",
                                                                "type": "object"
                                                            }
                                                        ],
                                                        "title": "PushRule",
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "override": {
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "properties": {
                                                                    "actions": {
                                                                        "description": "The actions to perform when this rule is matched.",
                                                                        "items": {
                                                                            "type": [
                                                                                "object",
                                                                                "string"
                                                                            ]
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "conditions": {
                                                                        "description": "The conditions that must hold true for an event in order for a rule to be\napplied to an event. A rule with no conditions always matches. Only\napplicable to ``underride`` and ``override`` rules.",
                                                                        "items": {
                                                                            "allOf": [
                                                                                {
                                                                                    "properties": {
                                                                                        "is": {
                                                                                            "description": "Required for ``room_member_count`` conditions. A decimal integer\noptionally prefixed by one of, ==, <, >, >= or <=. A prefix of < matches\nrooms where the member count is strictly less than the given number and\nso forth. If no prefix is present, this parameter defaults to ==.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "Required for ``event_match`` conditions. The dot-separated field of the\nevent to match.\n\nRequired for ``sender_notification_permission`` conditions. The field in\nthe power level event the user needs a minimum power level for. Fields\nmust be specified under the ``notifications`` property in the power level\nevent's ``content``.",
                                                                                            "type": "string",
                                                                                            "x-example": "content.body"
                                                                                        },
                                                                                        "kind": {
                                                                                            "description": "The kind of condition to apply. See `conditions <#conditions>`_ for\nmore information on the allowed kinds and how they work.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "pattern": {
                                                                                            "description": "Required for ``event_match`` conditions. The glob-style pattern to\nmatch against. Patterns with no special glob characters should be\ntreated as having asterisks prepended and appended when testing the\ncondition.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "kind"
                                                                                    ],
                                                                                    "title": "PushCondition",
                                                                                    "type": "object"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "default": {
                                                                        "description": "Whether this is a default rule, or has been set explicitly.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "enabled": {
                                                                        "description": "Whether the push rule is enabled or not.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "pattern": {
                                                                        "description": "The glob-style pattern to match against.  Only applicable to ``content``\nrules.",
                                                                        "type": "string"
                                                                    },
                                                                    "rule_id": {
                                                                        "description": "The ID of this rule.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "actions",
                                                                    "default",
                                                                    "enabled",
                                                                    "rule_id"
                                                                ],
                                                                "title": "PushRule",
                                                                "type": "object"
                                                            }
                                                        ],
                                                        "title": "PushRule",
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "room": {
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "properties": {
                                                                    "actions": {
                                                                        "description": "The actions to perform when this rule is matched.",
                                                                        "items": {
                                                                            "type": [
                                                                                "object",
                                                                                "string"
                                                                            ]
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "conditions": {
                                                                        "description": "The conditions that must hold true for an event in order for a rule to be\napplied to an event. A rule with no conditions always matches. Only\napplicable to ``underride`` and ``override`` rules.",
                                                                        "items": {
                                                                            "allOf": [
                                                                                {
                                                                                    "properties": {
                                                                                        "is": {
                                                                                            "description": "Required for ``room_member_count`` conditions. A decimal integer\noptionally prefixed by one of, ==, <, >, >= or <=. A prefix of < matches\nrooms where the member count is strictly less than the given number and\nso forth. If no prefix is present, this parameter defaults to ==.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "Required for ``event_match`` conditions. The dot-separated field of the\nevent to match.\n\nRequired for ``sender_notification_permission`` conditions. The field in\nthe power level event the user needs a minimum power level for. Fields\nmust be specified under the ``notifications`` property in the power level\nevent's ``content``.",
                                                                                            "type": "string",
                                                                                            "x-example": "content.body"
                                                                                        },
                                                                                        "kind": {
                                                                                            "description": "The kind of condition to apply. See `conditions <#conditions>`_ for\nmore information on the allowed kinds and how they work.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "pattern": {
                                                                                            "description": "Required for ``event_match`` conditions. The glob-style pattern to\nmatch against. Patterns with no special glob characters should be\ntreated as having asterisks prepended and appended when testing the\ncondition.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "kind"
                                                                                    ],
                                                                                    "title": "PushCondition",
                                                                                    "type": "object"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "default": {
                                                                        "description": "Whether this is a default rule, or has been set explicitly.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "enabled": {
                                                                        "description": "Whether the push rule is enabled or not.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "pattern": {
                                                                        "description": "The glob-style pattern to match against.  Only applicable to ``content``\nrules.",
                                                                        "type": "string"
                                                                    },
                                                                    "rule_id": {
                                                                        "description": "The ID of this rule.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "actions",
                                                                    "default",
                                                                    "enabled",
                                                                    "rule_id"
                                                                ],
                                                                "title": "PushRule",
                                                                "type": "object"
                                                            }
                                                        ],
                                                        "title": "PushRule",
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "sender": {
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "properties": {
                                                                    "actions": {
                                                                        "description": "The actions to perform when this rule is matched.",
                                                                        "items": {
                                                                            "type": [
                                                                                "object",
                                                                                "string"
                                                                            ]
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "conditions": {
                                                                        "description": "The conditions that must hold true for an event in order for a rule to be\napplied to an event. A rule with no conditions always matches. Only\napplicable to ``underride`` and ``override`` rules.",
                                                                        "items": {
                                                                            "allOf": [
                                                                                {
                                                                                    "properties": {
                                                                                        "is": {
                                                                                            "description": "Required for ``room_member_count`` conditions. A decimal integer\noptionally prefixed by one of, ==, <, >, >= or <=. A prefix of < matches\nrooms where the member count is strictly less than the given number and\nso forth. If no prefix is present, this parameter defaults to ==.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "Required for ``event_match`` conditions. The dot-separated field of the\nevent to match.\n\nRequired for ``sender_notification_permission`` conditions. The field in\nthe power level event the user needs a minimum power level for. Fields\nmust be specified under the ``notifications`` property in the power level\nevent's ``content``.",
                                                                                            "type": "string",
                                                                                            "x-example": "content.body"
                                                                                        },
                                                                                        "kind": {
                                                                                            "description": "The kind of condition to apply. See `conditions <#conditions>`_ for\nmore information on the allowed kinds and how they work.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "pattern": {
                                                                                            "description": "Required for ``event_match`` conditions. The glob-style pattern to\nmatch against. Patterns with no special glob characters should be\ntreated as having asterisks prepended and appended when testing the\ncondition.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "kind"
                                                                                    ],
                                                                                    "title": "PushCondition",
                                                                                    "type": "object"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "default": {
                                                                        "description": "Whether this is a default rule, or has been set explicitly.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "enabled": {
                                                                        "description": "Whether the push rule is enabled or not.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "pattern": {
                                                                        "description": "The glob-style pattern to match against.  Only applicable to ``content``\nrules.",
                                                                        "type": "string"
                                                                    },
                                                                    "rule_id": {
                                                                        "description": "The ID of this rule.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "actions",
                                                                    "default",
                                                                    "enabled",
                                                                    "rule_id"
                                                                ],
                                                                "title": "PushRule",
                                                                "type": "object"
                                                            }
                                                        ],
                                                        "title": "PushRule",
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "underride": {
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "properties": {
                                                                    "actions": {
                                                                        "description": "The actions to perform when this rule is matched.",
                                                                        "items": {
                                                                            "type": [
                                                                                "object",
                                                                                "string"
                                                                            ]
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "conditions": {
                                                                        "description": "The conditions that must hold true for an event in order for a rule to be\napplied to an event. A rule with no conditions always matches. Only\napplicable to ``underride`` and ``override`` rules.",
                                                                        "items": {
                                                                            "allOf": [
                                                                                {
                                                                                    "properties": {
                                                                                        "is": {
                                                                                            "description": "Required for ``room_member_count`` conditions. A decimal integer\noptionally prefixed by one of, ==, <, >, >= or <=. A prefix of < matches\nrooms where the member count is strictly less than the given number and\nso forth. If no prefix is present, this parameter defaults to ==.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "Required for ``event_match`` conditions. The dot-separated field of the\nevent to match.\n\nRequired for ``sender_notification_permission`` conditions. The field in\nthe power level event the user needs a minimum power level for. Fields\nmust be specified under the ``notifications`` property in the power level\nevent's ``content``.",
                                                                                            "type": "string",
                                                                                            "x-example": "content.body"
                                                                                        },
                                                                                        "kind": {
                                                                                            "description": "The kind of condition to apply. See `conditions <#conditions>`_ for\nmore information on the allowed kinds and how they work.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "pattern": {
                                                                                            "description": "Required for ``event_match`` conditions. The glob-style pattern to\nmatch against. Patterns with no special glob characters should be\ntreated as having asterisks prepended and appended when testing the\ncondition.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "kind"
                                                                                    ],
                                                                                    "title": "PushCondition",
                                                                                    "type": "object"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "default": {
                                                                        "description": "Whether this is a default rule, or has been set explicitly.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "enabled": {
                                                                        "description": "Whether the push rule is enabled or not.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "pattern": {
                                                                        "description": "The glob-style pattern to match against.  Only applicable to ``content``\nrules.",
                                                                        "type": "string"
                                                                    },
                                                                    "rule_id": {
                                                                        "description": "The ID of this rule.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "actions",
                                                                    "default",
                                                                    "enabled",
                                                                    "rule_id"
                                                                ],
                                                                "title": "PushRule",
                                                                "type": "object"
                                                            }
                                                        ],
                                                        "title": "PushRule",
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ],
                                    "description": "The global ruleset.",
                                    "title": "Ruleset",
                                    "type": "object"
                                }
                            },
                            "required": [
                                "global"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Retrieve all push rulesets.",
                "tags": [
                    "Push notifications"
                ]
            }
        },
        "/pushrules/{scope}/{kind}/{ruleId}": {
            "delete": {
                "description": "This endpoint removes the push rule defined in the path.",
                "operationId": "deletePushRule",
                "parameters": [
                    {
                        "description": "``global`` to specify global rules.",
                        "in": "path",
                        "name": "scope",
                        "required": true,
                        "type": "string",
                        "x-example": "global"
                    },
                    {
                        "description": "The kind of rule\n",
                        "enum": [
                            "override",
                            "underride",
                            "sender",
                            "room",
                            "content"
                        ],
                        "in": "path",
                        "name": "kind",
                        "required": true,
                        "type": "string",
                        "x-example": "content"
                    },
                    {
                        "description": "The identifier for the rule.\n",
                        "in": "path",
                        "name": "ruleId",
                        "required": true,
                        "type": "string",
                        "x-example": "nocake"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The push rule was deleted.",
                        "examples": {
                            "application/json": {}
                        },
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Delete a push rule.",
                "tags": [
                    "Push notifications"
                ]
            },
            "get": {
                "description": "Retrieve a single specified push rule.",
                "operationId": "getPushRule",
                "parameters": [
                    {
                        "description": "``global`` to specify global rules.",
                        "in": "path",
                        "name": "scope",
                        "required": true,
                        "type": "string",
                        "x-example": "global"
                    },
                    {
                        "description": "The kind of rule\n",
                        "enum": [
                            "override",
                            "underride",
                            "sender",
                            "room",
                            "content"
                        ],
                        "in": "path",
                        "name": "kind",
                        "required": true,
                        "type": "string",
                        "x-example": "content"
                    },
                    {
                        "description": "The identifier for the rule.\n",
                        "in": "path",
                        "name": "ruleId",
                        "required": true,
                        "type": "string",
                        "x-example": "nocake"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The specific push rule. This will also include keys specific to the\nrule itself such as the rule's ``actions`` and ``conditions`` if set.",
                        "examples": {
                            "application/json": {
                                "actions": [
                                    "dont_notify"
                                ],
                                "default": false,
                                "enabled": true,
                                "pattern": "cake*lie",
                                "rule_id": "nocake"
                            }
                        },
                        "schema": {
                            "allOf": [
                                {
                                    "properties": {
                                        "actions": {
                                            "description": "The actions to perform when this rule is matched.",
                                            "items": {
                                                "type": [
                                                    "object",
                                                    "string"
                                                ]
                                            },
                                            "type": "array"
                                        },
                                        "conditions": {
                                            "description": "The conditions that must hold true for an event in order for a rule to be\napplied to an event. A rule with no conditions always matches. Only\napplicable to ``underride`` and ``override`` rules.",
                                            "items": {
                                                "allOf": [
                                                    {
                                                        "properties": {
                                                            "is": {
                                                                "description": "Required for ``room_member_count`` conditions. A decimal integer\noptionally prefixed by one of, ==, <, >, >= or <=. A prefix of < matches\nrooms where the member count is strictly less than the given number and\nso forth. If no prefix is present, this parameter defaults to ==.",
                                                                "type": "string"
                                                            },
                                                            "key": {
                                                                "description": "Required for ``event_match`` conditions. The dot-separated field of the\nevent to match.\n\nRequired for ``sender_notification_permission`` conditions. The field in\nthe power level event the user needs a minimum power level for. Fields\nmust be specified under the ``notifications`` property in the power level\nevent's ``content``.",
                                                                "type": "string",
                                                                "x-example": "content.body"
                                                            },
                                                            "kind": {
                                                                "description": "The kind of condition to apply. See `conditions <#conditions>`_ for\nmore information on the allowed kinds and how they work.",
                                                                "type": "string"
                                                            },
                                                            "pattern": {
                                                                "description": "Required for ``event_match`` conditions. The glob-style pattern to\nmatch against. Patterns with no special glob characters should be\ntreated as having asterisks prepended and appended when testing the\ncondition.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "kind"
                                                        ],
                                                        "title": "PushCondition",
                                                        "type": "object"
                                                    }
                                                ]
                                            },
                                            "type": "array"
                                        },
                                        "default": {
                                            "description": "Whether this is a default rule, or has been set explicitly.",
                                            "type": "boolean"
                                        },
                                        "enabled": {
                                            "description": "Whether the push rule is enabled or not.",
                                            "type": "boolean"
                                        },
                                        "pattern": {
                                            "description": "The glob-style pattern to match against.  Only applicable to ``content``\nrules.",
                                            "type": "string"
                                        },
                                        "rule_id": {
                                            "description": "The ID of this rule.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "actions",
                                        "default",
                                        "enabled",
                                        "rule_id"
                                    ],
                                    "title": "PushRule",
                                    "type": "object"
                                }
                            ],
                            "description": "The push rule.",
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Retrieve a push rule.",
                "tags": [
                    "Push notifications"
                ]
            },
            "put": {
                "description": "This endpoint allows the creation, modification and deletion of pushers\nfor this user ID. The behaviour of this endpoint varies depending on the\nvalues in the JSON body.\n\nWhen creating push rules, they MUST be enabled by default.",
                "operationId": "setPushRule",
                "parameters": [
                    {
                        "description": "``global`` to specify global rules.",
                        "in": "path",
                        "name": "scope",
                        "required": true,
                        "type": "string",
                        "x-example": "global"
                    },
                    {
                        "description": "The kind of rule\n",
                        "enum": [
                            "override",
                            "underride",
                            "sender",
                            "room",
                            "content"
                        ],
                        "in": "path",
                        "name": "kind",
                        "required": true,
                        "type": "string",
                        "x-example": "content"
                    },
                    {
                        "description": "The identifier for the rule.\n",
                        "in": "path",
                        "name": "ruleId",
                        "required": true,
                        "type": "string",
                        "x-example": "nocake"
                    },
                    {
                        "description": "Use 'before' with a ``rule_id`` as its value to make the new rule the\nnext-most important rule with respect to the given user defined rule.\nIt is not possible to add a rule relative to a predefined server rule.",
                        "in": "query",
                        "name": "before",
                        "required": false,
                        "type": "string",
                        "x-example": "someRuleId"
                    },
                    {
                        "description": "This makes the new rule the next-less important rule relative to the\ngiven user defined rule. It is not possible to add a rule relative\nto a predefined server rule.",
                        "in": "query",
                        "name": "after",
                        "required": false,
                        "type": "string",
                        "x-example": "anotherRuleId"
                    },
                    {
                        "description": "The push rule data. Additional top-level keys may be present depending\non the parameters for the rule ``kind``.",
                        "in": "body",
                        "name": "pushrule",
                        "required": true,
                        "schema": {
                            "example": {
                                "actions": [
                                    "notify"
                                ],
                                "pattern": "cake*lie"
                            },
                            "properties": {
                                "actions": {
                                    "description": "The action(s) to perform when the conditions for this rule are met.",
                                    "items": {
                                        "type": [
                                            "string",
                                            "object"
                                        ]
                                    },
                                    "type": "array"
                                },
                                "conditions": {
                                    "description": "The conditions that must hold true for an event in order for a\nrule to be applied to an event. A rule with no conditions\nalways matches. Only applicable to ``underride`` and ``override`` rules.",
                                    "items": {
                                        "allOf": [
                                            {
                                                "properties": {
                                                    "is": {
                                                        "description": "Required for ``room_member_count`` conditions. A decimal integer\noptionally prefixed by one of, ==, <, >, >= or <=. A prefix of < matches\nrooms where the member count is strictly less than the given number and\nso forth. If no prefix is present, this parameter defaults to ==.",
                                                        "type": "string"
                                                    },
                                                    "key": {
                                                        "description": "Required for ``event_match`` conditions. The dot-separated field of the\nevent to match.\n\nRequired for ``sender_notification_permission`` conditions. The field in\nthe power level event the user needs a minimum power level for. Fields\nmust be specified under the ``notifications`` property in the power level\nevent's ``content``.",
                                                        "type": "string",
                                                        "x-example": "content.body"
                                                    },
                                                    "kind": {
                                                        "description": "The kind of condition to apply. See `conditions <#conditions>`_ for\nmore information on the allowed kinds and how they work.",
                                                        "type": "string"
                                                    },
                                                    "pattern": {
                                                        "description": "Required for ``event_match`` conditions. The glob-style pattern to\nmatch against. Patterns with no special glob characters should be\ntreated as having asterisks prepended and appended when testing the\ncondition.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "kind"
                                                ],
                                                "title": "PushCondition",
                                                "type": "object"
                                            }
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "pattern": {
                                    "description": "Only applicable to ``content`` rules. The glob-style pattern to match against.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "actions"
                            ],
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The push rule was created/updated.",
                        "examples": {
                            "application/json": {}
                        },
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "There was a problem configuring this push rule.",
                        "examples": {
                            "application/json": {
                                "errcode": "M_UNKNOWN",
                                "error": "before/after rule not found: someRuleId"
                            }
                        },
                        "schema": {
                            "description": "A Matrix-level Error",
                            "properties": {
                                "errcode": {
                                    "description": "An error code.",
                                    "example": "M_UNKNOWN",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "An unknown error occurred",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Add or change a push rule.",
                "tags": [
                    "Push notifications"
                ]
            }
        },
        "/pushrules/{scope}/{kind}/{ruleId}/actions": {
            "get": {
                "description": "This endpoint get the actions for the specified push rule.",
                "operationId": "getPushRuleActions",
                "parameters": [
                    {
                        "description": "Either ``global`` or ``device/<profile_tag>`` to specify global\nrules or device rules for the given ``profile_tag``.",
                        "in": "path",
                        "name": "scope",
                        "required": true,
                        "type": "string",
                        "x-example": "global"
                    },
                    {
                        "description": "The kind of rule\n",
                        "enum": [
                            "override",
                            "underride",
                            "sender",
                            "room",
                            "content"
                        ],
                        "in": "path",
                        "name": "kind",
                        "required": true,
                        "type": "string",
                        "x-example": "content"
                    },
                    {
                        "description": "The identifier for the rule.\n",
                        "in": "path",
                        "name": "ruleId",
                        "required": true,
                        "type": "string",
                        "x-example": "nocake"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The actions for this push rule.",
                        "examples": {
                            "application/json": {
                                "actions": [
                                    "notify",
                                    {
                                        "set_tweak": "sound",
                                        "value": "bing"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "properties": {
                                "actions": {
                                    "description": "The action(s) to perform for this rule.",
                                    "items": {
                                        "type": [
                                            "string",
                                            "object"
                                        ]
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "actions"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "The actions for a push rule",
                "tags": [
                    "Push notifications"
                ]
            },
            "put": {
                "description": "This endpoint allows clients to change the actions of a push rule.\nThis can be used to change the actions of builtin rules.",
                "operationId": "setPushRuleActions",
                "parameters": [
                    {
                        "description": "``global`` to specify global rules.",
                        "in": "path",
                        "name": "scope",
                        "required": true,
                        "type": "string",
                        "x-example": "global"
                    },
                    {
                        "description": "The kind of rule\n",
                        "enum": [
                            "override",
                            "underride",
                            "sender",
                            "room",
                            "content"
                        ],
                        "in": "path",
                        "name": "kind",
                        "required": true,
                        "type": "string",
                        "x-example": "room"
                    },
                    {
                        "description": "The identifier for the rule.\n",
                        "in": "path",
                        "name": "ruleId",
                        "required": true,
                        "type": "string",
                        "x-example": "#spam:example.com"
                    },
                    {
                        "description": "The action(s) to perform when the conditions for this rule are met.\n",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "example": {
                                "actions": [
                                    "notify",
                                    {
                                        "set_tweak": "highlight"
                                    }
                                ]
                            },
                            "properties": {
                                "actions": {
                                    "description": "The action(s) to perform for this rule.",
                                    "items": {
                                        "type": [
                                            "string",
                                            "object"
                                        ]
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "actions"
                            ],
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The actions for the push rule were set.",
                        "examples": {
                            "application/json": {}
                        },
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Set the actions for a push rule.",
                "tags": [
                    "Push notifications"
                ]
            }
        },
        "/pushrules/{scope}/{kind}/{ruleId}/enabled": {
            "get": {
                "description": "This endpoint gets whether the specified push rule is enabled.",
                "operationId": "isPushRuleEnabled",
                "parameters": [
                    {
                        "description": "Either ``global`` or ``device/<profile_tag>`` to specify global\nrules or device rules for the given ``profile_tag``.",
                        "in": "path",
                        "name": "scope",
                        "required": true,
                        "type": "string",
                        "x-example": "global"
                    },
                    {
                        "description": "The kind of rule\n",
                        "enum": [
                            "override",
                            "underride",
                            "sender",
                            "room",
                            "content"
                        ],
                        "in": "path",
                        "name": "kind",
                        "required": true,
                        "type": "string",
                        "x-example": "cake"
                    },
                    {
                        "description": "The identifier for the rule.\n",
                        "in": "path",
                        "name": "ruleId",
                        "required": true,
                        "type": "string",
                        "x-example": "nocake"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Whether the push rule is enabled.",
                        "examples": {
                            "application/json": {
                                "enabled": true
                            }
                        },
                        "schema": {
                            "properties": {
                                "enabled": {
                                    "description": "Whether the push rule is enabled or not.",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "enabled"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Get whether a push rule is enabled",
                "tags": [
                    "Push notifications"
                ]
            },
            "put": {
                "description": "This endpoint allows clients to enable or disable the specified push rule.",
                "operationId": "setPushRuleEnabled",
                "parameters": [
                    {
                        "description": "``global`` to specify global rules.",
                        "in": "path",
                        "name": "scope",
                        "required": true,
                        "type": "string",
                        "x-example": "global"
                    },
                    {
                        "description": "The kind of rule\n",
                        "enum": [
                            "override",
                            "underride",
                            "sender",
                            "room",
                            "content"
                        ],
                        "in": "path",
                        "name": "kind",
                        "required": true,
                        "type": "string",
                        "x-example": "content"
                    },
                    {
                        "description": "The identifier for the rule.\n",
                        "in": "path",
                        "name": "ruleId",
                        "required": true,
                        "type": "string",
                        "x-example": "nocake"
                    },
                    {
                        "description": "Whether the push rule is enabled or not.\n",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "example": {
                                "enabled": true
                            },
                            "properties": {
                                "enabled": {
                                    "description": "Whether the push rule is enabled or not.",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "enabled"
                            ],
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The push rule was enabled or disabled.",
                        "examples": {
                            "application/json": {}
                        },
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Enable or disable a push rule.",
                "tags": [
                    "Push notifications"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https",
        "http"
    ],
    "securityDefinitions": {
        "accessToken": {
            "description": "The access_token returned by a call to ``/login`` or ``/register``",
            "in": "query",
            "name": "access_token",
            "type": "apiKey"
        }
    },
    "swagger": "2.0"
}