[
    {
        "additional_types": [
            {
                "name": "Event",
                "properties": []
            },
            {
                "name": "UnsignedData",
                "properties": [
                    {
                        "description": "The time in milliseconds that has elapsed since the event was sent. This field is generated by the local homeserver, and may be incorrect if the local time on at least one of the two servers is out of sync, which can cause the age to either be negative or greater than it actually is.",
                        "name": "age",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "The event that redacted this event, if any.",
                        "name": "redacted_because",
                        "required": false,
                        "type": "Event"
                    },
                    {
                        "description": "The client-supplied transaction ID, for example, provided via\n``PUT /_matrix/client/r0/rooms/{roomId}/send/{eventType}/{txnId}``,\nif the client being given the event is the same one which sent it.\n",
                        "name": "transaction_id",
                        "required": false,
                        "type": "string"
                    }
                ]
            },
            {
                "name": "Event",
                "properties": [
                    {
                        "description": "The fields in this object will vary depending on the type of event. When interacting with the REST API, this is the HTTP body.",
                        "name": "content",
                        "required": true,
                        "type": "object"
                    },
                    {
                        "description": "The type of event. This SHOULD be namespaced similar to Java package naming conventions e.g. 'com.example.subdomain.event.type'",
                        "name": "type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The globally unique event identifier.",
                        "name": "event_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Contains the fully-qualified ID of the user who sent this event.",
                        "name": "sender",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Timestamp in milliseconds on originating homeserver when this event was sent.",
                        "name": "origin_server_ts",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Contains optional extra information about the event.",
                        "name": "unsigned",
                        "required": false,
                        "type": "UnsignedData"
                    },
                    {
                        "description": "The ID of the room associated with this event. Will not be present on events\nthat arrive through ``/sync``, despite being required everywhere else.",
                        "name": "room_id",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        ],
        "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "description": "This will listen for new events related to a particular room and return\nthem to the caller. This will block until an event is received, or until\nthe ``timeout`` is reached.\n\nThis API is the same as the normal ``/events`` endpoint, but can be\ncalled by users who have not joined the room.\n\nNote that the normal ``/events`` endpoint has been deprecated. This\nAPI will also be deprecated at some point, but its replacement is not\nyet known.",
        "method": "GET",
        "parameters": {
            "Query": [
                {
                    "description": "The room ID for which events should be returned.",
                    "name": "room_id",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "path": "/events",
        "rate_limited": false,
        "requires_auth": true,
        "responses": [
            {
                "description": "The events received, which may be none.",
                "examples": {
                    "application/json": {
                        "chunk": [
                            {
                                "content": {
                                    "body": "This is an example text message",
                                    "format": "org.matrix.custom.html",
                                    "formatted_body": "<b>This is an example text message</b>",
                                    "msgtype": "m.text"
                                },
                                "event_id": "$143273582443PhrSn:example.org",
                                "origin_server_ts": 1432735824653,
                                "room_id": "!somewhere:over.the.rainbow",
                                "sender": "@example:example.org",
                                "type": "m.room.message",
                                "unsigned": {
                                    "age": 1234
                                }
                            }
                        ],
                        "end": "s3457_9_0",
                        "start": "s3456_9_0"
                    }
                },
                "parameters": [
                    {
                        "description": "A token which correlates to the first value in ``chunk``. This\nis usually the same token supplied to ``from=``.",
                        "name": "start",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "A token which correlates to the last value in ``chunk``. This\ntoken should be used in the next request to ``/events``.",
                        "name": "end",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "An array of events.",
                        "name": "chunk",
                        "required": false,
                        "type": "[Event]"
                    }
                ],
                "required": false,
                "status": 200
            },
            {
                "description": "Bad pagination ``from`` parameter.",
                "examples": "",
                "parameters": [],
                "required": false,
                "status": 400
            }
        ],
        "summary": "Listen on the event stream."
    }
]