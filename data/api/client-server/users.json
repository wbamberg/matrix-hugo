{
    "__meta": {
        "base": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "endpoints": [
            {
                "deprecated": false,
                "desc": "Performs a search for users. The homeserver may\ndetermine which subset of users are searched, however the homeserver\nMUST at a minimum consider the users the requesting user shares a\nroom with and those who reside in public rooms (known to the homeserver).\nThe search MUST consider local users to the homeserver, and SHOULD\nquery remote users as part of the search.\n\nThe search is performed case-insensitively on user IDs and display\nnames preferably using a collation determined based upon the \n``Accept-Language`` header provided in the request, if present.",
                "example": {
                    "req": "POST /_matrix/client/%CLIENT_MAJOR_VERSION%/user_directory/search HTTP/1.1\nContent-Type: application/json\n\n{\n  \"search_term\": \"foo\",\n  \"limit\": 10\n}"
                },
                "method": "POST",
                "path": "/_matrix/client/%CLIENT_MAJOR_VERSION%/user_directory/search",
                "rate_limited": true,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "**Required.** The term to search for",
                            "key": "search_term",
                            "required": true,
                            "title": "string"
                        },
                        {
                            "desc": "The maximum number of results to return. Defaults to 10.",
                            "key": "limit",
                            "required": false,
                            "title": "integer"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** Ordered by rank and then whether or not profile info is available.",
                                "key": "results",
                                "required": true,
                                "title": "[User]"
                            },
                            {
                                "desc": "**Required.** Indicates if the result list has been truncated by the limit.",
                                "key": "limited",
                                "required": true,
                                "title": "boolean"
                            }
                        ]
                    ],
                    [
                        "User",
                        null,
                        [
                            {
                                "desc": "**Required.** The user's matrix user ID.",
                                "key": "user_id",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "The display name of the user, if one exists.",
                                "key": "display_name",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "The avatar url, as an MXC, if one exists.",
                                "key": "avatar_url",
                                "required": false,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The results of the search.",
                        "example": "{\n  \"results\": [\n    {\n      \"user_id\": \"@foo:bar.com\",\n      \"display_name\": \"Foo\",\n      \"avatar_url\": \"mxc://bar.com/foo\"\n    }\n  ],\n  \"limited\": false\n}"
                    },
                    {
                        "code": 429,
                        "description": "This request was rate-limited.",
                        "example": "{\n  \"errcode\": \"M_LIMIT_EXCEEDED\",\n  \"error\": \"Too many requests\",\n  \"retry_after_ms\": 2000\n}"
                    }
                ],
                "title": "Searches the user directory."
            }
        ],
        "group": "users_cs"
    },
    "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
    "consumes": [
        "application/json"
    ],
    "host": "localhost:8008",
    "info": {
        "title": "Matrix Client-Server User Directory API",
        "version": "1.0.0"
    },
    "paths": {
        "/user_directory/search": {
            "post": {
                "description": "Performs a search for users. The homeserver may\ndetermine which subset of users are searched, however the homeserver\nMUST at a minimum consider the users the requesting user shares a\nroom with and those who reside in public rooms (known to the homeserver).\nThe search MUST consider local users to the homeserver, and SHOULD\nquery remote users as part of the search.\n\nThe search is performed case-insensitively on user IDs and display\nnames preferably using a collation determined based upon the \n``Accept-Language`` header provided in the request, if present.",
                "operationId": "searchUserDirectory",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "limit": {
                                    "description": "The maximum number of results to return. Defaults to 10.",
                                    "example": 10,
                                    "type": "integer"
                                },
                                "search_term": {
                                    "description": "The term to search for",
                                    "example": "foo",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "search_term"
                            ],
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The results of the search.",
                        "examples": {
                            "application/json": {
                                "limited": false,
                                "results": [
                                    {
                                        "avatar_url": "mxc://bar.com/foo",
                                        "display_name": "Foo",
                                        "user_id": "@foo:bar.com"
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "properties": {
                                "limited": {
                                    "description": "Indicates if the result list has been truncated by the limit.",
                                    "type": "boolean"
                                },
                                "results": {
                                    "description": "Ordered by rank and then whether or not profile info is available.",
                                    "items": {
                                        "properties": {
                                            "avatar_url": {
                                                "description": "The avatar url, as an MXC, if one exists.",
                                                "example": "mxc://bar.com/foo",
                                                "type": "string"
                                            },
                                            "display_name": {
                                                "description": "The display name of the user, if one exists.",
                                                "example": "Foo",
                                                "type": "string"
                                            },
                                            "user_id": {
                                                "description": "The user's matrix user ID.",
                                                "example": "@foo:bar.com",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "user_id"
                                        ],
                                        "title": "User",
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "results",
                                "limited"
                            ],
                            "type": "object"
                        }
                    },
                    "429": {
                        "description": "This request was rate-limited.",
                        "schema": {
                            "description": "The rate limit was reached for this request",
                            "properties": {
                                "errcode": {
                                    "description": "The M_LIMIT_EXCEEDED error code",
                                    "example": "M_LIMIT_EXCEEDED",
                                    "type": "string"
                                },
                                "error": {
                                    "description": "A human-readable error message.",
                                    "example": "Too many requests",
                                    "type": "string"
                                },
                                "retry_after_ms": {
                                    "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                                    "example": 2000,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "errcode"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "summary": "Searches the user directory.",
                "tags": [
                    "User data"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https",
        "http"
    ],
    "securityDefinitions": {
        "accessToken": {
            "description": "The access_token returned by a call to ``/login`` or ``/register``",
            "in": "query",
            "name": "access_token",
            "type": "apiKey"
        }
    },
    "swagger": "2.0"
}