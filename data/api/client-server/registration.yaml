[
    {
        "additional_types": [
            {
                "name": "Authentication Data",
                "properties": [
                    {
                        "description": "The login type that the client is attempting to complete.",
                        "name": "type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The value of the session key given by the homeserver.",
                        "name": "session",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        ],
        "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "description": "This API endpoint uses the `User-Interactive Authentication API`_, except in\nthe cases where a guest account is being registered.\n\nRegister for an account on this homeserver.\n\nThere are two kinds of user account:\n\n- `user` accounts. These accounts may use the full API described in this specification.\n\n- `guest` accounts. These accounts may have limited permissions and may not be supported by all servers.\n\nIf registration is successful, this endpoint will issue an access token\nthe client can use to authorize itself in subsequent requests.\n\nIf the client does not supply a ``device_id``, the server must\nauto-generate one.\n\nThe server SHOULD register an account with a User ID based on the\n``username`` provided, if any. Note that the grammar of Matrix User ID\nlocalparts is restricted, so the server MUST either map the provided\n``username`` onto a ``user_id`` in a logical manner, or reject\n``username``\\s which do not comply to the grammar, with\n``M_INVALID_USERNAME``.\n\nMatrix clients MUST NOT assume that localpart of the registered\n``user_id`` matches the provided ``username``.\n\nThe returned access token must be associated with the ``device_id``\nsupplied by the client or generated by the server. The server may\ninvalidate any access token previously associated with that device. See\n`Relationship between access tokens and devices`_.\n\nWhen registering a guest account, all parameters in the request body\nwith the exception of ``initial_device_display_name`` MUST BE ignored\nby the server. The server MUST pick a ``device_id`` for the account\nregardless of input.\n\nAny user ID returned by this API must conform to the grammar given in the\n`Matrix specification <../appendices.html#user-identifiers>`_.",
        "method": "POST",
        "parameters": {
            "Body": [
                {
                    "description": "Additional authentication information for the\nuser-interactive authentication API. Note that this\ninformation is *not* used to define how the registered user\nshould be authenticated, but is instead used to\nauthenticate the ``register`` call itself.",
                    "name": "auth",
                    "required": false,
                    "type": "Authentication Data"
                },
                {
                    "description": "The basis for the localpart of the desired Matrix ID. If omitted,\nthe homeserver MUST generate a Matrix ID local part.",
                    "name": "username",
                    "required": false,
                    "type": "string"
                },
                {
                    "description": "The desired password for the account.",
                    "name": "password",
                    "required": false,
                    "type": "string"
                },
                {
                    "description": "ID of the client device. If this does not correspond to a\nknown client device, a new device will be created. The server\nwill auto-generate a device_id if this is not specified.",
                    "name": "device_id",
                    "required": false,
                    "type": "string"
                },
                {
                    "description": "A display name to assign to the newly-created device. Ignored\nif ``device_id`` corresponds to a known device.",
                    "name": "initial_device_display_name",
                    "required": false,
                    "type": "string"
                },
                {
                    "description": "If true, an ``access_token`` and ``device_id`` should not be\nreturned from this call, therefore preventing an automatic\nlogin. Defaults to false.",
                    "name": "inhibit_login",
                    "required": false,
                    "type": "boolean"
                }
            ],
            "Form": [],
            "Header": [],
            "Path": [],
            "Query": [
                {
                    "description": "The kind of account to register. Defaults to ``user``.",
                    "name": "kind",
                    "required": false,
                    "type": "string"
                }
            ]
        },
        "path": "/register",
        "rate_limited": true,
        "requires_auth": false,
        "responses": [
            {
                "additional_types": [],
                "description": "The account has been registered.",
                "examples": {
                    "application/json": {
                        "access_token": "abc123",
                        "device_id": "GHTYAJCE",
                        "user_id": "@cheeky_monkey:matrix.org"
                    }
                },
                "parameters": [
                    {
                        "description": "The fully-qualified Matrix user ID (MXID) that has been registered.\n\nAny user ID returned by this API must conform to the grammar given in the\n`Matrix specification <../appendices.html#user-identifiers>`_.",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "An access token for the account.\nThis access token can then be used to authorize other requests.\nRequired if the ``inhibit_login`` option is false.",
                        "name": "access_token",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The server_name of the homeserver on which the account has\nbeen registered.\n\n**Deprecated**. Clients should extract the server_name from\n``user_id`` (by splitting at the first colon) if they require\nit. Note also that ``homeserver`` is not spelt this way.",
                        "name": "home_server",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "ID of the registered device. Will be the same as the\ncorresponding parameter in the request, if one was specified.\nRequired if the ``inhibit_login`` option is false.",
                        "name": "device_id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 200
            },
            {
                "additional_types": [],
                "description": "Part of the request was invalid. This may include one of the following error codes:\n\n* ``M_USER_IN_USE`` : The desired user ID is already taken.\n* ``M_INVALID_USERNAME`` : The desired user ID is not a valid user name.\n* ``M_EXCLUSIVE`` : The desired user ID is in the exclusive namespace\n  claimed by an application service.\n\nThese errors may be returned at any stage of the registration process,\nincluding after authentication if the requested user ID was registered\nwhilst the client was performing authentication.\n\nHomeservers MUST perform the relevant checks and return these codes before\nperforming User-Interactive Authentication, although they may also return\nthem after authentication is completed if, for example, the requested user ID\nwas registered whilst the client was performing authentication.",
                "examples": {
                    "application/json": {
                        "errcode": "M_USER_IN_USE",
                        "error": "Desired user ID is already taken."
                    }
                },
                "parameters": [
                    {
                        "description": "An error code.",
                        "name": "errcode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A human-readable error message.",
                        "name": "error",
                        "required": false,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 400
            },
            {
                "additional_types": [],
                "description": "The homeserver requires additional authentication information.",
                "examples": "",
                "parameters": [
                    {
                        "description": "A list of the login flows supported by the server for this API.",
                        "name": "flows",
                        "required": true,
                        "type": "[object]"
                    },
                    {
                        "description": "Contains any information that the client will need to know in order to\nuse a given type of authentication. For each login type presented,\nthat type may be present as a key in this dictionary. For example, the\npublic part of an OAuth client ID could be given here.",
                        "name": "params",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "description": "This is a session identifier that the client must pass back to the home\nserver, if one is provided, in subsequent attempts to authenticate in the\nsame API call.",
                        "name": "session",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "A list of the stages the client has completed successfully",
                        "name": "completed",
                        "required": false,
                        "type": "[string]"
                    }
                ],
                "required": false,
                "status": 401
            },
            {
                "additional_types": [],
                "description": "The homeserver does not permit registering the account. This response\ncan be used to identify that a particular ``kind`` of account is not\nallowed, or that registration is generally not supported by the homeserver.",
                "examples": {
                    "application/json": {
                        "errcode": "M_FORBIDDEN",
                        "error": "Registration is disabled"
                    }
                },
                "parameters": [
                    {
                        "description": "An error code.",
                        "name": "errcode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A human-readable error message.",
                        "name": "error",
                        "required": false,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 403
            },
            {
                "additional_types": [],
                "description": "This request was rate-limited.",
                "examples": "",
                "parameters": [
                    {
                        "description": "The M_LIMIT_EXCEEDED error code",
                        "name": "errcode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A human-readable error message.",
                        "name": "error",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                        "name": "retry_after_ms",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "required": false,
                "status": 429
            }
        ],
        "summary": "Register for an account on this homeserver."
    },
    {
        "additional_types": [],
        "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "description": "The homeserver must check that the given email address is **not**\nalready associated with an account on this homeserver. The homeserver\nshould validate the email itself, either by sending a validation email\nitself or by using a service it has control over.",
        "method": "POST",
        "parameters": {
            "Body": [
                {
                    "description": "A unique string generated by the client, and used to identify the\nvalidation attempt. It must be a string consisting of the characters\n``[0-9a-zA-Z.=_-]``. Its length must not exceed 255 characters and it\nmust not be empty.\n",
                    "name": "client_secret",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The email address to validate.",
                    "name": "email",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The server will only send an email if the ``send_attempt``\nis a number greater than the most recent one which it has seen,\nscoped to that ``email`` + ``client_secret`` pair. This is to\navoid repeatedly sending the same email in the case of request\nretries between the POSTing user and the identity server.\nThe client should increment this value if they desire a new\nemail (e.g. a reminder) to be sent. If they do not, the server\nshould respond with success but not resend the email.",
                    "name": "send_attempt",
                    "required": true,
                    "type": "integer"
                },
                {
                    "description": "Optional. When the validation is completed, the identity server will\nredirect the user to this URL. This option is ignored when submitting\n3PID validation information through a POST request.",
                    "name": "next_link",
                    "required": false,
                    "type": "string"
                },
                {
                    "description": "The hostname of the identity server to communicate with. May optionally\ninclude a port. This parameter is ignored when the homeserver handles\n3PID verification.\n\nThis parameter is deprecated with a plan to be removed in a future specification\nversion for ``/account/password`` and ``/register`` requests.",
                    "name": "id_server",
                    "required": false,
                    "type": "string"
                },
                {
                    "description": "An access token previously registered with the identity server. Servers\ncan treat this as optional to distinguish between r0.5-compatible clients\nand this specification version.\n\nRequired if an ``id_server`` is supplied.",
                    "name": "id_access_token",
                    "required": false,
                    "type": "string"
                }
            ],
            "Form": [],
            "Header": [],
            "Path": [],
            "Query": []
        },
        "path": "/register/email/requestToken",
        "rate_limited": false,
        "requires_auth": false,
        "responses": [
            {
                "additional_types": [],
                "description": "An email has been sent to the specified address. Note that this\nmay be an email containing the validation token or it may be\ninforming the user of an error.",
                "examples": "",
                "parameters": [
                    {
                        "description": "The session ID. Session IDs are opaque strings that must consist entirely\nof the characters ``[0-9a-zA-Z.=_-]``. Their length must not exceed 255\ncharacters and they must not be empty.",
                        "name": "sid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "An optional field containing a URL where the client must submit the\nvalidation token to, with identical parameters to the Identity Service\nAPI's ``POST /validate/email/submitToken`` endpoint (without the requirement\nfor an access token). The homeserver must send this token to the user (if\napplicable), who should then be prompted to provide it to the client.\n\nIf this field is not present, the client can assume that verification\nwill happen without the client's involvement provided the homeserver\nadvertises this specification version in the ``/versions`` response\n(ie: r0.5.0).",
                        "name": "submit_url",
                        "required": false,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 200
            },
            {
                "additional_types": [],
                "description": "The homeserver does not permit the address to be bound.",
                "examples": {
                    "application/json": {
                        "errcode": "M_THREEPID_DENIED",
                        "error": "Third party identifier is not allowed"
                    }
                },
                "parameters": [
                    {
                        "description": "An error code.",
                        "name": "errcode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A human-readable error message.",
                        "name": "error",
                        "required": false,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 403
            },
            {
                "additional_types": [],
                "description": "Part of the request was invalid. This may include one of the following error codes:\n\n* ``M_THREEPID_IN_USE`` : The email address is already registered to an account on this server.\n  However, if the homeserver has the ability to send email, it is recommended that the server\n  instead send an email to the user with instructions on how to reset their password.\n  This prevents malicious parties from being able to determine if a given email address\n  has an account on the homeserver in question.\n* ``M_SERVER_NOT_TRUSTED`` : The ``id_server`` parameter refers to an identity server\n  that is not trusted by this homeserver.",
                "examples": {
                    "application/json": {
                        "errcode": "M_THREEPID_IN_USE",
                        "error": "The specified address is already in use"
                    }
                },
                "parameters": [
                    {
                        "description": "An error code.",
                        "name": "errcode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A human-readable error message.",
                        "name": "error",
                        "required": false,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 400
            }
        ],
        "summary": "Begins the validation process for an email to be used during registration."
    },
    {
        "additional_types": [],
        "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "description": "The homeserver must check that the given phone number is **not**\nalready associated with an account on this homeserver. The homeserver\nshould validate the phone number itself, either by sending a validation\nmessage itself or by using a service it has control over.",
        "method": "POST",
        "parameters": {
            "Body": [
                {
                    "description": "A unique string generated by the client, and used to identify the\nvalidation attempt. It must be a string consisting of the characters\n``[0-9a-zA-Z.=_-]``. Its length must not exceed 255 characters and it\nmust not be empty.\n",
                    "name": "client_secret",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The two-letter uppercase ISO-3166-1 alpha-2 country code that the\nnumber in ``phone_number`` should be parsed as if it were dialled from.",
                    "name": "country",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The phone number to validate.",
                    "name": "phone_number",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The server will only send an SMS if the ``send_attempt`` is a\nnumber greater than the most recent one which it has seen,\nscoped to that ``country`` + ``phone_number`` + ``client_secret``\ntriple. This is to avoid repeatedly sending the same SMS in\nthe case of request retries between the POSTing user and the\nidentity server. The client should increment this value if\nthey desire a new SMS (e.g. a reminder) to be sent.",
                    "name": "send_attempt",
                    "required": true,
                    "type": "integer"
                },
                {
                    "description": "Optional. When the validation is completed, the identity server will\nredirect the user to this URL. This option is ignored when submitting\n3PID validation information through a POST request.",
                    "name": "next_link",
                    "required": false,
                    "type": "string"
                },
                {
                    "description": "The hostname of the identity server to communicate with. May optionally\ninclude a port. This parameter is ignored when the homeserver handles\n3PID verification.\n\nThis parameter is deprecated with a plan to be removed in a future specification\nversion for ``/account/password`` and ``/register`` requests.",
                    "name": "id_server",
                    "required": false,
                    "type": "string"
                },
                {
                    "description": "An access token previously registered with the identity server. Servers\ncan treat this as optional to distinguish between r0.5-compatible clients\nand this specification version.\n\nRequired if an ``id_server`` is supplied.",
                    "name": "id_access_token",
                    "required": false,
                    "type": "string"
                }
            ],
            "Form": [],
            "Header": [],
            "Path": [],
            "Query": []
        },
        "path": "/register/msisdn/requestToken",
        "rate_limited": false,
        "requires_auth": false,
        "responses": [
            {
                "additional_types": [],
                "description": "An SMS message has been sent to the specified phone number. Note\nthat this may be an SMS message containing the validation token or\nit may be informing the user of an error.",
                "examples": "",
                "parameters": [
                    {
                        "description": "The session ID. Session IDs are opaque strings that must consist entirely\nof the characters ``[0-9a-zA-Z.=_-]``. Their length must not exceed 255\ncharacters and they must not be empty.",
                        "name": "sid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "An optional field containing a URL where the client must submit the\nvalidation token to, with identical parameters to the Identity Service\nAPI's ``POST /validate/email/submitToken`` endpoint (without the requirement\nfor an access token). The homeserver must send this token to the user (if\napplicable), who should then be prompted to provide it to the client.\n\nIf this field is not present, the client can assume that verification\nwill happen without the client's involvement provided the homeserver\nadvertises this specification version in the ``/versions`` response\n(ie: r0.5.0).",
                        "name": "submit_url",
                        "required": false,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 200
            },
            {
                "additional_types": [],
                "description": "The homeserver does not permit the address to be bound.",
                "examples": {
                    "application/json": {
                        "errcode": "M_THREEPID_DENIED",
                        "error": "Third party identifier is not allowed"
                    }
                },
                "parameters": [
                    {
                        "description": "An error code.",
                        "name": "errcode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A human-readable error message.",
                        "name": "error",
                        "required": false,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 403
            },
            {
                "additional_types": [],
                "description": "Part of the request was invalid. This may include one of the following error codes:\n\n* ``M_THREEPID_IN_USE`` : The phone number is already registered to an account on this server.\n  However, if the homeserver has the ability to send SMS message, it is recommended that the server\n  instead send an SMS message to the user with instructions on how to reset their password.\n  This prevents malicious parties from being able to determine if a given phone number\n  has an account on the homeserver in question.\n* ``M_SERVER_NOT_TRUSTED`` : The ``id_server`` parameter refers to an identity server\n  that is not trusted by this homeserver.",
                "examples": {
                    "application/json": {
                        "errcode": "M_THREEPID_IN_USE",
                        "error": "The specified address is already in use"
                    }
                },
                "parameters": [
                    {
                        "description": "An error code.",
                        "name": "errcode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A human-readable error message.",
                        "name": "error",
                        "required": false,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 400
            }
        ],
        "summary": "Requests a validation token be sent to the given phone number for the purpose of registering an account"
    },
    {
        "additional_types": [
            {
                "name": "Authentication Data",
                "properties": [
                    {
                        "description": "The login type that the client is attempting to complete.",
                        "name": "type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The value of the session key given by the homeserver.",
                        "name": "session",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        ],
        "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "description": "Changes the password for an account on this homeserver.\n\nThis API endpoint uses the `User-Interactive Authentication API`_ to\nensure the user changing the password is actually the owner of the\naccount.\n\nAn access token should be submitted to this endpoint if the client has\nan active session.\n\nThe homeserver may change the flows available depending on whether a\nvalid access token is provided. The homeserver SHOULD NOT revoke the\naccess token provided in the request. Whether other access tokens for\nthe user are revoked depends on the request parameters.",
        "method": "POST",
        "parameters": {
            "Body": [
                {
                    "description": "The new password for the account.",
                    "name": "new_password",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Whether the user's other access tokens, and their associated devices, should be\nrevoked if the request succeeds. Defaults to true.\n\nWhen ``false``, the server can still take advantage of `the soft logout method <#soft-logout>`_\nfor the user's remaining devices.",
                    "name": "logout_devices",
                    "required": false,
                    "type": "boolean"
                },
                {
                    "description": "Additional authentication information for the user-interactive authentication API.",
                    "name": "auth",
                    "required": false,
                    "type": "Authentication Data"
                }
            ],
            "Form": [],
            "Header": [],
            "Path": [],
            "Query": []
        },
        "path": "/account/password",
        "rate_limited": true,
        "requires_auth": true,
        "responses": [
            {
                "additional_types": [],
                "description": "The password has been changed.",
                "examples": {
                    "application/json": {}
                },
                "parameters": [],
                "required": false,
                "status": 200
            },
            {
                "additional_types": [],
                "description": "The homeserver requires additional authentication information.",
                "examples": "",
                "parameters": [
                    {
                        "description": "A list of the login flows supported by the server for this API.",
                        "name": "flows",
                        "required": true,
                        "type": "[object]"
                    },
                    {
                        "description": "Contains any information that the client will need to know in order to\nuse a given type of authentication. For each login type presented,\nthat type may be present as a key in this dictionary. For example, the\npublic part of an OAuth client ID could be given here.",
                        "name": "params",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "description": "This is a session identifier that the client must pass back to the home\nserver, if one is provided, in subsequent attempts to authenticate in the\nsame API call.",
                        "name": "session",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "A list of the stages the client has completed successfully",
                        "name": "completed",
                        "required": false,
                        "type": "[string]"
                    }
                ],
                "required": false,
                "status": 401
            },
            {
                "additional_types": [],
                "description": "This request was rate-limited.",
                "examples": "",
                "parameters": [
                    {
                        "description": "The M_LIMIT_EXCEEDED error code",
                        "name": "errcode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A human-readable error message.",
                        "name": "error",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                        "name": "retry_after_ms",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "required": false,
                "status": 429
            }
        ],
        "summary": "Changes a user's password."
    },
    {
        "additional_types": [],
        "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "description": "The homeserver must check that the given email address **is\nassociated** with an account on this homeserver. This API should be\nused to request validation tokens when authenticating for the\n``/account/password`` endpoint.\n\nThis API's parameters and response are identical to that of the\n|/register/email/requestToken|_ endpoint, except that\n``M_THREEPID_NOT_FOUND`` may be returned if no account matching the\ngiven email address could be found. The server may instead send an\nemail to the given address prompting the user to create an account.\n``M_THREEPID_IN_USE`` may not be returned.\n\nThe homeserver should validate the email itself, either by sending a\nvalidation email itself or by using a service it has control over.\n\n\n.. |/register/email/requestToken| replace:: ``/register/email/requestToken``\n\n.. _/register/email/requestToken: #post-matrix-client-%CLIENT_MAJOR_VERSION%-register-email-requesttoken",
        "method": "POST",
        "parameters": {
            "Body": [
                {
                    "description": "A unique string generated by the client, and used to identify the\nvalidation attempt. It must be a string consisting of the characters\n``[0-9a-zA-Z.=_-]``. Its length must not exceed 255 characters and it\nmust not be empty.\n",
                    "name": "client_secret",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The email address to validate.",
                    "name": "email",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The server will only send an email if the ``send_attempt``\nis a number greater than the most recent one which it has seen,\nscoped to that ``email`` + ``client_secret`` pair. This is to\navoid repeatedly sending the same email in the case of request\nretries between the POSTing user and the identity server.\nThe client should increment this value if they desire a new\nemail (e.g. a reminder) to be sent. If they do not, the server\nshould respond with success but not resend the email.",
                    "name": "send_attempt",
                    "required": true,
                    "type": "integer"
                },
                {
                    "description": "Optional. When the validation is completed, the identity server will\nredirect the user to this URL. This option is ignored when submitting\n3PID validation information through a POST request.",
                    "name": "next_link",
                    "required": false,
                    "type": "string"
                },
                {
                    "description": "The hostname of the identity server to communicate with. May optionally\ninclude a port. This parameter is ignored when the homeserver handles\n3PID verification.\n\nThis parameter is deprecated with a plan to be removed in a future specification\nversion for ``/account/password`` and ``/register`` requests.",
                    "name": "id_server",
                    "required": false,
                    "type": "string"
                },
                {
                    "description": "An access token previously registered with the identity server. Servers\ncan treat this as optional to distinguish between r0.5-compatible clients\nand this specification version.\n\nRequired if an ``id_server`` is supplied.",
                    "name": "id_access_token",
                    "required": false,
                    "type": "string"
                }
            ],
            "Form": [],
            "Header": [],
            "Path": [],
            "Query": []
        },
        "path": "/account/password/email/requestToken",
        "rate_limited": false,
        "requires_auth": false,
        "responses": [
            {
                "additional_types": [],
                "description": "An email was sent to the given address.",
                "examples": "",
                "parameters": [
                    {
                        "description": "The session ID. Session IDs are opaque strings that must consist entirely\nof the characters ``[0-9a-zA-Z.=_-]``. Their length must not exceed 255\ncharacters and they must not be empty.",
                        "name": "sid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "An optional field containing a URL where the client must submit the\nvalidation token to, with identical parameters to the Identity Service\nAPI's ``POST /validate/email/submitToken`` endpoint (without the requirement\nfor an access token). The homeserver must send this token to the user (if\napplicable), who should then be prompted to provide it to the client.\n\nIf this field is not present, the client can assume that verification\nwill happen without the client's involvement provided the homeserver\nadvertises this specification version in the ``/versions`` response\n(ie: r0.5.0).",
                        "name": "submit_url",
                        "required": false,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 200
            },
            {
                "additional_types": [],
                "description": "The homeserver does not allow the third party identifier as a\ncontact option.",
                "examples": {
                    "application/json": {
                        "errcode": "M_THREEPID_DENIED",
                        "error": "Third party identifier is not allowed"
                    }
                },
                "parameters": [
                    {
                        "description": "An error code.",
                        "name": "errcode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A human-readable error message.",
                        "name": "error",
                        "required": false,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 403
            },
            {
                "additional_types": [],
                "description": "The referenced third party identifier is not recognised by the\nhomeserver, or the request was invalid. The error code ``M_SERVER_NOT_TRUSTED``\ncan be returned if the server does not trust/support the identity server\nprovided in the request.",
                "examples": {
                    "application/json": {
                        "errcode": "M_THREEPID_NOT_FOUND",
                        "error": "Email not found"
                    }
                },
                "parameters": [
                    {
                        "description": "An error code.",
                        "name": "errcode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A human-readable error message.",
                        "name": "error",
                        "required": false,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 400
            }
        ],
        "summary": "Requests a validation token be sent to the given email address for the purpose of resetting a user's password"
    },
    {
        "additional_types": [],
        "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "description": "The homeserver must check that the given phone number **is\nassociated** with an account on this homeserver. This API should be\nused to request validation tokens when authenticating for the\n``/account/password`` endpoint.\n\nThis API's parameters and response are identical to that of the\n|/register/msisdn/requestToken|_ endpoint, except that\n``M_THREEPID_NOT_FOUND`` may be returned if no account matching the\ngiven phone number could be found. The server may instead send the SMS\nto the given phone number prompting the user to create an account.\n``M_THREEPID_IN_USE`` may not be returned.\n\nThe homeserver should validate the phone number itself, either by sending a\nvalidation message itself or by using a service it has control over.\n\n.. |/register/msisdn/requestToken| replace:: ``/register/msisdn/requestToken``\n\n.. _/register/msisdn/requestToken: #post-matrix-client-%CLIENT_MAJOR_VERSION%-register-email-requesttoken",
        "method": "POST",
        "parameters": {
            "Body": [
                {
                    "description": "A unique string generated by the client, and used to identify the\nvalidation attempt. It must be a string consisting of the characters\n``[0-9a-zA-Z.=_-]``. Its length must not exceed 255 characters and it\nmust not be empty.\n",
                    "name": "client_secret",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The two-letter uppercase ISO-3166-1 alpha-2 country code that the\nnumber in ``phone_number`` should be parsed as if it were dialled from.",
                    "name": "country",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The phone number to validate.",
                    "name": "phone_number",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "The server will only send an SMS if the ``send_attempt`` is a\nnumber greater than the most recent one which it has seen,\nscoped to that ``country`` + ``phone_number`` + ``client_secret``\ntriple. This is to avoid repeatedly sending the same SMS in\nthe case of request retries between the POSTing user and the\nidentity server. The client should increment this value if\nthey desire a new SMS (e.g. a reminder) to be sent.",
                    "name": "send_attempt",
                    "required": true,
                    "type": "integer"
                },
                {
                    "description": "Optional. When the validation is completed, the identity server will\nredirect the user to this URL. This option is ignored when submitting\n3PID validation information through a POST request.",
                    "name": "next_link",
                    "required": false,
                    "type": "string"
                },
                {
                    "description": "The hostname of the identity server to communicate with. May optionally\ninclude a port. This parameter is ignored when the homeserver handles\n3PID verification.\n\nThis parameter is deprecated with a plan to be removed in a future specification\nversion for ``/account/password`` and ``/register`` requests.",
                    "name": "id_server",
                    "required": false,
                    "type": "string"
                },
                {
                    "description": "An access token previously registered with the identity server. Servers\ncan treat this as optional to distinguish between r0.5-compatible clients\nand this specification version.\n\nRequired if an ``id_server`` is supplied.",
                    "name": "id_access_token",
                    "required": false,
                    "type": "string"
                }
            ],
            "Form": [],
            "Header": [],
            "Path": [],
            "Query": []
        },
        "path": "/account/password/msisdn/requestToken",
        "rate_limited": false,
        "requires_auth": false,
        "responses": [
            {
                "additional_types": [],
                "description": "An SMS message was sent to the given phone number.",
                "examples": "",
                "parameters": [
                    {
                        "description": "The session ID. Session IDs are opaque strings that must consist entirely\nof the characters ``[0-9a-zA-Z.=_-]``. Their length must not exceed 255\ncharacters and they must not be empty.",
                        "name": "sid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "An optional field containing a URL where the client must submit the\nvalidation token to, with identical parameters to the Identity Service\nAPI's ``POST /validate/email/submitToken`` endpoint (without the requirement\nfor an access token). The homeserver must send this token to the user (if\napplicable), who should then be prompted to provide it to the client.\n\nIf this field is not present, the client can assume that verification\nwill happen without the client's involvement provided the homeserver\nadvertises this specification version in the ``/versions`` response\n(ie: r0.5.0).",
                        "name": "submit_url",
                        "required": false,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 200
            },
            {
                "additional_types": [],
                "description": "The homeserver does not allow the third party identifier as a\ncontact option.",
                "examples": {
                    "application/json": {
                        "errcode": "M_THREEPID_DENIED",
                        "error": "Third party identifier is not allowed"
                    }
                },
                "parameters": [
                    {
                        "description": "An error code.",
                        "name": "errcode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A human-readable error message.",
                        "name": "error",
                        "required": false,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 403
            },
            {
                "additional_types": [],
                "description": "The referenced third party identifier is not recognised by the\nhomeserver, or the request was invalid. The error code ``M_SERVER_NOT_TRUSTED``\ncan be returned if the server does not trust/support the identity server\nprovided in the request.",
                "examples": {
                    "application/json": {
                        "errcode": "M_THREEPID_NOT_FOUND",
                        "error": "Phone number not found"
                    }
                },
                "parameters": [
                    {
                        "description": "An error code.",
                        "name": "errcode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A human-readable error message.",
                        "name": "error",
                        "required": false,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 400
            }
        ],
        "summary": "Requests a validation token be sent to the given phone number for the purpose of resetting a user's password."
    },
    {
        "additional_types": [
            {
                "name": "Authentication Data",
                "properties": [
                    {
                        "description": "The login type that the client is attempting to complete.",
                        "name": "type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The value of the session key given by the homeserver.",
                        "name": "session",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        ],
        "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "description": "Deactivate the user's account, removing all ability for the user to\nlogin again.\n\nThis API endpoint uses the `User-Interactive Authentication API`_.\n\nAn access token should be submitted to this endpoint if the client has\nan active session.\n\nThe homeserver may change the flows available depending on whether a\nvalid access token is provided.\n\nUnlike other endpoints, this endpoint does not take an ``id_access_token``\nparameter because the homeserver is expected to sign the request to the\nidentity server instead.",
        "method": "POST",
        "parameters": {
            "Body": [
                {
                    "description": "Additional authentication information for the user-interactive authentication API.",
                    "name": "auth",
                    "required": false,
                    "type": "Authentication Data"
                },
                {
                    "description": "The identity server to unbind all of the user's 3PIDs from.\nIf not provided, the homeserver MUST use the ``id_server``\nthat was originally use to bind each identifier. If the\nhomeserver does not know which ``id_server`` that was,\nit must return an ``id_server_unbind_result`` of\n``no-support``.",
                    "name": "id_server",
                    "required": false,
                    "type": "string"
                }
            ],
            "Form": [],
            "Header": [],
            "Path": [],
            "Query": []
        },
        "path": "/account/deactivate",
        "rate_limited": true,
        "requires_auth": true,
        "responses": [
            {
                "additional_types": [],
                "description": "The account has been deactivated.",
                "examples": "",
                "parameters": [
                    {
                        "description": "An indicator as to whether or not the homeserver was able to unbind\nthe user's 3PIDs from the identity server(s). ``success`` indicates\nthat all identifiers have been unbound from the identity server while\n``no-support`` indicates that one or more identifiers failed to unbind\ndue to the identity server refusing the request or the homeserver\nbeing unable to determine an identity server to unbind from. This\nmust be ``success`` if the homeserver has no identifiers to unbind\nfor the user.",
                        "name": "id_server_unbind_result",
                        "required": true,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 200
            },
            {
                "additional_types": [],
                "description": "The homeserver requires additional authentication information.",
                "examples": "",
                "parameters": [
                    {
                        "description": "A list of the login flows supported by the server for this API.",
                        "name": "flows",
                        "required": true,
                        "type": "[object]"
                    },
                    {
                        "description": "Contains any information that the client will need to know in order to\nuse a given type of authentication. For each login type presented,\nthat type may be present as a key in this dictionary. For example, the\npublic part of an OAuth client ID could be given here.",
                        "name": "params",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "description": "This is a session identifier that the client must pass back to the home\nserver, if one is provided, in subsequent attempts to authenticate in the\nsame API call.",
                        "name": "session",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "A list of the stages the client has completed successfully",
                        "name": "completed",
                        "required": false,
                        "type": "[string]"
                    }
                ],
                "required": false,
                "status": 401
            },
            {
                "additional_types": [],
                "description": "This request was rate-limited.",
                "examples": "",
                "parameters": [
                    {
                        "description": "The M_LIMIT_EXCEEDED error code",
                        "name": "errcode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A human-readable error message.",
                        "name": "error",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                        "name": "retry_after_ms",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "required": false,
                "status": 429
            }
        ],
        "summary": "Deactivate a user's account."
    },
    {
        "additional_types": [],
        "basePath": "/_matrix/client/%CLIENT_MAJOR_VERSION%",
        "description": "Checks to see if a username is available, and valid, for the server.\n\nThe server should check to ensure that, at the time of the request, the\nusername requested is available for use. This includes verifying that an\napplication service has not claimed the username and that the username\nfits the server's desired requirements (for example, a server could dictate\nthat it does not permit usernames with underscores).\n\nMatrix clients may wish to use this API prior to attempting registration,\nhowever the clients must also be aware that using this API does not normally\nreserve the username. This can mean that the username becomes unavailable\nbetween checking its availability and attempting to register it.",
        "method": "GET",
        "parameters": {
            "Body": [],
            "Form": [],
            "Header": [],
            "Path": [],
            "Query": [
                {
                    "description": "The username to check the availability of.",
                    "name": "username",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "path": "/register/available",
        "rate_limited": true,
        "requires_auth": false,
        "responses": [
            {
                "additional_types": [],
                "description": "The username is available",
                "examples": {
                    "application/json": {
                        "available": true
                    }
                },
                "parameters": [
                    {
                        "description": "A flag to indicate that the username is available. This should always\nbe ``true`` when the server replies with 200 OK.",
                        "name": "available",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "required": false,
                "status": 200
            },
            {
                "additional_types": [],
                "description": "Part of the request was invalid or the username is not available. This may\ninclude one of the following error codes:\n\n* ``M_USER_IN_USE`` : The desired username is already taken.\n* ``M_INVALID_USERNAME`` : The desired username is not a valid user name.\n* ``M_EXCLUSIVE`` : The desired username is in the exclusive namespace\n  claimed by an application service.",
                "examples": {
                    "application/json": {
                        "errcode": "M_USER_IN_USE",
                        "error": "Desired user ID is already taken."
                    }
                },
                "parameters": [
                    {
                        "description": "An error code.",
                        "name": "errcode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A human-readable error message.",
                        "name": "error",
                        "required": false,
                        "type": "string"
                    }
                ],
                "required": false,
                "status": 400
            },
            {
                "additional_types": [],
                "description": "This request was rate-limited.",
                "examples": "",
                "parameters": [
                    {
                        "description": "The M_LIMIT_EXCEEDED error code",
                        "name": "errcode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A human-readable error message.",
                        "name": "error",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The amount of time in milliseconds the client should wait\nbefore trying the request again.",
                        "name": "retry_after_ms",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "required": false,
                "status": 429
            }
        ],
        "summary": "Checks to see if a username is available on the server."
    }
]