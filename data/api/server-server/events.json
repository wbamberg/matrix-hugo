{
    "__meta": {
        "base": "/_matrix/federation/v1",
        "endpoints": [
            {
                "deprecated": false,
                "desc": "Retrieves a snapshot of a room's state at a given event.",
                "example": {
                    "req": "GET /_matrix/federation/v1/state/%21abc123%3Amatrix.org?event_id=%24helloworld%3Amatrix.org HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/federation/v1/state/{roomId}",
                "rate_limited": false,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** The room ID to get state for.",
                            "key": "roomId",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "query": [
                        {
                            "desc": "**Required.** An event ID in the room to retrieve the state at.",
                            "key": "event_id",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The full set of authorization events that make up the state\nof the room, and their authorization events, recursively. Note that\nevents have a different format depending on the room version -\ncheck the `room version specification`_ for precise event formats.",
                                "key": "auth_chain",
                                "required": true,
                                "title": "[PDU]"
                            },
                            {
                                "desc": "**Required.** The fully resolved state of the room at the given event. Note that\nevents have a different format depending on the room version -\ncheck the `room version specification`_ for precise event formats.",
                                "key": "pdus",
                                "required": true,
                                "title": "[PDU]"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The fully resolved state for the room, prior to considering any state\nchanges induced by the requested event. Includes the authorization\nchain for the events.",
                        "example": "{\n  \"auth_chain\": [\n    {\n      \"type\": \"m.room.minimal_pdu\",\n      \"room_id\": \"!somewhere:example.org\",\n      \"content\": {\n        \"see_room_version_spec\": \"The event format changes depending on the room version.\"\n      }\n    }\n  ],\n  \"pdus\": [\n    {\n      \"type\": \"m.room.minimal_pdu\",\n      \"room_id\": \"!somewhere:example.org\",\n      \"content\": {\n        \"see_room_version_spec\": \"The event format changes depending on the room version.\"\n      }\n    }\n  ]\n}"
                    }
                ],
                "title": "Get all the state of a given room"
            },
            {
                "deprecated": false,
                "desc": "Retrieves a snapshot of a room's state at a given event, in the form of\nevent IDs. This performs the same function as calling ``/state/{roomId}``,\nhowever this returns just the event IDs rather than the full events.",
                "example": {
                    "req": "GET /_matrix/federation/v1/state_ids/%21abc123%3Amatrix.org?event_id=%24helloworld%3Amatrix.org HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/federation/v1/state_ids/{roomId}",
                "rate_limited": false,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** The room ID to get state for.",
                            "key": "roomId",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "query": [
                        {
                            "desc": "**Required.** An event ID in the room to retrieve the state at.",
                            "key": "event_id",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** The full set of authorization events that make up the state\nof the room, and their authorization events, recursively.",
                                "key": "auth_chain_ids",
                                "required": true,
                                "title": "[string]"
                            },
                            {
                                "desc": "**Required.** The fully resolved state of the room at the given event.",
                                "key": "pdu_ids",
                                "required": true,
                                "title": "[string]"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The fully resolved state for the room, prior to considering any state\nchanges induced by the requested event. Includes the authorization\nchain for the events.",
                        "example": "{\n  \"auth_chain_ids\": [\n    \"$an_event:example.org\"\n  ],\n  \"pdu_ids\": [\n    \"$an_event:example.org\"\n  ]\n}"
                    }
                ],
                "title": "Get all the state event IDs of a given room"
            },
            {
                "deprecated": false,
                "desc": "Retrieves a single event.",
                "example": {
                    "req": "GET /_matrix/federation/v1/event/%24abc123%3Amatrix.org HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/federation/v1/event/{eventId}",
                "rate_limited": false,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** The event ID to get.",
                            "key": "eventId",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        "Transaction",
                        null,
                        [
                            {
                                "desc": "**Required.** The ``server_name`` of the homeserver sending this transaction.",
                                "key": "origin",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** POSIX timestamp in milliseconds on originating homeserver when this\ntransaction started.",
                                "key": "origin_server_ts",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** A single PDU. Note that events have a different format depending on the room\nversion - check the `room version specification`_ for precise event formats.",
                                "key": "pdus",
                                "required": true,
                                "title": "[PDU]"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "A transaction containing a single PDU which is the event requested.",
                        "example": "{\n  \"origin\": \"example.org\",\n  \"origin_server_ts\": 1532991320875,\n  \"pdus\": [\n    {\n      \"type\": \"m.room.minimal_pdu\",\n      \"room_id\": \"!somewhere:example.org\",\n      \"content\": {\n        \"see_room_version_spec\": \"The event format changes depending on the room version.\"\n      }\n    }\n  ]\n}"
                    }
                ],
                "title": "Get a single event"
            }
        ],
        "group": "events_ss"
    },
    "basePath": "/_matrix/federation/v1",
    "host": "localhost:8448",
    "info": {
        "title": "Matrix Federation Events API",
        "version": "1.0.0"
    },
    "paths": {
        "/event/{eventId}": {
            "get": {
                "description": "Retrieves a single event.",
                "operationId": "getEvent",
                "parameters": [
                    {
                        "description": "The event ID to get.",
                        "in": "path",
                        "name": "eventId",
                        "required": true,
                        "type": "string",
                        "x-example": "$abc123:matrix.org"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A transaction containing a single PDU which is the event requested.",
                        "schema": {
                            "allOf": [
                                {
                                    "description": "Transaction",
                                    "example": {
                                        "origin": "matrix.org",
                                        "origin_server_ts": 1234567890,
                                        "pdus": [
                                            {
                                                "content": {
                                                    "see_room_version_spec": "The event format changes depending on the room version."
                                                },
                                                "room_id": "!somewhere:example.org",
                                                "type": "m.room.minimal_pdu"
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "origin": {
                                            "description": "The ``server_name`` of the homeserver sending this transaction.",
                                            "example": "example.org",
                                            "type": "string"
                                        },
                                        "origin_server_ts": {
                                            "description": "POSIX timestamp in milliseconds on originating homeserver when this\ntransaction started.",
                                            "example": 1532991320875,
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "pdus": {
                                            "description": "List of persistent updates to rooms. Must not include more than 50 PDUs. Note that\nevents have a different format depending on the room version - check the\n`room version specification`_ for precise event formats.",
                                            "items": {
                                                "description": "The `PDUs <#pdus>`_ contained in the transaction. The event format varies depending\non the room version - check the `room version specification`_ for precise event formats.",
                                                "example": {
                                                    "content": {
                                                        "see_room_version_spec": "The event format changes depending on the room version."
                                                    },
                                                    "room_id": "!somewhere:example.org",
                                                    "type": "m.room.minimal_pdu"
                                                },
                                                "properties": [],
                                                "title": "PDU",
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "origin",
                                        "origin_server_ts",
                                        "pdus"
                                    ],
                                    "title": "Transaction",
                                    "type": "object"
                                }
                            ],
                            "properties": {
                                "pdus": {
                                    "description": "A single PDU. Note that events have a different format depending on the room\nversion - check the `room version specification`_ for precise event formats.",
                                    "items": {
                                        "description": "The `PDUs <#pdus>`_ contained in the transaction. The event format varies depending\non the room version - check the `room version specification`_ for precise event formats.",
                                        "example": {
                                            "content": {
                                                "see_room_version_spec": "The event format changes depending on the room version."
                                            },
                                            "room_id": "!somewhere:example.org",
                                            "type": "m.room.minimal_pdu"
                                        },
                                        "properties": [],
                                        "title": "PDU",
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "origin",
                                "origin_server_ts",
                                "pdus"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "signedRequest": []
                    }
                ],
                "summary": "Get a single event"
            }
        },
        "/state/{roomId}": {
            "get": {
                "description": "Retrieves a snapshot of a room's state at a given event.",
                "operationId": "getRoomState",
                "parameters": [
                    {
                        "description": "The room ID to get state for.",
                        "in": "path",
                        "name": "roomId",
                        "required": true,
                        "type": "string",
                        "x-example": "!abc123:matrix.org"
                    },
                    {
                        "description": "An event ID in the room to retrieve the state at.",
                        "in": "query",
                        "name": "event_id",
                        "required": true,
                        "type": "string",
                        "x-example": "$helloworld:matrix.org"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The fully resolved state for the room, prior to considering any state\nchanges induced by the requested event. Includes the authorization\nchain for the events.",
                        "schema": {
                            "properties": {
                                "auth_chain": {
                                    "description": "The full set of authorization events that make up the state\nof the room, and their authorization events, recursively. Note that\nevents have a different format depending on the room version -\ncheck the `room version specification`_ for precise event formats.",
                                    "items": {
                                        "description": "The `PDUs <#pdus>`_ contained in the auth chain. The event format\nvaries depending on the room version - check the `room version specification`_\nfor precise event formats.",
                                        "example": {
                                            "content": {
                                                "see_room_version_spec": "The event format changes depending on the room version."
                                            },
                                            "room_id": "!somewhere:example.org",
                                            "type": "m.room.minimal_pdu"
                                        },
                                        "properties": [],
                                        "title": "PDU",
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "pdus": {
                                    "description": "The fully resolved state of the room at the given event. Note that\nevents have a different format depending on the room version -\ncheck the `room version specification`_ for precise event formats.",
                                    "items": {
                                        "description": "The `PDUs <#pdus>`_ for the fully resolved state of the room. The event format\nvaries depending on the room version - check the `room version specification`_\nfor precise event formats.",
                                        "example": {
                                            "content": {
                                                "see_room_version_spec": "The event format changes depending on the room version."
                                            },
                                            "room_id": "!somewhere:example.org",
                                            "type": "m.room.minimal_pdu"
                                        },
                                        "properties": [],
                                        "title": "PDU",
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "auth_chain",
                                "pdus"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "signedRequest": []
                    }
                ],
                "summary": "Get all the state of a given room"
            }
        },
        "/state_ids/{roomId}": {
            "get": {
                "description": "Retrieves a snapshot of a room's state at a given event, in the form of\nevent IDs. This performs the same function as calling ``/state/{roomId}``,\nhowever this returns just the event IDs rather than the full events.",
                "operationId": "getRoomStateIds",
                "parameters": [
                    {
                        "description": "The room ID to get state for.",
                        "in": "path",
                        "name": "roomId",
                        "required": true,
                        "type": "string",
                        "x-example": "!abc123:matrix.org"
                    },
                    {
                        "description": "An event ID in the room to retrieve the state at.",
                        "in": "query",
                        "name": "event_id",
                        "required": true,
                        "type": "string",
                        "x-example": "$helloworld:matrix.org"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The fully resolved state for the room, prior to considering any state\nchanges induced by the requested event. Includes the authorization\nchain for the events.",
                        "schema": {
                            "properties": {
                                "auth_chain_ids": {
                                    "description": "The full set of authorization events that make up the state\nof the room, and their authorization events, recursively.",
                                    "example": [
                                        "$an_event:example.org"
                                    ],
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "pdu_ids": {
                                    "description": "The fully resolved state of the room at the given event.",
                                    "example": [
                                        "$an_event:example.org"
                                    ],
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "auth_chain_ids",
                                "pdu_ids"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "signedRequest": []
                    }
                ],
                "summary": "Get all the state event IDs of a given room"
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "signedRequest": {
            "description": "The ``Authorization`` header defined in the `Authentication`_ section.",
            "in": "header",
            "name": "Authorization",
            "type": "apiKey"
        }
    },
    "swagger": "2.0"
}