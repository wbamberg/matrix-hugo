{
    "__meta": {
        "base": "/_matrix/federation/v1",
        "endpoints": [
            {
                "deprecated": false,
                "desc": "Gets all the public rooms for the homeserver. This should not return\nrooms that are listed on another homeserver's directory, just those\nlisted on the receiving homeserver's directory.",
                "example": {
                    "req": "GET /_matrix/federation/v1/publicRooms?limit=10&since=GetMoreRoomsTokenHere&include_all_networks=False&third_party_instance_id=irc HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/federation/v1/publicRooms",
                "rate_limited": false,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "query": [
                        {
                            "desc": "The maximum number of rooms to return. Defaults to 0 (no limit).",
                            "key": "limit",
                            "required": false,
                            "title": "integer"
                        },
                        {
                            "desc": "A pagination token from a previous call to this endpoint to fetch more\nrooms.",
                            "key": "since",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "Whether or not to include all networks/protocols defined by application\nservices on the homeserver. Defaults to false.",
                            "key": "include_all_networks",
                            "required": false,
                            "title": "boolean"
                        },
                        {
                            "desc": "The specific third party network/protocol to request from the homeserver.\nCan only be used if ``include_all_networks`` is false.",
                            "key": "third_party_instance_id",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** A paginated chunk of public rooms.",
                                "key": "chunk",
                                "required": true,
                                "title": "[PublicRoomsChunk]"
                            },
                            {
                                "desc": "A pagination token for the response. The absence of this token\nmeans there are no more results to fetch and the client should\nstop paginating.",
                                "key": "next_batch",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "A pagination token that allows fetching previous results. The\nabsence of this token means there are no results before this\nbatch, i.e. this is the first batch.",
                                "key": "prev_batch",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "An estimate on the total number of public rooms, if the\nserver has an estimate.",
                                "key": "total_room_count_estimate",
                                "required": false,
                                "title": "integer"
                            }
                        ]
                    ],
                    [
                        "PublicRoomsChunk",
                        null,
                        [
                            {
                                "desc": "Aliases of the room. May be empty.",
                                "key": "aliases",
                                "required": false,
                                "title": "[string]"
                            },
                            {
                                "desc": "The canonical alias of the room, if any.",
                                "key": "canonical_alias",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "The name of the room, if any.",
                                "key": "name",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** The number of members joined to the room.",
                                "key": "num_joined_members",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** The ID of the room.",
                                "key": "room_id",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "The topic of the room, if any.",
                                "key": "topic",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** Whether the room may be viewed by guest users without joining.",
                                "key": "world_readable",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "**Required.** Whether guest users may join the room and participate in it.\nIf they can, they will be subject to ordinary power level\nrules like any other user.",
                                "key": "guest_can_join",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "The URL for the room's avatar, if one is set.",
                                "key": "avatar_url",
                                "required": false,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The public room list for the homeserver.",
                        "example": "{\n  \"chunk\": [\n    {\n      \"aliases\": [\n        \"#murrays:cheese.bar\"\n      ],\n      \"avatar_url\": \"mxc://bleeker.street/CHEDDARandBRIE\",\n      \"guest_can_join\": false,\n      \"name\": \"CHEESE\",\n      \"num_joined_members\": 37,\n      \"room_id\": \"!ol19s:bleecker.street\",\n      \"topic\": \"Tasty tasty cheese\",\n      \"world_readable\": true\n    }\n  ],\n  \"next_batch\": \"p190q\",\n  \"prev_batch\": \"p1902\",\n  \"total_room_count_estimate\": 115\n}"
                    }
                ],
                "title": "Get all the public rooms for a homeserver"
            },
            {
                "deprecated": false,
                "desc": "Lists the public rooms on the server, with optional filter.\n\nThis API returns paginated responses. The rooms are ordered by the number\nof joined members, with the largest rooms first.\n\nNote that this endpoint receives and returns the same format that is seen\nin the Client-Server API's ``POST /publicRooms`` endpoint.",
                "example": {
                    "req": "POST /_matrix/federation/v1/publicRooms HTTP/1.1\nContent-Type: application/json\n\n{\n  \"limit\": 10,\n  \"filter\": {\n    \"generic_search_term\": \"foo\"\n  },\n  \"include_all_networks\": false,\n  \"third_party_instance_id\": \"irc\"\n}"
                },
                "method": "POST",
                "path": "/_matrix/federation/v1/publicRooms",
                "rate_limited": false,
                "req_body_tables": [
                    [
                        "Filter",
                        null,
                        [
                            {
                                "desc": "A string to search for in the room metadata, e.g. name,\ntopic, canonical alias etc. (Optional).",
                                "key": "generic_search_term",
                                "required": false,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "Limit the number of results returned.",
                            "key": "limit",
                            "required": false,
                            "title": "integer"
                        },
                        {
                            "desc": "A pagination token from a previous request, allowing servers\nto get the next (or previous) batch of rooms.  The direction\nof pagination is specified solely by which token is supplied,\nrather than via an explicit flag.",
                            "key": "since",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "Filter to apply to the results.",
                            "key": "filter",
                            "required": false,
                            "title": "Filter"
                        },
                        {
                            "desc": "Whether or not to include all known networks/protocols from\napplication services on the homeserver. Defaults to false.",
                            "key": "include_all_networks",
                            "required": false,
                            "title": "boolean"
                        },
                        {
                            "desc": "The specific third party network/protocol to request from the\nhomeserver. Can only be used if ``include_all_networks`` is false.",
                            "key": "third_party_instance_id",
                            "required": false,
                            "title": "string"
                        }
                    ]
                },
                "requires_auth": true,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "**Required.** A paginated chunk of public rooms.",
                                "key": "chunk",
                                "required": true,
                                "title": "[PublicRoomsChunk]"
                            },
                            {
                                "desc": "A pagination token for the response. The absence of this token\nmeans there are no more results to fetch and the client should\nstop paginating.",
                                "key": "next_batch",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "A pagination token that allows fetching previous results. The\nabsence of this token means there are no results before this\nbatch, i.e. this is the first batch.",
                                "key": "prev_batch",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "An estimate on the total number of public rooms, if the\nserver has an estimate.",
                                "key": "total_room_count_estimate",
                                "required": false,
                                "title": "integer"
                            }
                        ]
                    ],
                    [
                        "PublicRoomsChunk",
                        null,
                        [
                            {
                                "desc": "Aliases of the room. May be empty.",
                                "key": "aliases",
                                "required": false,
                                "title": "[string]"
                            },
                            {
                                "desc": "The canonical alias of the room, if any.",
                                "key": "canonical_alias",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "The name of the room, if any.",
                                "key": "name",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** The number of members joined to the room.",
                                "key": "num_joined_members",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** The ID of the room.",
                                "key": "room_id",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "The topic of the room, if any.",
                                "key": "topic",
                                "required": false,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** Whether the room may be viewed by guest users without joining.",
                                "key": "world_readable",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "**Required.** Whether guest users may join the room and participate in it.\nIf they can, they will be subject to ordinary power level\nrules like any other user.",
                                "key": "guest_can_join",
                                "required": true,
                                "title": "boolean"
                            },
                            {
                                "desc": "The URL for the room's avatar, if one is set.",
                                "key": "avatar_url",
                                "required": false,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "A list of the rooms on the server.",
                        "example": "{\n  \"chunk\": [\n    {\n      \"aliases\": [\n        \"#murrays:cheese.bar\"\n      ],\n      \"avatar_url\": \"mxc://bleeker.street/CHEDDARandBRIE\",\n      \"guest_can_join\": false,\n      \"name\": \"CHEESE\",\n      \"num_joined_members\": 37,\n      \"room_id\": \"!ol19s:bleecker.street\",\n      \"topic\": \"Tasty tasty cheese\",\n      \"world_readable\": true\n    }\n  ],\n  \"next_batch\": \"p190q\",\n  \"prev_batch\": \"p1902\",\n  \"total_room_count_estimate\": 115\n}"
                    }
                ],
                "title": "Gets the public rooms on the server with optional filter."
            }
        ],
        "group": "public_rooms_ss"
    },
    "basePath": "/_matrix/federation/v1",
    "host": "localhost:8448",
    "info": {
        "title": "Matrix Federation Public Rooms API",
        "version": "1.0.0"
    },
    "paths": {
        "/publicRooms": {
            "get": {
                "description": "Gets all the public rooms for the homeserver. This should not return\nrooms that are listed on another homeserver's directory, just those\nlisted on the receiving homeserver's directory.",
                "operationId": "getPublicRooms",
                "parameters": [
                    {
                        "description": "The maximum number of rooms to return. Defaults to 0 (no limit).",
                        "in": "query",
                        "name": "limit",
                        "type": "integer",
                        "x-example": 10
                    },
                    {
                        "description": "A pagination token from a previous call to this endpoint to fetch more\nrooms.",
                        "in": "query",
                        "name": "since",
                        "type": "string",
                        "x-example": "GetMoreRoomsTokenHere"
                    },
                    {
                        "description": "Whether or not to include all networks/protocols defined by application\nservices on the homeserver. Defaults to false.",
                        "in": "query",
                        "name": "include_all_networks",
                        "type": "boolean",
                        "x-example": false
                    },
                    {
                        "description": "The specific third party network/protocol to request from the homeserver.\nCan only be used if ``include_all_networks`` is false.",
                        "in": "query",
                        "name": "third_party_instance_id",
                        "type": "string",
                        "x-example": "irc"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The public room list for the homeserver.",
                        "schema": {
                            "description": "A list of the rooms on the server.",
                            "example": {
                                "chunk": [
                                    {
                                        "aliases": [
                                            "#murrays:cheese.bar"
                                        ],
                                        "avatar_url": "mxc://bleeker.street/CHEDDARandBRIE",
                                        "guest_can_join": false,
                                        "name": "CHEESE",
                                        "num_joined_members": 37,
                                        "room_id": "!ol19s:bleecker.street",
                                        "topic": "Tasty tasty cheese",
                                        "world_readable": true
                                    }
                                ],
                                "next_batch": "p190q",
                                "prev_batch": "p1902",
                                "total_room_count_estimate": 115
                            },
                            "properties": {
                                "chunk": {
                                    "description": "A paginated chunk of public rooms.",
                                    "items": {
                                        "properties": {
                                            "aliases": {
                                                "description": "Aliases of the room. May be empty.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "avatar_url": {
                                                "description": "The URL for the room's avatar, if one is set.",
                                                "type": "string"
                                            },
                                            "canonical_alias": {
                                                "description": "The canonical alias of the room, if any.",
                                                "type": "string"
                                            },
                                            "guest_can_join": {
                                                "description": "Whether guest users may join the room and participate in it.\nIf they can, they will be subject to ordinary power level\nrules like any other user.",
                                                "type": "boolean"
                                            },
                                            "name": {
                                                "description": "The name of the room, if any.",
                                                "type": "string"
                                            },
                                            "num_joined_members": {
                                                "description": "The number of members joined to the room.",
                                                "type": "integer"
                                            },
                                            "room_id": {
                                                "description": "The ID of the room.",
                                                "type": "string"
                                            },
                                            "topic": {
                                                "description": "The topic of the room, if any.",
                                                "type": "string"
                                            },
                                            "world_readable": {
                                                "description": "Whether the room may be viewed by guest users without joining.",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "room_id",
                                            "num_joined_members",
                                            "world_readable",
                                            "guest_can_join"
                                        ],
                                        "title": "PublicRoomsChunk",
                                        "type": "object"
                                    },
                                    "title": "PublicRoomsChunks",
                                    "type": "array"
                                },
                                "next_batch": {
                                    "description": "A pagination token for the response. The absence of this token\nmeans there are no more results to fetch and the client should\nstop paginating.",
                                    "type": "string"
                                },
                                "prev_batch": {
                                    "description": "A pagination token that allows fetching previous results. The\nabsence of this token means there are no results before this\nbatch, i.e. this is the first batch.",
                                    "type": "string"
                                },
                                "total_room_count_estimate": {
                                    "description": "An estimate on the total number of public rooms, if the\nserver has an estimate.",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "chunk"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "signedRequest": []
                    }
                ],
                "summary": "Get all the public rooms for a homeserver"
            },
            "post": {
                "description": "Lists the public rooms on the server, with optional filter.\n\nThis API returns paginated responses. The rooms are ordered by the number\nof joined members, with the largest rooms first.\n\nNote that this endpoint receives and returns the same format that is seen\nin the Client-Server API's ``POST /publicRooms`` endpoint.",
                "operationId": "queryPublicRooms",
                "parameters": [
                    {
                        "description": "Options for which rooms to return, or empty object to use defaults.",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "example": {
                                "filter": {
                                    "generic_search_term": "foo"
                                },
                                "include_all_networks": false,
                                "limit": 10,
                                "third_party_instance_id": "irc"
                            },
                            "properties": {
                                "filter": {
                                    "description": "Filter to apply to the results.",
                                    "properties": {
                                        "generic_search_term": {
                                            "description": "A string to search for in the room metadata, e.g. name,\ntopic, canonical alias etc. (Optional).",
                                            "type": "string"
                                        }
                                    },
                                    "title": "Filter",
                                    "type": "object"
                                },
                                "include_all_networks": {
                                    "description": "Whether or not to include all known networks/protocols from\napplication services on the homeserver. Defaults to false.",
                                    "example": false,
                                    "type": "boolean"
                                },
                                "limit": {
                                    "description": "Limit the number of results returned.",
                                    "type": "integer"
                                },
                                "since": {
                                    "description": "A pagination token from a previous request, allowing servers\nto get the next (or previous) batch of rooms.  The direction\nof pagination is specified solely by which token is supplied,\nrather than via an explicit flag.",
                                    "type": "string"
                                },
                                "third_party_instance_id": {
                                    "description": "The specific third party network/protocol to request from the\nhomeserver. Can only be used if ``include_all_networks`` is false.",
                                    "example": "irc",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of the rooms on the server.",
                        "examples": {
                            "application/json": {
                                "chunk": [
                                    {
                                        "aliases": [
                                            "#murrays:cheese.bar"
                                        ],
                                        "avatar_url": "mxc://bleeker.street/CHEDDARandBRIE",
                                        "guest_can_join": false,
                                        "name": "CHEESE",
                                        "num_joined_members": 37,
                                        "room_id": "!ol19s:bleecker.street",
                                        "topic": "Tasty tasty cheese",
                                        "world_readable": true
                                    }
                                ],
                                "next_batch": "p190q",
                                "prev_batch": "p1902",
                                "total_room_count_estimate": 115
                            }
                        },
                        "schema": {
                            "description": "A list of the rooms on the server.",
                            "properties": {
                                "chunk": {
                                    "description": "A paginated chunk of public rooms.",
                                    "items": {
                                        "properties": {
                                            "aliases": {
                                                "description": "Aliases of the room. May be empty.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "avatar_url": {
                                                "description": "The URL for the room's avatar, if one is set.",
                                                "type": "string"
                                            },
                                            "canonical_alias": {
                                                "description": "The canonical alias of the room, if any.",
                                                "type": "string"
                                            },
                                            "guest_can_join": {
                                                "description": "Whether guest users may join the room and participate in it.\nIf they can, they will be subject to ordinary power level\nrules like any other user.",
                                                "type": "boolean"
                                            },
                                            "name": {
                                                "description": "The name of the room, if any.",
                                                "type": "string"
                                            },
                                            "num_joined_members": {
                                                "description": "The number of members joined to the room.",
                                                "type": "integer"
                                            },
                                            "room_id": {
                                                "description": "The ID of the room.",
                                                "type": "string"
                                            },
                                            "topic": {
                                                "description": "The topic of the room, if any.",
                                                "type": "string"
                                            },
                                            "world_readable": {
                                                "description": "Whether the room may be viewed by guest users without joining.",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "room_id",
                                            "num_joined_members",
                                            "world_readable",
                                            "guest_can_join"
                                        ],
                                        "title": "PublicRoomsChunk",
                                        "type": "object"
                                    },
                                    "title": "PublicRoomsChunks",
                                    "type": "array"
                                },
                                "next_batch": {
                                    "description": "A pagination token for the response. The absence of this token\nmeans there are no more results to fetch and the client should\nstop paginating.",
                                    "type": "string"
                                },
                                "prev_batch": {
                                    "description": "A pagination token that allows fetching previous results. The\nabsence of this token means there are no results before this\nbatch, i.e. this is the first batch.",
                                    "type": "string"
                                },
                                "total_room_count_estimate": {
                                    "description": "An estimate on the total number of public rooms, if the\nserver has an estimate.",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "chunk"
                            ],
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "signedRequest": []
                    }
                ],
                "summary": "Gets the public rooms on the server with optional filter."
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "signedRequest": {
            "description": "The ``Authorization`` header defined in the `Authentication`_ section.",
            "in": "header",
            "name": "Authorization",
            "type": "apiKey"
        }
    },
    "swagger": "2.0"
}