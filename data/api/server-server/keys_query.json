{
    "__meta": {
        "base": "/_matrix/key/v2",
        "endpoints": [
            {
                "deprecated": false,
                "desc": "Query for another server's keys. The receiving (notary) server must\nsign the keys returned by the queried server.",
                "example": {
                    "req": "GET /_matrix/key/v2/query/matrix.org/ed25519%3Aabc123?minimum_valid_until_ts=1234567890 HTTP/1.1\n\n"
                },
                "method": "GET",
                "path": "/_matrix/key/v2/query/{serverName}/{keyId}",
                "rate_limited": false,
                "req_body_tables": [],
                "req_param_by_loc": {
                    "path": [
                        {
                            "desc": "**Required.** The server's DNS name to query",
                            "key": "serverName",
                            "required": false,
                            "title": "string"
                        },
                        {
                            "desc": "**Deprecated**. Servers should not use this parameter and instead\nopt to return all keys, not just the requested one. The key ID to\nlook up.\n\nWhen excluded, the trailing slash on this endpoint is optional.",
                            "key": "keyId",
                            "required": false,
                            "title": "string"
                        }
                    ],
                    "query": [
                        {
                            "desc": "A millisecond POSIX timestamp in milliseconds indicating when the returned\ncertificates will need to be valid until to be useful to the requesting server.\n\nIf not supplied, the current time as determined by the notary server is used.",
                            "key": "minimum_valid_until_ts",
                            "required": false,
                            "title": "integer"
                        }
                    ]
                },
                "requires_auth": false,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "The queried server's keys, signed by the notary server.",
                                "key": "server_keys",
                                "required": false,
                                "title": "[Server Keys]"
                            }
                        ]
                    ],
                    [
                        "Server Keys",
                        null,
                        [
                            {
                                "desc": "**Required.** DNS name of the homeserver.",
                                "key": "server_name",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** Public keys of the homeserver for verifying digital signatures.\n\nThe object's key is the algorithm and version combined (``ed25519`` being the\nalgorithm and ``abc123`` being the version in the example below). Together,\nthis forms the Key ID. The version must have characters matching the regular\nexpression ``[a-zA-Z0-9_]``.",
                                "key": "verify_keys",
                                "required": true,
                                "title": "{string: Verify Key}"
                            },
                            {
                                "desc": "The public keys that the server used to use and when it stopped using them.\n\nThe object's key is the algorithm and version combined (``ed25519`` being the\nalgorithm and ``0ldK3y`` being the version in the example below). Together,\nthis forms the Key ID. The version must have characters matching the regular\nexpression ``[a-zA-Z0-9_]``.",
                                "key": "old_verify_keys",
                                "required": false,
                                "title": "{string: Old Verify Key}"
                            },
                            {
                                "desc": "Digital signatures for this object signed using the ``verify_keys``.\n\nThe signature is calculated using the process described at `Signing\nJSON`_.",
                                "key": "signatures",
                                "required": false,
                                "title": "Signatures"
                            },
                            {
                                "desc": "POSIX timestamp when the list of valid keys should be refreshed. This field MUST\nbe ignored in room versions 1, 2, 3, and 4. Keys used beyond this timestamp MUST\nbe considered invalid, depending on the `room version specification`_.\n\nServers MUST use the lesser of this field and 7 days into the future when\ndetermining if a key is valid. This is to avoid a situation where an attacker\npublishes a key which is valid for a significant amount of time without a way\nfor the homeserver owner to revoke it.",
                                "key": "valid_until_ts",
                                "required": false,
                                "title": "integer"
                            }
                        ]
                    ],
                    [
                        "Verify Key",
                        null,
                        [
                            {
                                "desc": "**Required.** The `Unpadded Base64`_ encoded key.",
                                "key": "key",
                                "required": true,
                                "title": "string"
                            }
                        ]
                    ],
                    [
                        "Old Verify Key",
                        null,
                        [
                            {
                                "desc": "**Required.** POSIX timestamp in milliseconds for when this key expired.",
                                "key": "expired_ts",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** The `Unpadded Base64`_ encoded key.",
                                "key": "key",
                                "required": true,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The keys for the server, or an empty array if the server could not be reached\nand no cached keys were available.",
                        "example": "{\n  \"server_keys\": [\n    {\n      \"server_name\": \"example.org\",\n      \"verify_keys\": {\n        \"ed25519:abc123\": {\n          \"key\": \"VGhpcyBzaG91bGQgYmUgYSByZWFsIGVkMjU1MTkgcGF5bG9hZA\"\n        }\n      },\n      \"old_verify_keys\": {\n        \"ed25519:0ldk3y\": {\n          \"expired_ts\": 1532645052628,\n          \"key\": \"VGhpcyBzaG91bGQgYmUgeW91ciBvbGQga2V5J3MgZWQyNTUxOSBwYXlsb2FkLg\"\n        }\n      },\n      \"signatures\": {\n        \"example.org\": {\n          \"ed25519:abc123\": \"VGhpcyBzaG91bGQgYWN0dWFsbHkgYmUgYSBzaWduYXR1cmU\"\n        },\n        \"notary.server.com\": {\n          \"ed25519:010203\": \"VGhpcyBpcyBhbm90aGVyIHNpZ25hdHVyZQ\"\n        }\n      },\n      \"valid_until_ts\": 1652262000000\n    }\n  ]\n}"
                    }
                ],
                "title": "Query for another server's keys"
            },
            {
                "deprecated": false,
                "desc": "Query for keys from multiple servers in a batch format. The receiving (notary)\nserver must sign the keys returned by the queried servers.",
                "example": {
                    "req": "POST /_matrix/key/v2/query HTTP/1.1\nContent-Type: application/json\n\n{\n  \"server_keys\": {\n    \"example.org\": {\n      \"ed25519:abc123\": {\n        \"minimum_valid_until_ts\": 1234567890\n      }\n    }\n  }\n}"
                },
                "method": "POST",
                "path": "/_matrix/key/v2/query",
                "rate_limited": false,
                "req_body_tables": [
                    [
                        "Query Criteria",
                        null,
                        [
                            {
                                "desc": "A millisecond POSIX timestamp in milliseconds indicating when\nthe returned certificates will need to be valid until to be\nuseful to the requesting server.\n\nIf not supplied, the current time as determined by the notary\nserver is used.",
                                "key": "minimum_valid_until_ts",
                                "required": false,
                                "title": "integer"
                            }
                        ]
                    ]
                ],
                "req_param_by_loc": {
                    "JSON body": [
                        {
                            "desc": "**Required.** The query criteria. The outer ``string`` key on the object is the\nserver name (eg: ``matrix.org``). The inner ``string`` key is the\nKey ID to query for the particular server. If no key IDs are given\nto be queried, the notary server should query for all keys. If no\nservers are given, the notary server must return an empty ``server_keys``\narray in the response.\n\nThe notary server may return multiple keys regardless of the Key IDs\ngiven.",
                            "key": "server_keys",
                            "required": true,
                            "title": "{string: {string: Query Criteria}}"
                        }
                    ]
                },
                "requires_auth": false,
                "res_headers": null,
                "res_tables": [
                    [
                        null,
                        null,
                        [
                            {
                                "desc": "The queried server's keys, signed by the notary server.",
                                "key": "server_keys",
                                "required": false,
                                "title": "[Server Keys]"
                            }
                        ]
                    ],
                    [
                        "Server Keys",
                        null,
                        [
                            {
                                "desc": "**Required.** DNS name of the homeserver.",
                                "key": "server_name",
                                "required": true,
                                "title": "string"
                            },
                            {
                                "desc": "**Required.** Public keys of the homeserver for verifying digital signatures.\n\nThe object's key is the algorithm and version combined (``ed25519`` being the\nalgorithm and ``abc123`` being the version in the example below). Together,\nthis forms the Key ID. The version must have characters matching the regular\nexpression ``[a-zA-Z0-9_]``.",
                                "key": "verify_keys",
                                "required": true,
                                "title": "{string: Verify Key}"
                            },
                            {
                                "desc": "The public keys that the server used to use and when it stopped using them.\n\nThe object's key is the algorithm and version combined (``ed25519`` being the\nalgorithm and ``0ldK3y`` being the version in the example below). Together,\nthis forms the Key ID. The version must have characters matching the regular\nexpression ``[a-zA-Z0-9_]``.",
                                "key": "old_verify_keys",
                                "required": false,
                                "title": "{string: Old Verify Key}"
                            },
                            {
                                "desc": "Digital signatures for this object signed using the ``verify_keys``.\n\nThe signature is calculated using the process described at `Signing\nJSON`_.",
                                "key": "signatures",
                                "required": false,
                                "title": "Signatures"
                            },
                            {
                                "desc": "POSIX timestamp when the list of valid keys should be refreshed. This field MUST\nbe ignored in room versions 1, 2, 3, and 4. Keys used beyond this timestamp MUST\nbe considered invalid, depending on the `room version specification`_.\n\nServers MUST use the lesser of this field and 7 days into the future when\ndetermining if a key is valid. This is to avoid a situation where an attacker\npublishes a key which is valid for a significant amount of time without a way\nfor the homeserver owner to revoke it.",
                                "key": "valid_until_ts",
                                "required": false,
                                "title": "integer"
                            }
                        ]
                    ],
                    [
                        "Verify Key",
                        null,
                        [
                            {
                                "desc": "**Required.** The `Unpadded Base64`_ encoded key.",
                                "key": "key",
                                "required": true,
                                "title": "string"
                            }
                        ]
                    ],
                    [
                        "Old Verify Key",
                        null,
                        [
                            {
                                "desc": "**Required.** POSIX timestamp in milliseconds for when this key expired.",
                                "key": "expired_ts",
                                "required": true,
                                "title": "integer"
                            },
                            {
                                "desc": "**Required.** The `Unpadded Base64`_ encoded key.",
                                "key": "key",
                                "required": true,
                                "title": "string"
                            }
                        ]
                    ]
                ],
                "responses": [
                    {
                        "code": 200,
                        "description": "The keys for the queried servers, signed by the notary server. Servers which\nare offline and have no cached keys will not be included in the result. This\nmay result in an empty array.",
                        "example": "{\n  \"server_keys\": [\n    {\n      \"server_name\": \"example.org\",\n      \"verify_keys\": {\n        \"ed25519:abc123\": {\n          \"key\": \"VGhpcyBzaG91bGQgYmUgYSByZWFsIGVkMjU1MTkgcGF5bG9hZA\"\n        }\n      },\n      \"old_verify_keys\": {\n        \"ed25519:0ldk3y\": {\n          \"expired_ts\": 1532645052628,\n          \"key\": \"VGhpcyBzaG91bGQgYmUgeW91ciBvbGQga2V5J3MgZWQyNTUxOSBwYXlsb2FkLg\"\n        }\n      },\n      \"signatures\": {\n        \"example.org\": {\n          \"ed25519:abc123\": \"VGhpcyBzaG91bGQgYWN0dWFsbHkgYmUgYSBzaWduYXR1cmU\"\n        },\n        \"notary.server.com\": {\n          \"ed25519:010203\": \"VGhpcyBpcyBhbm90aGVyIHNpZ25hdHVyZQ\"\n        }\n      },\n      \"valid_until_ts\": 1652262000000\n    }\n  ]\n}"
                    }
                ],
                "title": "Query for several server's keys"
            }
        ],
        "group": "keys_query_ss"
    },
    "basePath": "/_matrix/key/v2",
    "consumes": [
        "application/json"
    ],
    "host": "localhost:8448",
    "info": {
        "title": "Matrix Federation Key Exchange API",
        "version": "1.0.0"
    },
    "paths": {
        "/query": {
            "post": {
                "description": "Query for keys from multiple servers in a batch format. The receiving (notary)\nserver must sign the keys returned by the queried servers.",
                "operationId": "bulkPerspectivesKeyQuery",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "example": {
                                "server_keys": {
                                    "example.org": {
                                        "ed25519:abc123": {
                                            "minimum_valid_until_ts": 1234567890
                                        }
                                    }
                                }
                            },
                            "properties": {
                                "server_keys": {
                                    "additionalProperties": {
                                        "additionalProperties": {
                                            "description": "The server key IDs to query.",
                                            "properties": {
                                                "minimum_valid_until_ts": {
                                                    "description": "A millisecond POSIX timestamp in milliseconds indicating when\nthe returned certificates will need to be valid until to be\nuseful to the requesting server.\n\nIf not supplied, the current time as determined by the notary\nserver is used.",
                                                    "example": 1234567890,
                                                    "format": "int64",
                                                    "type": "integer"
                                                }
                                            },
                                            "title": "Query Criteria",
                                            "type": "object"
                                        },
                                        "description": "The server names to query.",
                                        "name": "ServerName",
                                        "type": "object"
                                    },
                                    "description": "The query criteria. The outer ``string`` key on the object is the\nserver name (eg: ``matrix.org``). The inner ``string`` key is the\nKey ID to query for the particular server. If no key IDs are given\nto be queried, the notary server should query for all keys. If no\nservers are given, the notary server must return an empty ``server_keys``\narray in the response.\n\nThe notary server may return multiple keys regardless of the Key IDs\ngiven.",
                                    "type": "object"
                                }
                            },
                            "required": [
                                "server_keys"
                            ],
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The keys for the queried servers, signed by the notary server. Servers which\nare offline and have no cached keys will not be included in the result. This\nmay result in an empty array.",
                        "schema": {
                            "description": "Server keys",
                            "example": {
                                "server_keys": [
                                    {
                                        "old_verify_keys": {
                                            "ed25519:0ldk3y": {
                                                "expired_ts": 1532645052628,
                                                "key": "VGhpcyBzaG91bGQgYmUgeW91ciBvbGQga2V5J3MgZWQyNTUxOSBwYXlsb2FkLg"
                                            }
                                        },
                                        "server_name": "example.org",
                                        "signatures": {
                                            "example.org": {
                                                "ed25519:abc123": "VGhpcyBzaG91bGQgYWN0dWFsbHkgYmUgYSBzaWduYXR1cmU"
                                            },
                                            "notary.server.com": {
                                                "ed25519:010203": "VGhpcyBpcyBhbm90aGVyIHNpZ25hdHVyZQ"
                                            }
                                        },
                                        "valid_until_ts": 1652262000000,
                                        "verify_keys": {
                                            "ed25519:abc123": {
                                                "key": "VGhpcyBzaG91bGQgYmUgYSByZWFsIGVkMjU1MTkgcGF5bG9hZA"
                                            }
                                        }
                                    }
                                ]
                            },
                            "properties": {
                                "server_keys": {
                                    "description": "The queried server's keys, signed by the notary server.",
                                    "items": {
                                        "description": "Server keys",
                                        "example": {
                                            "old_verify_keys": {
                                                "ed25519:0ldk3y": {
                                                    "expired_ts": 1532645052628,
                                                    "key": "VGhpcyBzaG91bGQgYmUgeW91ciBvbGQga2V5J3MgZWQyNTUxOSBwYXlsb2FkLg"
                                                }
                                            },
                                            "server_name": "example.org",
                                            "signatures": {
                                                "example.org": {
                                                    "ed25519:auto2": "VGhpcyBzaG91bGQgYWN0dWFsbHkgYmUgYSBzaWduYXR1cmU"
                                                }
                                            },
                                            "valid_until_ts": 1652262000000,
                                            "verify_keys": {
                                                "ed25519:abc123": {
                                                    "key": "VGhpcyBzaG91bGQgYmUgYSByZWFsIGVkMjU1MTkgcGF5bG9hZA"
                                                }
                                            }
                                        },
                                        "properties": {
                                            "old_verify_keys": {
                                                "additionalProperties": {
                                                    "example": {
                                                        "ed25519:0ldK3y": {
                                                            "expired_ts": 1532645052628,
                                                            "key": "VGhpcyBzaG91bGQgYmUgeW91ciBvbGQga2V5J3MgZWQyNTUxOSBwYXlsb2FkLg"
                                                        }
                                                    },
                                                    "properties": {
                                                        "expired_ts": {
                                                            "description": "POSIX timestamp in milliseconds for when this key expired.",
                                                            "example": 1532645052628,
                                                            "format": "int64",
                                                            "type": "integer"
                                                        },
                                                        "key": {
                                                            "description": "The `Unpadded Base64`_ encoded key.",
                                                            "example": "VGhpcyBzaG91bGQgYmUgeW91ciBvbGQga2V5J3MgZWQyNTUxOSBwYXlsb2FkLg",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "expired_ts",
                                                        "key"
                                                    ],
                                                    "title": "Old Verify Key",
                                                    "type": "object"
                                                },
                                                "description": "The public keys that the server used to use and when it stopped using them.\n\nThe object's key is the algorithm and version combined (``ed25519`` being the\nalgorithm and ``0ldK3y`` being the version in the example below). Together,\nthis forms the Key ID. The version must have characters matching the regular\nexpression ``[a-zA-Z0-9_]``.",
                                                "type": "object"
                                            },
                                            "server_name": {
                                                "description": "DNS name of the homeserver.",
                                                "example": "example.org",
                                                "type": "string"
                                            },
                                            "signatures": {
                                                "additionalProperties": {
                                                    "additionalProperties": {
                                                        "type": "string"
                                                    },
                                                    "type": "object"
                                                },
                                                "description": "Digital signatures for this object signed using the ``verify_keys``.\n\nThe signature is calculated using the process described at `Signing\nJSON`_.",
                                                "title": "Signatures",
                                                "type": "object"
                                            },
                                            "valid_until_ts": {
                                                "description": "POSIX timestamp when the list of valid keys should be refreshed. This field MUST\nbe ignored in room versions 1, 2, 3, and 4. Keys used beyond this timestamp MUST\nbe considered invalid, depending on the `room version specification`_.\n\nServers MUST use the lesser of this field and 7 days into the future when\ndetermining if a key is valid. This is to avoid a situation where an attacker\npublishes a key which is valid for a significant amount of time without a way\nfor the homeserver owner to revoke it.",
                                                "example": 1052262000000,
                                                "format": "int64",
                                                "type": "integer"
                                            },
                                            "verify_keys": {
                                                "additionalProperties": {
                                                    "example": {
                                                        "ed25519:abc123": {
                                                            "key": "VGhpcyBzaG91bGQgYmUgYSByZWFsIGVkMjU1MTkgcGF5bG9hZA"
                                                        }
                                                    },
                                                    "properties": {
                                                        "key": {
                                                            "description": "The `Unpadded Base64`_ encoded key.",
                                                            "example": "VGhpcyBzaG91bGQgYmUgYSByZWFsIGVkMjU1MTkgcGF5bG9hZA",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "key"
                                                    ],
                                                    "title": "Verify Key",
                                                    "type": "object"
                                                },
                                                "description": "Public keys of the homeserver for verifying digital signatures.\n\nThe object's key is the algorithm and version combined (``ed25519`` being the\nalgorithm and ``abc123`` being the version in the example below). Together,\nthis forms the Key ID. The version must have characters matching the regular\nexpression ``[a-zA-Z0-9_]``.",
                                                "type": "object"
                                            }
                                        },
                                        "required": [
                                            "server_name",
                                            "verify_keys"
                                        ],
                                        "title": "Server Keys",
                                        "type": "object"
                                    },
                                    "title": "Server Keys",
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "summary": "Query for several server's keys"
            }
        },
        "/query/{serverName}/{keyId}": {
            "get": {
                "description": "Query for another server's keys. The receiving (notary) server must\nsign the keys returned by the queried server.",
                "operationId": "perspectivesKeyQuery",
                "parameters": [
                    {
                        "description": "The server's DNS name to query",
                        "in": "path",
                        "name": "serverName",
                        "required": true,
                        "type": "string",
                        "x-example": "matrix.org"
                    },
                    {
                        "description": "**Deprecated**. Servers should not use this parameter and instead\nopt to return all keys, not just the requested one. The key ID to\nlook up.\n\nWhen excluded, the trailing slash on this endpoint is optional.",
                        "in": "path",
                        "name": "keyId",
                        "required": false,
                        "type": "string",
                        "x-example": "ed25519:abc123"
                    },
                    {
                        "description": "A millisecond POSIX timestamp in milliseconds indicating when the returned\ncertificates will need to be valid until to be useful to the requesting server.\n\nIf not supplied, the current time as determined by the notary server is used.",
                        "format": "int64",
                        "in": "query",
                        "name": "minimum_valid_until_ts",
                        "required": false,
                        "type": "integer",
                        "x-example": 1234567890
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The keys for the server, or an empty array if the server could not be reached\nand no cached keys were available.",
                        "schema": {
                            "description": "Server keys",
                            "example": {
                                "server_keys": [
                                    {
                                        "old_verify_keys": {
                                            "ed25519:0ldk3y": {
                                                "expired_ts": 1532645052628,
                                                "key": "VGhpcyBzaG91bGQgYmUgeW91ciBvbGQga2V5J3MgZWQyNTUxOSBwYXlsb2FkLg"
                                            }
                                        },
                                        "server_name": "example.org",
                                        "signatures": {
                                            "example.org": {
                                                "ed25519:abc123": "VGhpcyBzaG91bGQgYWN0dWFsbHkgYmUgYSBzaWduYXR1cmU"
                                            },
                                            "notary.server.com": {
                                                "ed25519:010203": "VGhpcyBpcyBhbm90aGVyIHNpZ25hdHVyZQ"
                                            }
                                        },
                                        "valid_until_ts": 1652262000000,
                                        "verify_keys": {
                                            "ed25519:abc123": {
                                                "key": "VGhpcyBzaG91bGQgYmUgYSByZWFsIGVkMjU1MTkgcGF5bG9hZA"
                                            }
                                        }
                                    }
                                ]
                            },
                            "properties": {
                                "server_keys": {
                                    "description": "The queried server's keys, signed by the notary server.",
                                    "items": {
                                        "description": "Server keys",
                                        "example": {
                                            "old_verify_keys": {
                                                "ed25519:0ldk3y": {
                                                    "expired_ts": 1532645052628,
                                                    "key": "VGhpcyBzaG91bGQgYmUgeW91ciBvbGQga2V5J3MgZWQyNTUxOSBwYXlsb2FkLg"
                                                }
                                            },
                                            "server_name": "example.org",
                                            "signatures": {
                                                "example.org": {
                                                    "ed25519:auto2": "VGhpcyBzaG91bGQgYWN0dWFsbHkgYmUgYSBzaWduYXR1cmU"
                                                }
                                            },
                                            "valid_until_ts": 1652262000000,
                                            "verify_keys": {
                                                "ed25519:abc123": {
                                                    "key": "VGhpcyBzaG91bGQgYmUgYSByZWFsIGVkMjU1MTkgcGF5bG9hZA"
                                                }
                                            }
                                        },
                                        "properties": {
                                            "old_verify_keys": {
                                                "additionalProperties": {
                                                    "example": {
                                                        "ed25519:0ldK3y": {
                                                            "expired_ts": 1532645052628,
                                                            "key": "VGhpcyBzaG91bGQgYmUgeW91ciBvbGQga2V5J3MgZWQyNTUxOSBwYXlsb2FkLg"
                                                        }
                                                    },
                                                    "properties": {
                                                        "expired_ts": {
                                                            "description": "POSIX timestamp in milliseconds for when this key expired.",
                                                            "example": 1532645052628,
                                                            "format": "int64",
                                                            "type": "integer"
                                                        },
                                                        "key": {
                                                            "description": "The `Unpadded Base64`_ encoded key.",
                                                            "example": "VGhpcyBzaG91bGQgYmUgeW91ciBvbGQga2V5J3MgZWQyNTUxOSBwYXlsb2FkLg",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "expired_ts",
                                                        "key"
                                                    ],
                                                    "title": "Old Verify Key",
                                                    "type": "object"
                                                },
                                                "description": "The public keys that the server used to use and when it stopped using them.\n\nThe object's key is the algorithm and version combined (``ed25519`` being the\nalgorithm and ``0ldK3y`` being the version in the example below). Together,\nthis forms the Key ID. The version must have characters matching the regular\nexpression ``[a-zA-Z0-9_]``.",
                                                "type": "object"
                                            },
                                            "server_name": {
                                                "description": "DNS name of the homeserver.",
                                                "example": "example.org",
                                                "type": "string"
                                            },
                                            "signatures": {
                                                "additionalProperties": {
                                                    "additionalProperties": {
                                                        "type": "string"
                                                    },
                                                    "type": "object"
                                                },
                                                "description": "Digital signatures for this object signed using the ``verify_keys``.\n\nThe signature is calculated using the process described at `Signing\nJSON`_.",
                                                "title": "Signatures",
                                                "type": "object"
                                            },
                                            "valid_until_ts": {
                                                "description": "POSIX timestamp when the list of valid keys should be refreshed. This field MUST\nbe ignored in room versions 1, 2, 3, and 4. Keys used beyond this timestamp MUST\nbe considered invalid, depending on the `room version specification`_.\n\nServers MUST use the lesser of this field and 7 days into the future when\ndetermining if a key is valid. This is to avoid a situation where an attacker\npublishes a key which is valid for a significant amount of time without a way\nfor the homeserver owner to revoke it.",
                                                "example": 1052262000000,
                                                "format": "int64",
                                                "type": "integer"
                                            },
                                            "verify_keys": {
                                                "additionalProperties": {
                                                    "example": {
                                                        "ed25519:abc123": {
                                                            "key": "VGhpcyBzaG91bGQgYmUgYSByZWFsIGVkMjU1MTkgcGF5bG9hZA"
                                                        }
                                                    },
                                                    "properties": {
                                                        "key": {
                                                            "description": "The `Unpadded Base64`_ encoded key.",
                                                            "example": "VGhpcyBzaG91bGQgYmUgYSByZWFsIGVkMjU1MTkgcGF5bG9hZA",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "key"
                                                    ],
                                                    "title": "Verify Key",
                                                    "type": "object"
                                                },
                                                "description": "Public keys of the homeserver for verifying digital signatures.\n\nThe object's key is the algorithm and version combined (``ed25519`` being the\nalgorithm and ``abc123`` being the version in the example below). Together,\nthis forms the Key ID. The version must have characters matching the regular\nexpression ``[a-zA-Z0-9_]``.",
                                                "type": "object"
                                            }
                                        },
                                        "required": [
                                            "server_name",
                                            "verify_keys"
                                        ],
                                        "title": "Server Keys",
                                        "type": "object"
                                    },
                                    "title": "Server Keys",
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "summary": "Query for another server's keys"
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "swagger": "2.0"
}